[{"/Users/hooch/dorg/govern/packages/govern-console/src/index.tsx":"1","/Users/hooch/dorg/govern/packages/govern-console/src/reportWebVitals.ts":"2","/Users/hooch/dorg/govern/packages/govern-console/src/App.tsx":"3","/Users/hooch/dorg/govern/packages/govern-console/src/AragonTheme.tsx":"4","/Users/hooch/dorg/govern/packages/govern-console/src/EthersWallet.tsx":"5","/Users/hooch/dorg/govern/packages/govern-console/src/containers/HomePage/HomePage.tsx":"6","/Users/hooch/dorg/govern/packages/govern-console/src/containers/CreateDAO/CreateDAO.tsx":"7","/Users/hooch/dorg/govern/packages/govern-console/src/containers/NewProposal/NewProposal.tsx":"8","/Users/hooch/dorg/govern/packages/govern-console/src/containers/ProposalDetails/ProposalDetails.tsx":"9","/Users/hooch/dorg/govern/packages/govern-console/src/containers/Console/ConsoleMainPage.tsx":"10","/Users/hooch/dorg/govern/packages/govern-console/src/containers/DAO/DaoMainPage.tsx":"11","/Users/hooch/dorg/govern/packages/govern-console/src/components/Header/Header.tsx":"12","/Users/hooch/dorg/govern/packages/govern-console/src/components/InputFields/InputField.tsx":"13","/Users/hooch/dorg/govern/packages/govern-console/src/components/Button/ANButton.tsx":"14","/Users/hooch/dorg/govern/packages/govern-console/src/containers/DAO/queries.tsx":"15","/Users/hooch/dorg/govern/packages/govern-console/src/containers/Console/queries.tsx":"16","/Users/hooch/dorg/govern/packages/govern-console/src/components/ProposalCards/ProposalCard.tsx":"17","/Users/hooch/dorg/govern/packages/govern-console/src/containers/ProposalDetails/queries.tsx":"18","/Users/hooch/dorg/govern/packages/govern-console/src/components/DaoHeader/DaoHeader.tsx":"19","/Users/hooch/dorg/govern/packages/govern-console/src/components/DaoCards/DaoCard.tsx":"20","/Users/hooch/dorg/govern/packages/govern-console/src/components/ConsoleHeader/ConsoleHeader.tsx":"21","/Users/hooch/dorg/govern/packages/govern-console/src/ReusableStyles.tsx":"22","/Users/hooch/dorg/govern/packages/govern-console/src/components/Modal/AddActionsModal.tsx":"23","/Users/hooch/dorg/govern/packages/govern-console/src/components/Modal/NewActionModal.tsx":"24","/Users/hooch/dorg/govern/packages/govern-console/src/components/TextArea/TextArea.tsx":"25","/Users/hooch/dorg/govern/packages/govern-console/src/components/HelpButton/HelpButton.tsx":"26","/Users/hooch/dorg/govern/packages/govern-console/src/components/Wallet/Wallet.tsx":"27","/Users/hooch/dorg/govern/packages/govern-console/src/components/Labels/Label.tsx":"28"},{"size":1304,"mtime":1618338562396,"results":"29","hashOfConfig":"30"},{"size":425,"mtime":1618330760298,"results":"31","hashOfConfig":"30"},{"size":588,"mtime":1618837001897,"results":"32","hashOfConfig":"30"},{"size":6473,"mtime":1618435088643,"results":"33","hashOfConfig":"30"},{"size":1114,"mtime":1618841585461,"results":"34","hashOfConfig":"30"},{"size":2941,"mtime":1618841585464,"results":"35","hashOfConfig":"30"},{"size":12462,"mtime":1618837001900,"results":"36","hashOfConfig":"30"},{"size":11333,"mtime":1618841593661,"results":"37","hashOfConfig":"30"},{"size":15778,"mtime":1618837001902,"results":"38","hashOfConfig":"30"},{"size":3459,"mtime":1618837001898,"results":"39","hashOfConfig":"30"},{"size":6039,"mtime":1618837001901,"results":"40","hashOfConfig":"30"},{"size":1510,"mtime":1618338562392,"results":"41","hashOfConfig":"30"},{"size":2117,"mtime":1618834731566,"results":"42","hashOfConfig":"30"},{"size":3561,"mtime":1618338562389,"results":"43","hashOfConfig":"30"},{"size":268,"mtime":1618435082006,"results":"44","hashOfConfig":"30"},{"size":479,"mtime":1618837001900,"results":"45","hashOfConfig":"30"},{"size":2810,"mtime":1618435082004,"results":"46","hashOfConfig":"30"},{"size":610,"mtime":1618435082009,"results":"47","hashOfConfig":"30"},{"size":2621,"mtime":1618435082002,"results":"48","hashOfConfig":"30"},{"size":3364,"mtime":1618338562390,"results":"49","hashOfConfig":"30"},{"size":2572,"mtime":1618330760289,"results":"50","hashOfConfig":"30"},{"size":398,"mtime":1618330760287,"results":"51","hashOfConfig":"30"},{"size":4656,"mtime":1618435088645,"results":"52","hashOfConfig":"30"},{"size":4758,"mtime":1618435088646,"results":"53","hashOfConfig":"30"},{"size":281,"mtime":1618330760294,"results":"54","hashOfConfig":"30"},{"size":1702,"mtime":1618330760292,"results":"55","hashOfConfig":"30"},{"size":3092,"mtime":1618837001897,"results":"56","hashOfConfig":"30"},{"size":2145,"mtime":1618330760292,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wbjtmw",{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":3,"warningCount":23,"fixableErrorCount":3,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},"/Users/hooch/dorg/govern/packages/govern-console/src/index.tsx",[],"/Users/hooch/dorg/govern/packages/govern-console/src/reportWebVitals.ts",["135"],"import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/Users/hooch/dorg/govern/packages/govern-console/src/App.tsx",["136","137","138"],"import React from 'react';\nimport { Web3ReactProvider } from '@web3-react/core';\nimport Home from 'containers/HomePage/HomePage';\nimport { Web3Provider } from '@ethersproject/providers';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { WalletProvider } from './EthersWallet';\n\nfunction getLibrary(provider: any): Web3Provider {\n  const library = new Web3Provider(provider);\n  library.pollingInterval = 12000;\n  return library;\n}\n\nexport default function App() {\n  return (\n    <WalletProvider>\n      <Router>\n        <Home />\n      </Router>\n    </WalletProvider>\n  );\n}\n","/Users/hooch/dorg/govern/packages/govern-console/src/AragonTheme.tsx",["139"],"import { createMuiTheme } from '@material-ui/core/styles';\nimport lightBlue from '@material-ui/core/colors/lightBlue';\n\ninterface CustomTheme {\n  mainBackground: string;\n  gradients: {\n    aragon: string;\n    challenge: string;\n  };\n  plain: {\n    blue: string;\n    cyan: string;\n    sapphire: string;\n    amethyst: string;\n  };\n  greyscale: {\n    solid: string;\n    medium: string;\n    soft: string;\n    light: string;\n  };\n  informative: {\n    green: string;\n    orange: string;\n    yellow: string;\n    red: string;\n  };\n  light: {\n    cream: string;\n    skin: string;\n    sky: string;\n    grass: string;\n    violet: string;\n  };\n  daoCard: {\n    background: string;\n    border: string;\n    labelColor: string;\n    fontFamily: string;\n    fontStyle: string;\n    labeFontSize: string;\n    labelLineHeight: string;\n    labelFontWeight: number;\n    propertyLabelFontWeight: number;\n    propertLabelFontSize: number;\n    propertyLabelLineHeight: string;\n    propertyTextLineHeight: string;\n    propertyTextFontWeight: number;\n    propertyTextFontSize: string;\n    propertyLabelColor: string;\n    propertyTextColor: string;\n  };\n  proposalCard: {\n    background: string;\n    border: string;\n    labelColor: string;\n    labelFontSize: string;\n    labelFontWeight: number;\n    labelLineHeight: string;\n    fontStyle: string;\n    fontFamily: string;\n    dateColor: string;\n    dateFontSize: string;\n    dateLineHeight: string;\n    dateFontWeight: number;\n  };\n  daoHeader: {\n    background: string;\n    labelFontSize: string;\n    labelLineHeight: string;\n    labelColor: string;\n    labelFontWeight: number;\n    valueFontSize: string;\n    valueFontWeight: number;\n    valueLineHeight: string;\n    valueColor: string;\n  };\n  modal: {\n    labelFontSize: string;\n    labelLineHeight: string;\n    labelColor: string;\n    labelFontWeight: number;\n    valueFontSize: string;\n    valueFontWeight: number;\n    valueLineHeight: string;\n    valueColor: string;\n  };\n  black: string;\n  white: string;\n}\n\n// https://material-ui.com/customization/theming/#custom-variables\ndeclare module '@material-ui/core/styles/createMuiTheme' {\n  interface Theme {\n    custom: CustomTheme;\n  }\n  // allow configuration using `createMuiTheme`\n  interface ThemeOptions {\n    custom: CustomTheme;\n  }\n}\n\nconst typography = {\n  fontFamily: 'Manrope',\n  h1: {\n    fontSize: 40,\n    fontWeight: 600,\n    letterSpacing: '-0.02em',\n  },\n  h2: {\n    fontSize: 36,\n    fontWeight: 500,\n    letterSpacing: '-0.01em',\n  },\n  h3: {\n    fontSize: 24,\n    fontWeight: 500,\n    letterSpacing: '-0.01em',\n  },\n  h4: {\n    fontSize: 18,\n    fontWeight: 600,\n  },\n  h5: {\n    fontSize: 12,\n    fontWeight: 600,\n  },\n  text: {\n    normal: {\n      fontSize: 16,\n      fontWeight: 500,\n      color: '#7483B2',\n    },\n    link: {\n      fontSize: 16,\n      fontWeight: 500,\n      color: '#0176FF',\n    },\n    bold: {\n      fontSize: 16,\n      fontWeight: 500,\n      color: '#20232C',\n    },\n    small: {\n      fontSize: 14,\n      fontWeight: 500,\n      color: '#20232C',\n    },\n  },\n};\n\nconst custom = {\n  mainBackground: '#F6F9FC',\n  gradients: {\n    aragon: 'linear-gradient(107.79deg, #00C2FF 1.46%, #01E8F7 100%)',\n    challenge: 'linear-gradient(92.89deg, #F7B201 -16.92%, #FF7A00 100%)',\n  },\n  plain: {\n    blue: '#00C2FF',\n    cyan: '#01E8F7',\n    sapphire: '#0176FF',\n    amethyst: '#865BFF',\n  },\n  greyscale: {\n    solid: '#7483B2',\n    medium: '#B0BDE6',\n    soft: '#D9E0F5',\n    light: '#F5F7FF',\n  },\n  informative: {\n    green: '#18D179',\n    orange: '#FF7A00',\n    yellow: '#FFC83A',\n    red: '#FF5823',\n  },\n  light: {\n    cream: '#FFF9EF',\n    skin: '#FFF1ED',\n    sky: '#ECFAFF',\n    grass: '#EFFFF7',\n    violet: '#F3F4FF',\n  },\n  daoCard: {\n    background: '#FFFFFF',\n    border: '#ECF1F7',\n    labelColor:\n      '-webkit-linear-gradient(107.79deg, #87E0FF 1.46%, #7A7AF7 100%)',\n    fontFamily: 'Manrope',\n    fontStyle: 'normal',\n    labeFontSize: '24px',\n    labelLineHeight: '30.02px',\n    labelFontWeight: 600,\n    propertyLabelFontWeight: 400,\n    propertLabelFontSize: 15,\n    propertyLabelLineHeight: '18.77px',\n    propertyTextLineHeight: '27.52px',\n    propertyTextFontWeight: 500,\n    propertyTextFontSize: '22px',\n    propertyLabelColor: '#7E89AC',\n    propertyTextColor: '#20232C',\n  },\n  proposalCard: {\n    background: '#FFFFFF',\n    border: '#ECF1F7',\n    labelColor: '#20232C',\n    labelFontSize: '28px',\n    labelFontWeight: 600,\n    labelLineHeight: '38px',\n    fontStyle: 'normal',\n    fontFamily: 'Manrope',\n    dateColor: '#7483AB',\n    dateFontSize: '18px',\n    dateLineHeight: '24.84px',\n    dateFontWeight: 400,\n  },\n  daoHeader: {\n    background: `linear-gradient(107.79deg, #E4F8FF 1.46%, #F1F1FF 100%)`,\n    labelFontSize: '18px',\n    labelLineHeight: '24.84px',\n    labelColor: '#7483B3',\n    labelFontWeight: 400,\n    valueFontSize: '38px',\n    valueFontWeight: 500,\n    valueLineHeight: '51.91px',\n    valueColor: '#20232C',\n  },\n  modal: {\n    labelFontSize: '18px',\n    labelLineHeight: '24.59px',\n    labelColor: '#7483B3',\n    labelFontWeight: 400,\n    valueFontSize: '18px',\n    valueFontWeight: 500,\n    valueLineHeight: '24.59px',\n    valueColor: '#20232C',\n  },\n  black: '#20232C',\n  white: '#FFFFFF',\n};\nconst breakpoints = {\n  values: {\n    xs: 320,\n    sm: 768,\n    md: 964,\n    lg: 964,\n    xl: 964,\n  },\n};\nexport const lightTheme = createMuiTheme({\n  custom,\n  palette: {\n    background: {\n      default: '#fff',\n    },\n  },\n  typography,\n  breakpoints,\n  overrides: {\n    // MuiPickersToolbar: {\n    //   toolbar: {\n    //     backgroundColor: '#00C2FF',\n    //   },\n    // },\n    // MuiPickersCalendarHeader: {\n    //   switchHeader: {\n    //     // backgroundColor: lightBlue.A200,\n    //     // color: \"white\",\n    //   },\n    // },\n    // MuiPickersDay: {\n    //   daySelected: {\n    //     backgroundColor: '#00C2FF',\n    //   },\n    //   dayDisabled: {\n    //     color: lightBlue['100'],\n    //   },\n    //   current: {\n    //     color: lightBlue['900'],\n    //   },\n    // },\n    // MuiPickersClock: {\n    //   pin: {\n    //     backgroundColor: '#00C2FF',\n    //   },\n    // },\n    // MuiPickersClockPointer: {\n    //   thumb: {\n    //     border: '14px solid #00C2FF',\n    //   },\n    //   noPoint: {\n    //     backgroundColor: '#00C2FF',\n    //   },\n    //   pointer: {\n    //     backgroundColor: '#00C2FF',\n    //   },\n    // },\n    // MuiPickersModal: {\n    //   dialogAction: {\n    //     color: lightBlue['400'],\n    //   },\n    // },\n  },\n});\n","/Users/hooch/dorg/govern/packages/govern-console/src/EthersWallet.tsx",["140"],"import React, { useContext, useMemo } from 'react';\nimport { providers as EthersProviders } from 'ethers';\nimport { UseWalletProvider, useWallet } from 'use-wallet';\n\nconst WalletAugmentedContext = React.createContext({});\n\nfunction useWalletAugmented() {\n  return useContext(WalletAugmentedContext);\n}\n\n// Adds Ethers.js to the useWallet() object\nconst WalletAugmented: React.FC<unknown> = ({ children }) => {\n  const wallet = useWallet();\n  const ethereum: any = wallet.ethereum;\n\n  const ethersProvider = useMemo(\n    () => (ethereum ? new EthersProviders.Web3Provider(ethereum) : null),\n    [ethereum],\n  );\n\n  const contextValue = useMemo(() => ({ ...wallet, ethersProvider }), [\n    wallet,\n    ethersProvider,\n  ]);\n\n  return (\n    <WalletAugmentedContext.Provider value={contextValue}>\n      {children}\n    </WalletAugmentedContext.Provider>\n  );\n};\n\nconst WalletProvider: React.FC<unknown> = ({ children }) => {\n  return (\n    <UseWalletProvider chainId={4}>\n      <WalletAugmented>{children}</WalletAugmented>\n    </UseWalletProvider>\n  );\n};\n\nexport { useWalletAugmented as useWallet, WalletProvider };\n","/Users/hooch/dorg/govern/packages/govern-console/src/containers/HomePage/HomePage.tsx",["141","142","143"],"import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\nimport { styled } from '@material-ui/core/styles';\n\nimport Header from 'components/Header/Header';\n// import NavigationBar from '../../components/Navigation';\nimport ConsoleMainPage from 'containers/Console/ConsoleMainPage';\nimport DaoMainPage from 'containers/DAO/DaoMainPage';\nimport ProposalDetails from 'containers/ProposalDetails/ProposalDetails';\nimport NewProposal from 'containers/NewProposal/NewProposal';\nimport NewDaoContainer from 'containers/CreateDAO/CreateDAO';\n\nconst HomePage = ({ ...props }) => {\n  const AppWrapper = styled('div')({\n    width: 'calc(100vw - 96px)',\n    margin: 'auto',\n  });\n  const history = useHistory();\n  debugger;\n  const [selectedDao, updateSelectedDao] = React.useState<any>({});\n  const [selectedProposal, updateSelectedProposal] = React.useState<any>({});\n\n  const updateSelectedDaoAndPushToHistory = React.useCallback(\n    (daoDetails: any) => {\n      updateSelectedDao(daoDetails);\n      sessionStorage.setItem('selectedDao', JSON.stringify(daoDetails));\n      history.push(`/daos/${daoDetails.name}`);\n    },\n    [history],\n  );\n  const onClickProposalCard = React.useCallback(\n    (proposalDetails: any) => {\n      history.push(`/proposals/${proposalDetails.id}`);\n      sessionStorage.setItem(\n        'selectedProposal',\n        JSON.stringify(proposalDetails),\n      );\n      updateSelectedProposal(proposalDetails);\n    },\n    [history],\n  );\n  const onClickNewProposal = React.useCallback(() => {\n    debugger;\n    history.push(`/${selectedDao.name}/new-proposal`);\n  }, [history, selectedDao]);\n\n  const onClickBackFromProposalPage = () => {\n    history.goBack();\n  };\n\n  return (\n    <AppWrapper>\n      <Header />\n      {/* add breadcrumbs later */}\n      <Switch>\n        <div>\n          <Route exact path=\"/\">\n            <ConsoleMainPage\n              updateSelectedDao={updateSelectedDaoAndPushToHistory}\n            />\n          </Route>\n          <Route exact path=\"/daos/:daoName\">\n            <DaoMainPage\n              daoDetails={selectedDao}\n              onClickProposalCard={onClickProposalCard}\n              onClickNewProposal={onClickNewProposal}\n            />\n          </Route>\n          <Route exact path=\"/proposals/:id\">\n            <ProposalDetails\n              selectedProposal={selectedProposal}\n              onClickBack={onClickBackFromProposalPage}\n            />\n          </Route>\n          <Route exact path=\"/:daoName/new-proposal\">\n            <NewProposal />\n          </Route>\n          <Route exact path=\"/create-dao\">\n            <NewDaoContainer />\n          </Route>\n          {/* <Route path=\"/about\">\n        <About />\n      </Route>\n      <Route path=\"/dashboard\">\n        <Dashboard />\n      </Route>\n    */}\n        </div>\n      </Switch>\n      {/* <Footer /> */}\n    </AppWrapper>\n  );\n};\n\nexport default HomePage;\n","/Users/hooch/dorg/govern/packages/govern-console/src/containers/CreateDAO/CreateDAO.tsx",[],"/Users/hooch/dorg/govern/packages/govern-console/src/containers/NewProposal/NewProposal.tsx",["144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169"],"import React, { useState, useRef, memo, useCallback } from 'react';\nimport { ANButton } from '../../components/Button/ANButton';\nimport { useTheme, styled, Theme } from '@material-ui/core/styles';\nimport useStyles from '../../ReusableStyles';\nimport backButtonIcon from '../../images/back-btn.svg';\nimport Typography from '@material-ui/core/Typography';\nimport { HelpButton } from '../../components/HelpButton/HelpButton';\nimport TextArea from '../../components/TextArea/TextArea';\nimport Paper from '@material-ui/core/Paper';\nimport { NewActionModal } from '../../components/Modal/NewActionModal';\nimport { AddActionsModal } from '../../components/Modal/AddActionsModal';\nimport { InputField } from '../../components/InputFields/InputField';\nimport { ethers } from 'ethers';\nimport { defaultAbiCoder } from 'ethers/lib/utils';\nimport { useWallet } from '../../EthersWallet';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Proposal,\n  ProposalOptions,\n  PayloadType,\n} from '@aragon/govern/public/proposal';\n// import {\n//   Proposal,\n//   ProposalParams,\n//   PayloadType,\n//   ActionType,\n// } from '@aragon/govern';\nexport interface NewProposalProps {\n  /**\n   * callback for click on schedule\n   */\n  onSchedule?: any;\n}\n\nexport interface AddedActionsProps {\n  /**\n   * Added actions\n   */\n  selectedActions?: any;\n}\n\nconst SubTitle = styled(Typography)({\n  fontFamily: 'Manrope',\n  fontStyle: 'normal',\n  fontWeight: 'normal',\n  fontSize: 18,\n  lineHeight: '25px',\n  color: '#7483AB',\n});\n\nconst TextBlack = styled(Typography)({\n  fontFamily: 'Manrope',\n  fontStyle: 'normal',\n  fontWeight: 400,\n  fontSize: 18,\n  lineHeight: '25px',\n  color: '0A0B0B',\n});\n\nconst ContractAddressText = styled(Typography)({\n  fontFamily: 'Manrope',\n  fontStyle: 'normal',\n  fontWeight: 600,\n  fontSize: 18,\n  lineHeight: '25px',\n  color: '0A0B0B',\n});\n\nconst AddedActions: React.FC<AddedActionsProps> = ({\n  selectedActions,\n  ...props\n}) => {\n  const actionDivStyle = {\n    width: '862px',\n    border: '2px solid #E2ECF5',\n    borderRadius: '10px',\n    paddingLeft: '24px',\n    paddingRight: '24px',\n    paddingBottom: '22px',\n    paddingTop: '22px',\n    marginTop: '18px',\n  };\n\n  const actionNameDivStyle = {\n    paddingBottom: '21px',\n    borderBottom: '2px solid #E2ECF5',\n  };\n\n  return selectedActions.map((action: any) => (\n    <div style={{ marginTop: '24px' }} key={action.name}>\n      <div>\n        <SubTitle>Contract Address</SubTitle>\n        <ContractAddressText>{action.contractAddress}</ContractAddressText>\n      </div>\n      <div style={actionDivStyle}>\n        <div style={actionNameDivStyle}>\n          <TextBlack>{action.name}</TextBlack>\n        </div>\n        {action.item.inputs.map((input: any) => (\n          <div key={input.name}>\n            <div style={{ marginTop: '20px' }}>\n              <SubTitle>{input.name}</SubTitle>\n            </div>\n            <div style={{ marginTop: '20px' }}>\n              <InputField\n                label=\"\"\n                onInputChange={(val) => {\n                  console.log(val);\n                }}\n                height=\"46px\"\n                width=\"814px\"\n                placeholder={input.name}\n              ></InputField>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  ));\n};\n\nconst NewProposal: React.FC<NewProposalProps> = ({ ...props }) => {\n  const theme = useTheme();\n  const history = useHistory();\n  let daoDetails: any = null;\n  const daoDetailsString = sessionStorage.getItem('selectedDao');\n  if (daoDetailsString) {\n    daoDetails = JSON.parse(daoDetailsString);\n  }\n  if (!daoDetails) {\n    history.push('/');\n  }\n  debugger;\n  const classes = useStyles();\n  const justification: { current: string } = useRef('');\n  // const [isAddingActions, updateIsAddingActions] = useState(false);\n  const [selectedActions, updateSelectedOptions] = useState([]);\n  // const [modalStyle] = React.useState(getModalStyle);\n  const [isInputModalOpen, setInputModalOpen] = useState(false);\n  const [isActionModalOpen, setActionModalOpen] = useState(false);\n  const abiFunctions = useRef([]);\n\n  const context: any = useWallet();\n  const {\n    connector,\n    account,\n    balance,\n    chainId,\n    connect,\n    connectors,\n    ethereum,\n    error,\n    getBlockNumber,\n    networkName,\n    reset,\n    status,\n    type,\n    ethersProvider,\n  } = context;\n  const submitter: string = account;\n  // const executor = daoDetails.executor.id;\n  // const nonce: number = daoDetails.queue.nonce;\n\n  const handleInputModalOpen = () => {\n    setInputModalOpen(true);\n  };\n\n  const handleInputModalClose = () => {\n    setInputModalOpen(false);\n  };\n\n  const handleActionModalOpen = () => {\n    setActionModalOpen(true);\n  };\n\n  const handleActionModalClose = () => {\n    setActionModalOpen(false);\n  };\n\n  const onAddNewAction = (action: any) => {\n    const newActions = [...selectedActions, action] as any;\n    updateSelectedOptions(newActions);\n  };\n  // const onScheduleProposal = () => {};\n\n  const WrapperDiv = styled(Paper)({\n    width: '100%',\n    background: theme.custom.white,\n    height: 'auto',\n    padding: '50px 273px 76px 273px',\n    // display: 'block',\n    boxSizing: 'border-box',\n    boxShadow: 'none',\n    // flexDirection: 'column',\n  });\n  const BackButton = styled('div')({\n    height: 25,\n    width: 62,\n    cursor: 'pointer',\n    position: 'relative',\n    left: -6,\n  });\n  const Title = styled(Typography)({\n    fontFamily: 'Manrope',\n    fontStyle: 'normal',\n    fontWeight: 600,\n    fontSize: 28,\n    lineHeight: '38px',\n    color: '#20232C',\n    marginTop: 17,\n    height: 50,\n    display: 'block',\n  });\n  const JustificationTextArea = styled(TextArea)({\n    background: '#FFFFFF',\n    border: '2px solid #EFF1F7',\n    boxSizing: 'border-box',\n    boxShadow: 'inset 0px 2px 3px 0px rgba(180, 193, 228, 0.35)',\n    borderRadius: '8px',\n    width: '100%',\n    height: 104,\n    padding: '11px 21px',\n    fontSize: 18,\n    fontStyle: 'normal',\n    fontWeight: 400,\n    lineHeight: '25px',\n    letterSpacing: '0em',\n    // border: '0 !important',\n    '& .MuiInputBase-root': {\n      border: 0,\n      width: '100%',\n      input: {\n        width: '100%',\n      },\n    },\n    '& .MuiInput-underline:after': {\n      border: 0,\n    },\n    '& .MuiInput-underline:before': {\n      border: 0,\n    },\n    '& .MuiInput-underline:hover:not(.Mui-disabled):before': {\n      border: 0,\n    },\n  });\n\n  const isProposalValid = () => {\n    if (justification.current === '') return false;\n    if (selectedActions.length === 0) return false;\n    return true;\n  };\n\n  const onGenerateActionsFromAbi = async (\n    contractAddress: string,\n    abi: any,\n  ) => {\n    console.log(contractAddress, abi);\n    const functions = [] as any;\n    await abi.forEach((item: any) => {\n      const { name, type, stateMutability } = item;\n      if (\n        type === 'function' &&\n        stateMutability !== 'view' &&\n        stateMutability !== 'pure'\n      ) {\n        const data = {\n          name,\n          type,\n          item,\n          contractAddress,\n          abi,\n        };\n        functions.push(data);\n      }\n    });\n\n    abiFunctions.current = functions;\n    console.log(abiFunctions);\n    handleInputModalClose();\n    handleActionModalOpen();\n  };\n  type payloadArgs = {\n    submitter: string;\n    executor: string;\n    nonce?: number;\n  };\n\n  const buildPayload = ({ submitter, executor, nonce }: payloadArgs) => {\n    const tokenAddress = '0x9fB402A33761b88D5DcbA55439e6668Ec8D4F2E8';\n    const payload: PayloadType = {\n      nonce,\n      executionTime: Math.floor(Date.now() / 1000) + 50,\n      submitter,\n      executor,\n      actions: [{ to: tokenAddress, value: 0, data: '0x' }],\n      allowFailuresMap: ethers.utils.hexZeroPad('0x0', 32),\n      proof: justification.current,\n    };\n    return payload;\n  };\n\n  const noCollateral = {\n    id: '-1',\n    // token: ethers.constants.AddressZero,\n    amount: 0,\n  };\n  const goodConfig: any = {\n    executionDelay: 1, // how many seconds to wait before being able to call `execute`.\n    scheduleDeposit: noCollateral,\n    challengeDeposit: noCollateral,\n    // resolver: daoDetails.queue.config.resolver,\n    resolver: '0xC464EB732A1D2f5BbD705727576065C91B2E9f18',\n    rules: '0x',\n    maxCalldataSize: 100000, // initial maxCalldatasize\n  };\n  const scheduleProposal = async () => {\n    //const payload = buildPayload({ submitter, executor, nonce });\n    const config = daoDetails.config;\n    let proposalOptions: ProposalOptions = {\n      provider: ethersProvider,\n    };\n    let proposal = new Proposal(daoDetails.queue.address, proposalOptions);\n    let scheduleResult = await proposal.schedule({\n      payload,\n      config: goodConfig,\n    });\n    console.log(scheduleResult);\n  };\n\n  // React.useEffect(() => {\n  //   if (!daoDetails.id) {\n  //     let daoDetails: any = sessionStorage.getItem('selectedDao');\n  //     if (!daoDetails.id) {\n  //       let { daoName } = useParams<any>();\n  //       let {\n  //         data: daoDetailsData,\n  //         loading: isLoadingDaoDetails,\n  //         error: daoLoadingError,\n  //       } = useQuery(GET_DAO_BY_NAME, {\n  //         variables: { name: daoName },\n  //       });\n  //       updateDaoDetails(daoDetailsData);\n  //     }\n  //   }\n  // });\n\n  return (\n    <>\n      <WrapperDiv>\n        <BackButton>\n          <img src={backButtonIcon} />\n        </BackButton>\n        <Title>New Proposal</Title>\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'row',\n            marginBottom: '10px',\n          }}\n        >\n          <div>\n            <SubTitle>Justification</SubTitle>{' '}\n          </div>\n          <div style={{ marginLeft: '10px' }}>{<HelpButton helpText=\"\" />}</div>\n        </div>\n        <InputField\n          // ref={}\n          value={justification.current}\n          onInputChange={(val) => {\n            justification.current = val;\n          }}\n          placeholder={'Enter Justification '}\n          height={'104px'}\n          width={'798px'}\n          label=\"\"\n        ></InputField>\n        <Title>Actions</Title>\n        {selectedActions.length === 0 ? (\n          <SubTitle>No actions defined Yet</SubTitle>\n        ) : (\n          <div>\n            <AddedActions selectedActions={selectedActions} />\n          </div>\n        )}\n        <br />\n        <ANButton\n          label=\"Add new action\"\n          // width={155}\n          // height={45}\n          type=\"secondary\"\n          color=\"#00C2FF\"\n          style={{ marginTop: 40 }}\n          onClick={handleInputModalOpen}\n        />\n        <br />\n        <ANButton\n          label=\"Schedule/Submit\"\n          // width={178}\n          // height={45}\n          type=\"primary\"\n          // color=\"#00C2FF\"\n          style={{ marginTop: 16 }}\n          // disabled={!isProposalValid()}\n          onClick={() => scheduleProposal()}\n        />\n        <NewActionModal\n          onCloseModal={handleInputModalClose}\n          onGenerate={onGenerateActionsFromAbi}\n          open={isInputModalOpen}\n        ></NewActionModal>\n        <AddActionsModal\n          onCloseModal={handleActionModalClose}\n          open={isActionModalOpen}\n          onAddAction={onAddNewAction}\n          actions={abiFunctions.current as any}\n        ></AddActionsModal>\n      </WrapperDiv>\n    </>\n  );\n};\n\nexport default memo(NewProposal);\n","/Users/hooch/dorg/govern/packages/govern-console/src/containers/ProposalDetails/ProposalDetails.tsx",["170","171","172"],"import React from 'react';\nimport { styled, useTheme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport backButtonIcon from 'images/back-btn.svg';\nimport { Label } from 'components/Labels/Label';\nimport { useHistory } from 'react-router-dom';\nimport { GET_PROPOSAL_LIST_QUERY } from './queries';\nimport { useQuery } from '@apollo/client';\nimport { useEffect } from 'react';\nimport { ANButton } from 'components/Button/ANButton';\nimport { useWallet } from 'use-wallet';\n\n// import { InputField } from 'component/InputField/InputField';\ninterface ProposalDetailsProps {\n  selectedProposal: any;\n  onClickBack?: any;\n}\n\nconst ProposalDetails: React.FC<ProposalDetailsProps> = ({\n  onClickBack,\n  selectedProposal,\n}) => {\n  const theme = useTheme();\n  const context = useWallet();\n  const { ethereum } = context;\n  console.log(ethereum);\n\n  //* styled Components\n\n  const StyledPaper = styled(Paper)({\n    backgroundColor: '#ffffff',\n    height: 'auto',\n    minHeight: '1000px',\n    padding: '40px 48px 58px 48px',\n  });\n  const BackButton = styled('div')({\n    height: 25,\n    width: 62,\n    cursor: 'pointer',\n    position: 'relative',\n    marginBottom: '36px',\n  });\n  const ProposalStatus = styled('div')({\n    height: '20px',\n    width: '100%',\n    display: 'block',\n    boxSizing: 'border-box',\n  });\n  const ProposalId = styled('div')({\n    height: '44px',\n    width: '100%',\n    color: theme.custom.black,\n    fontWeight: 600,\n    fontSize: '32px',\n    lineHeight: '44px',\n    marginTop: '11px',\n    textOverflow: 'ellipsis',\n    boxSizing: 'border-box',\n  });\n  const DateDisplay = styled('div')({\n    height: '25px',\n    width: '100%',\n    color: '#7483B3',\n    marginTop: '10px',\n    fontStyle: 'normal',\n    fontWeight: 'normal',\n    boxSizing: 'border-box',\n  });\n  const getLabelColor = () => {\n    if (selectedProposal.state === 'Scheduled') return 'yellow';\n    if (selectedProposal.state === 'Executed') return 'green';\n    if (selectedProposal.state === 'Challenged') return 'red';\n  };\n  const DetailsWrapper = styled('div')({\n    display: 'flex',\n    justifyContent: 'space-between',\n    marginTop: '47px',\n  });\n  const ProposalDetailsWrapper = styled('div')({\n    width: 'calc(100% - 443px)',\n    boxSizing: 'border-box',\n    borderRadius: '16px',\n    minHeight: '900px',\n    border: ' 2px solid #E2ECF5',\n    padding: '32px 30px',\n  });\n  const WidgetWrapper = styled('div')({\n    width: '427px',\n  });\n  const TitleText = styled(Typography)({\n    fontWeight: 600,\n    fontSize: '28px',\n    lineHeight: '38px',\n    height: '38px',\n    width: '100%',\n    boxSizing: 'border-box',\n  });\n  const InfoWrapper = styled('div')({\n    // display: 'flex',\n    // flexDirection: 'column',\n    // justifyContent: 'space-between',\n    marginTop: '9px',\n    width: '100%',\n    boxSizing: 'border-box',\n  });\n  const InfoKeyDiv = styled('div')({\n    fontFamily: 'Manrope',\n    fontStyle: 'normal',\n    fontWeight: 'normal',\n    fontSize: '18px',\n    height: '25px',\n    width: 'fit-content',\n    display: 'inline-block',\n    color: '#7483B3',\n  });\n  const InfoValueDivInline = styled('div')({\n    fontFamily: 'Manrope',\n    fontStyle: 'normal',\n    fontWeight: 'normal',\n    color: '#20232C',\n    display: 'inline-block',\n    width: 'fit-content',\n    marginLeft: '9px',\n    '& a': {\n      width: '100%',\n      color: '#0094FF',\n      boxSizing: 'border-box',\n    },\n  });\n  const InfoValueDivBlock = styled('div')({\n    display: 'flex',\n    flexDirection: 'column',\n    width: '75%',\n    height: 'auto',\n    fontFamily: 'Manrope',\n    fontStyle: 'normal',\n    fontWeight: 'normal',\n    color: '#20232C',\n    fontSize: '18px',\n    marginTop: '9px',\n    paddingLeft: '25px',\n    boxSizing: 'border-box',\n    '& a': {\n      display: 'block',\n      width: '100%',\n      color: '#0094FF',\n      boxSizing: 'border-box',\n    },\n    '& div': {\n      display: 'block',\n      height: 'auto',\n      width: '100%',\n      color: '#20232C',\n      boxSizing: 'border-box',\n    },\n    '& > *': {\n      marginBottom: '9px',\n    },\n    '& :last-child': {\n      marginBottom: '0 !important',\n    },\n    '& .full-width': {\n      width: '100% !important',\n    },\n  });\n  const ActionsWrapper = styled('div')({\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    height: 'auto',\n    '& > *': {\n      marginBottom: '8px',\n    },\n    '& :last-child': {\n      marginBottom: '0 !important',\n    },\n  });\n\n  const ActionDiv = styled('div')({\n    background: '#FFFFFF',\n    transition: 'all 1s ease-out',\n    border: '2px solid #F5F7FF',\n    boxSizing: 'border-box',\n    boxShadow: '0px 8px 7px rgba(116, 131, 178, 0.2)',\n    borderRadius: '12px',\n    width: '100%',\n    overflow: 'hidden',\n    cursor: 'pointer',\n    '& > div': {\n      minHeight: '62px !important',\n      verticalAlign: 'middle',\n      lineHeight: '62px',\n    },\n    '& div': {\n      marginTop: 0,\n    },\n    '& .full-width': {\n      width: '100%',\n    },\n  });\n\n  const CollapsedDiv = styled('div')({\n    height: '62px',\n    display: 'block',\n    width: '100%',\n    paddingLeft: '23px',\n    paddingRight: '28px',\n    boxSizing: 'border-box',\n    margin: 0,\n  });\n  const ExpandedDiv = styled('div')({\n    height: 'auto',\n    display: 'block',\n    width: '100%',\n    paddingLeft: '23px',\n    paddingRight: '38px',\n    boxSizing: 'border-box',\n    margin: 0,\n    '& #value-div': {\n      height: '27px',\n      lineHeight: '27px',\n      minHeight: '27px !important',\n    },\n    '& #data-div': {\n      lineHeight: '25px',\n      minHeight: '27px !important',\n      // fontSize: '18px',\n      height: 'fit-content',\n    },\n    '& #data-div-block': {\n      // overflowWrap: 'normal',\n      overflowWrap: 'break-word',\n    },\n  });\n\n  const Widget = styled('div')({\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    width: '100%',\n    minHeight: '118px',\n    boxSizing: 'border-box',\n    background: '#FFFFFF',\n    border: '2px solid #ECF1F7',\n    boxShadow: '0px 6px 6px rgba(180, 193, 228, 0.35)',\n    borderRadius: '8px',\n    marginBottom: '23px',\n    padding: '36px 27px',\n    '& div': {\n      display: 'block',\n      margin: 'auto',\n      width: '100%',\n      boxSizing: 'border-box',\n      marginBottom: '9px',\n    },\n    '& button': {\n      marginTop: '5px',\n    },\n  });\n\n  //* End of styled Components\n\n  const [proposalInfo, updateProposalInfo] = React.useState<any>(null);\n  const [isExpanded, updateIsExpanded] = React.useState<any>({});\n  // const [challengeReason, updateChallengeReason] = React.useRef('');\n  // const [vetoReason, updateVetoReason] = React.useRef('');\n\n  const {\n    data: proposalDetailsData,\n    loading: isLoadingProposalDetails,\n    error: errorFetchingProposalDetails,\n  } = useQuery(GET_PROPOSAL_LIST_QUERY, {\n    variables: {\n      id: selectedProposal.id,\n    },\n  });\n\n  useEffect(() => {\n    debugger;\n    if (proposalDetailsData) {\n      updateProposalInfo(proposalDetailsData.container);\n    }\n  }, [proposalDetailsData]);\n  const toggleDiv = (index: number) => {\n    const cloneObject = { ...isExpanded };\n    if (cloneObject[index]) {\n      cloneObject[index] = false;\n    } else {\n      cloneObject[index] = true;\n    }\n    updateIsExpanded(cloneObject);\n  };\n\n  // const getParsedDataFromBytes = (data) => {\n\n  // };\n  return (\n    <>\n      {isLoadingProposalDetails ? (\n        <> Loading...</>\n      ) : (\n        <>\n          {proposalInfo ? (\n            <StyledPaper elevation={0}>\n              <BackButton>\n                <img src={backButtonIcon} />\n              </BackButton>\n              <ProposalStatus>\n                <Label\n                  labelColor={getLabelColor()}\n                  labelText={selectedProposal.state}\n                />\n              </ProposalStatus>\n              <ProposalId>{selectedProposal.id}</ProposalId>\n              <DateDisplay>3/29/2021</DateDisplay>\n              <DetailsWrapper>\n                <ProposalDetailsWrapper id=\"proposal_wrapper\">\n                  <TitleText>Config</TitleText>\n                  <InfoWrapper>\n                    <InfoKeyDiv>Execution Delay:</InfoKeyDiv>\n                    <InfoValueDivInline>\n                      {proposalInfo.config.executionDelay}\n                    </InfoValueDivInline>\n                  </InfoWrapper>\n                  <InfoWrapper>\n                    <InfoKeyDiv>Schedule Deposit:</InfoKeyDiv>\n                    <InfoValueDivBlock>\n                      <a>{proposalInfo.config.scheduleDeposit.token}</a>\n                      <div>\n                        {proposalInfo.config.scheduleDeposit.amount} ANT\n                      </div>\n                    </InfoValueDivBlock>\n                  </InfoWrapper>\n                  <InfoWrapper>\n                    <InfoKeyDiv>Challenge Deposit:</InfoKeyDiv>\n                    <InfoValueDivBlock>\n                      <a>{proposalInfo.config.challengeDeposit.token}</a>\n                      <div>\n                        {proposalInfo.config.scheduleDeposit.amount} ANT\n                      </div>\n                    </InfoValueDivBlock>\n                  </InfoWrapper>\n                  <InfoWrapper>\n                    <InfoKeyDiv>Resolver:</InfoKeyDiv>\n                    <InfoValueDivInline>\n                      <a>{proposalInfo.config.resolver}</a>\n                    </InfoValueDivInline>\n                  </InfoWrapper>\n                  <InfoWrapper>\n                    <InfoKeyDiv>Rules:</InfoKeyDiv>\n                    {/* <InfoValueDivInline>{getParsedDataFromBytes(proposalInfo.config.rules)}</InfoValueDivInline> */}\n                    <InfoValueDivInline>\n                      {proposalInfo.config.rules}\n                    </InfoValueDivInline>\n                  </InfoWrapper>\n                  <div style={{ height: '32px', width: '100%' }} />\n\n                  <TitleText>Payload</TitleText>\n                  <InfoWrapper>\n                    <InfoKeyDiv>Nonce:</InfoKeyDiv>\n                    <InfoValueDivInline>\n                      {proposalInfo.payload.nonce}\n                    </InfoValueDivInline>\n                  </InfoWrapper>\n                  <InfoWrapper>\n                    <InfoKeyDiv>Execution Time:</InfoKeyDiv>\n                    <InfoValueDivInline>\n                      {proposalInfo.payload.executionTime}\n                    </InfoValueDivInline>\n                  </InfoWrapper>\n                  <InfoWrapper>\n                    <InfoKeyDiv>Submitter:</InfoKeyDiv>\n                    <InfoValueDivInline>\n                      {proposalInfo.payload.submitter}\n                    </InfoValueDivInline>\n                  </InfoWrapper>\n                  <InfoWrapper>\n                    <InfoKeyDiv>Executor:</InfoKeyDiv>\n                    <InfoValueDivInline>\n                      {proposalInfo.payload.executor.id || 'No executor ID'}\n                    </InfoValueDivInline>\n                  </InfoWrapper>\n                  <InfoWrapper>\n                    <InfoKeyDiv>On Chain Actions:</InfoKeyDiv>\n                    <InfoValueDivInline>Proof Text</InfoValueDivInline>\n                  </InfoWrapper>\n                  <InfoWrapper>\n                    <InfoKeyDiv>AllowFailuresMap:</InfoKeyDiv>\n                    <InfoValueDivInline>\n                      {proposalInfo.payload.allowFailuresMap}\n                    </InfoValueDivInline>\n                  </InfoWrapper>\n                  <InfoWrapper>\n                    <InfoKeyDiv>Proof:</InfoKeyDiv>\n                    <InfoValueDivBlock>\n                      {proposalInfo.payload.proof}\n                      {/* Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed\n                  do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n                  Ut enim ad minim veniam, quis nostrud exercitation ullamco\n                  laboris nisi ut aliquip ex ea commodo consequat. */}\n                    </InfoValueDivBlock>\n                  </InfoWrapper>\n                  <InfoWrapper>\n                    <InfoKeyDiv>Actions:</InfoKeyDiv>\n                    <ActionsWrapper id=\"action-wrapper\">\n                      {/* Show action accordians */}\n                      {proposalInfo.payload.actions.map(\n                        (action: any, index: number) => {\n                          return (\n                            <ActionDiv\n                              key={index}\n                              onClick={() => toggleDiv(index)}\n                              id={'action' + index}\n                              style={{\n                                height: isExpanded[index]\n                                  ? 'fit-content !important'\n                                  : '66px',\n                              }}\n                            >\n                              <CollapsedDiv id=\"collapsed-div\">\n                                <InfoWrapper id=\"to-div\">\n                                  <InfoKeyDiv>to</InfoKeyDiv>\n                                  <InfoValueDivInline>\n                                    <a>{action.to}</a>\n                                  </InfoValueDivInline>\n                                </InfoWrapper>\n                                {/* <Carat /> */}\n                              </CollapsedDiv>\n                              <ExpandedDiv id=\"expanded-div\">\n                                <InfoWrapper id=\"value-div\">\n                                  <InfoKeyDiv>value</InfoKeyDiv>\n                                  <InfoValueDivInline>\n                                    <a>{action.value}</a>\n                                  </InfoValueDivInline>\n                                </InfoWrapper>\n                                <InfoWrapper id=\"data-div\">\n                                  <InfoKeyDiv>data</InfoKeyDiv>\n                                  <InfoValueDivBlock\n                                    className=\"full-width\"\n                                    id=\"data-div-block\"\n                                  >\n                                    {action.data}\n                                  </InfoValueDivBlock>\n                                </InfoWrapper>\n                              </ExpandedDiv>\n                            </ActionDiv>\n                          );\n                        },\n                      )}\n                    </ActionsWrapper>\n                  </InfoWrapper>\n                </ProposalDetailsWrapper>\n                <WidgetWrapper id=\"widget_wrapper\">\n                  <Widget>\n                    <div>Challenge Reason</div>\n                    <ANButton\n                      label=\"Challenge\"\n                      height=\"45px\"\n                      width=\"372px\"\n                      style={{ margin: 'auto' }}\n                      //  onClick={}\n                    />\n                  </Widget>\n                  <Widget>\n                    <div>Veto Reason</div>\n                    <div>{/* <ANInput /> */}</div>\n                    <ANButton\n                      label=\"Execute\"\n                      height=\"45px\"\n                      width=\"372px\"\n                      style={{ margin: 'auto' }}\n                      //  onClick={}\n                    />\n                  </Widget>\n                  <Widget>\n                    <ANButton\n                      label=\"Execute\"\n                      height=\"45px\"\n                      width=\"372px\"\n                      style={{ margin: 'auto' }}\n                      //  onClick={}\n                    />\n                  </Widget>\n                </WidgetWrapper>\n              </DetailsWrapper>\n            </StyledPaper>\n          ) : null}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ProposalDetails;\n","/Users/hooch/dorg/govern/packages/govern-console/src/containers/Console/ConsoleMainPage.tsx",["173","174","175","176"],"import React, { useState, useEffect } from 'react';\nimport { styled, useTheme } from '@material-ui/core/styles';\nimport { ConsoleHeader } from '../../components/ConsoleHeader/ConsoleHeader';\nimport { DaoCard } from '../../components/DaoCards/DaoCard';\nimport { ANButton } from '../../components/Button/ANButton';\nimport Paper from '@material-ui/core/Paper';\nimport { useQuery } from '@apollo/client';\nimport { GET_DAO_LIST, GET_GOVERN_REGISTRY_DATA } from './queries';\nimport { Link } from 'react-router-dom';\nimport { formatEther } from 'ethers/lib/utils';\nexport interface ConsoleMainPageProps {\n  /**\n   * Callback on selection of Dao\n   */\n  updateSelectedDao: any;\n}\n\nconst ConsoleMainPage: React.FC<ConsoleMainPageProps> = ({\n  updateSelectedDao,\n  ...props\n}) => {\n  const theme = useTheme();\n  const [visibleDaoList, updateDaoList] = useState<any>([]);\n  const [totalDaoCount, updateTotalDaoCount] = useState<number>();\n\n  const ConsoleMainDiv = styled(Paper)({\n    width: '100%',\n    background: theme.custom.mainBackground,\n    height: 'auto',\n    padding: '0px',\n    boxShadow: 'none',\n  });\n\n  const {\n    data: daoListData,\n    loading: isLoadingDaoList,\n    error: errorLoadingDaoList,\n    fetchMore: fetchMoreDaos,\n  } = useQuery(GET_DAO_LIST, {\n    variables: {\n      offset: 0,\n      limit: 2,\n    },\n  });\n\n  const {\n    data: daoRegistryData,\n    loading: isLoadingRegistryData,\n    error: errorLoadingRegistryData,\n  } = useQuery(GET_GOVERN_REGISTRY_DATA);\n\n  // const getTotalNumberOfDaos = () => {\n  //   updateTotalDaoCount(numberOfDaos);\n  // };\n\n  useEffect(() => {\n    if (daoListData && daoListData.daos) {\n      updateDaoList([...daoListData.daos]);\n    }\n  }, [daoListData]);\n\n  useEffect(() => {\n    if (daoRegistryData) {\n      updateTotalDaoCount(daoRegistryData.governRegistries[0].count);\n    }\n  }, [daoRegistryData]);\n\n  return (\n    <ConsoleMainDiv>\n      <ConsoleHeader />\n      <div\n        style={{\n          width: '100%',\n          // maxWidth: '1408px',\n          display: 'grid',\n          gridTemplateColumns: 'auto auto auto auto',\n          justifyContent: 'space-between',\n        }}\n      >\n        {daoListData &&\n          daoListData.daos.map((dao: any) => (\n            <div\n              style={{ marginTop: '32px' }}\n              onClick={() => updateSelectedDao(dao)}\n              key={dao.name}\n            >\n              <DaoCard\n                label={dao.name}\n                aumValue={formatEther(dao.executor.balance)}\n                numberOfProposals={dao.queue.nonce}\n                daoId={dao.id}\n              ></DaoCard>\n            </div>\n          ))}\n      </div>\n      <div\n        style={{\n          width: '100%',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          marginTop: '46px',\n          marginBottom: '80px',\n        }}\n      >\n        {totalDaoCount !== visibleDaoList.length ||\n        !(isLoadingRegistryData || isLoadingDaoList) ? (\n          <ANButton\n            label=\"Load More DAOs\"\n            type=\"secondary\"\n            height=\"46px\"\n            width=\"163px\"\n            color=\"#00C2FF\"\n            onClick={() => {\n              fetchMoreDaos({\n                variables: {\n                  offset: visibleDaoList.length,\n                },\n              });\n            }}\n          ></ANButton>\n        ) : null}\n      </div>\n    </ConsoleMainDiv>\n  );\n};\n\nexport default React.memo(ConsoleMainPage);\n","/Users/hooch/dorg/govern/packages/govern-console/src/containers/DAO/DaoMainPage.tsx",["177","178","179","180","181","182"],"import React, { useRef, useState, useEffect, memo } from 'react';\nimport { styled, useTheme } from '@material-ui/core/styles';\nimport { DaoHeader } from '../../components/DaoHeader/DaoHeader';\nimport { ProposalCard } from '../../components/ProposalCards/ProposalCard';\nimport { ANButton } from '../../components/Button/ANButton';\nimport { InputField } from '../../components/InputFields/InputField';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { GET_PROPOSAL_LIST } from './queries';\nimport { useQuery } from '@apollo/client';\nimport { formatEther } from 'ethers/lib/utils';\n\nconst DaoMainPage: React.FC<{\n  daoDetails: any;\n  onClickProposalCard: any;\n  onClickNewProposal: any;\n}> = ({ onClickProposalCard, onClickNewProposal, daoDetails, ...props }) => {\n  const theme = useTheme();\n  const [isProposalPage, setProposalPage] = useState(true);\n  const [visibleProposalList, updateVisibleProposalList] = useState<any>([]);\n  const [isProfilePage, setProfilePage] = useState(false);\n  const searchString = useRef('');\n\n  // useEffect(() => {\n  //   if (isProfile) {\n  //     setProposalPage(false);\n  //     setProfilePage(true);\n  //   }\n  // }, [isProfile]);\n\n  const onInputChange = (val: string) => {\n    searchString.current = val;\n  };\n  const onSearch = () => {\n    console.log(searchString.current);\n  };\n  const onPageChange = (page: string) => {\n    if (page === 'profile') {\n      setProposalPage(false);\n      setProfilePage(true);\n    } else {\n      setProposalPage(true);\n      setProfilePage(false);\n    }\n  };\n\n  const {\n    data: queueData,\n    loading: isLoadingProposals,\n    error: errorLoadingProposals,\n    fetchMore: fetchMoreProposals,\n  } = useQuery(GET_PROPOSAL_LIST, {\n    variables: {\n      id: daoDetails.queue.id,\n    },\n  });\n\n  useEffect(() => {\n    if (queueData) {\n      updateVisibleProposalList(queueData.governQueue.containers);\n    }\n  }, [queueData]);\n\n  //* Styled Components List\n  const DaoPageMainDiv = styled(Paper)({\n    width: '100%',\n    background: theme.custom.white,\n    height: 'auto',\n    padding: '0px',\n    boxShadow: 'none',\n  });\n\n  const PageLabelSelected = styled(Typography)({\n    background:\n      'linear-gradient(282.07deg, #01E8F7 -5.08%, #01DCFA 21.97%, #00C2FF 81.4%)',\n    lineHeight: '25px',\n    fontSize: '20px',\n    fontWeight: 500,\n    fontFamily: theme.custom.daoCard.fontFamily,\n    fontStyle: theme.custom.daoCard.fontStyle,\n    WebkitBackgroundClip: 'text',\n    WebkitTextFillColor: 'transparent',\n    cursor: 'pointer',\n  });\n\n  const PageLabel = styled(Typography)({\n    color: '#7483AB',\n    lineHeight: '25px',\n    fontSize: '20px',\n    fontWeight: 500,\n    fontFamily: theme.custom.daoCard.fontFamily,\n    fontStyle: theme.custom.daoCard.fontStyle,\n    cursor: 'pointer',\n  });\n  //* Styled Components List End\n\n  return (\n    <DaoPageMainDiv>\n      <DaoHeader\n        ethBalance={formatEther(daoDetails.executor.balance)}\n        usdBalance={'2222'}\n        daoName={daoDetails.name}\n      />\n      <div\n        style={{\n          paddingTop: '33px',\n          paddingRight: '48px',\n          paddingLeft: '48px',\n          paddingBottom: '52px',\n        }}\n      >\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'row',\n            maxWidth: '250px',\n            justifyContent: 'space-between',\n          }}\n        >\n          {isProposalPage ? (\n            <PageLabelSelected>Proposals</PageLabelSelected>\n          ) : (\n            <PageLabel onClick={() => onPageChange('proposal')}>\n              Proposal\n            </PageLabel>\n          )}\n          {/* {isProfilePage ? (\n            <PageLabelSelected>Profile</PageLabelSelected>\n          ) : (\n            <PageLabel onClick={() => onPageChange('profile')}>\n              Profile\n            </PageLabel>\n          )} */}\n        </div>\n        {isProposalPage ? (\n          <div>\n            <div\n              style={{\n                display: 'flex',\n                flexDirection: 'row',\n                width: '100%',\n                justifyContent: 'space-between',\n                marginTop: '28px',\n              }}\n            >\n              <InputField\n                label=\"\"\n                placeholder=\"Search\"\n                width=\"298px\"\n                height=\"46px\"\n                onInputChange={onInputChange}\n              ></InputField>\n              <ANButton\n                label=\"New Proposal\"\n                type=\"primary\"\n                height=\"46px\"\n                width=\"142px\"\n                onClick={onClickNewProposal}\n              ></ANButton>\n            </div>\n            <div\n              style={{\n                width: '100%',\n                display: 'grid',\n                gridTemplateColumns: 'auto auto auto',\n                justifyContent: 'space-between',\n              }}\n            >\n              {visibleProposalList.map((proposal: any) => (\n                <div style={{ marginTop: '16px' }} key={proposal.id}>\n                  <ProposalCard\n                    transactionHash={proposal.id}\n                    proposalDate={'3/29/2021'}\n                    proposalStatus={proposal.state}\n                    onClickProposalCard={() => onClickProposalCard(proposal)}\n                  ></ProposalCard>\n                </div>\n              ))}\n            </div>\n            <div\n              style={{\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                marginTop: '32px',\n                marginBottom: '32px',\n              }}\n            >\n              <ANButton\n                label=\"Load More Proposals\"\n                type=\"secondary\"\n                height=\"46px\"\n                width=\"196px\"\n                color=\"#00C2FF\"\n              ></ANButton>\n            </div>\n          </div>\n        ) : (\n          <></>\n        )}\n      </div>\n    </DaoPageMainDiv>\n  );\n};\nexport default memo(DaoMainPage);\n","/Users/hooch/dorg/govern/packages/govern-console/src/components/Header/Header.tsx",["183","184","185"],"import React from 'react';\nimport { styled, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport governIcon from 'images/aragon-icon.svg';\nimport Wallet from 'components/Wallet/Wallet';\n// import\n\nconst Header = ({}) => {\n  const HeaderWrapperDiv = styled('div')({\n    height: '106px',\n    width: '100%',\n    display: 'block',\n  });\n  const TitleText = styled(Typography)({\n    fontFamily: 'Manrope',\n    fontStyle: 'normal',\n    fontWeight: 'normal',\n    fontSize: '18px',\n    lineHeight: '25px',\n    color: '#7483B2',\n    width: '200px',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  });\n  const Navbar = styled('div')({\n    display: 'flex',\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    height: '100%',\n  });\n  const Title = styled('div')({\n    display: 'flex',\n    width: 'fit-content',\n    cursor: 'pointer',\n    '& img': {},\n  });\n  const Account = styled('div')({\n    display: 'flex',\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  });\n  return (\n    <HeaderWrapperDiv id=\"header\">\n      <Navbar id=\"navbar\">\n        <Title id=\"navbar_title\">\n          <img src={governIcon} />\n          <TitleText>Govern Console</TitleText>\n        </Title>\n        <Account id=\"account\">\n          {/* <ChainSelector /> */}\n          <Wallet />\n        </Account>\n      </Navbar>\n    </HeaderWrapperDiv>\n  );\n};\n\nexport default Header;\n","/Users/hooch/dorg/govern/packages/govern-console/src/components/InputFields/InputField.tsx",["186","187","188"],"import React from 'react';\nimport { orange, purple } from '@material-ui/core/colors';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nexport interface InputFieldProps {\n  /**\n   * Label of the field\n   */\n  label: string;\n  /**\n   * Placeholder\n   */\n  placeholder: string;\n  /**\n   * Function to be called onChange\n   */\n  onInputChange: (val: string) => void;\n  /**\n   * Height of the input box\n   */\n  height: string;\n  /**\n   * Width of the input box\n   */\n  width: string;\n  value?: string;\n}\n\nexport const InputField: React.FC<InputFieldProps> = ({\n  onInputChange,\n  placeholder,\n  label,\n  height,\n  width,\n  value,\n  ...props\n}) => {\n  const theme = useTheme();\n  const inputLabelStyles = makeStyles({\n    root: {\n      color: `${theme.custom.greyscale.medium}`,\n      //   marginLeft: '0.75rem',\n      display: 'none',\n    },\n    error: {},\n    focused: {},\n    shrink: {\n      transform: 'translate(0, 1.5px) scale(1)',\n    },\n  });\n  const inputLabelClasses = inputLabelStyles();\n\n  const inputBaseStyles = makeStyles({\n    root: {\n      padding: '0px',\n      margin: '0px',\n    },\n    input: {\n      padding: '0px 0px 0px 24px',\n      margin: '0px',\n      color: `${theme.custom.black}`,\n      fontSize: 16,\n      fontWeight: 400,\n      '&::placeholder': {\n        textOverflow: 'ellipsis !important',\n        color: `#7483AB`,\n        marginLeft: '24px',\n      },\n      backgroundColor: theme.custom.white,\n      border: `2px solid #EFF1F7`,\n      borderRadius: '8px',\n      height: height || '46px',\n      width: width || '200px',\n    },\n    formControl: {\n      'label + &': {\n        padding: '13px 16px',\n        margin: '0px',\n      },\n    },\n  });\n  const inputBaseClasses = inputBaseStyles();\n\n  return (\n    <TextField\n      label={label}\n      placeholder={placeholder}\n      margin={'none'}\n      InputLabelProps={{ shrink: true, classes: inputLabelClasses }}\n      InputProps={{ classes: inputBaseClasses, disableUnderline: true }}\n      onChange={(e) => onInputChange(e.target.value)}\n      value={value}\n    />\n  );\n};\n","/Users/hooch/dorg/govern/packages/govern-console/src/components/Button/ANButton.tsx",["189"],"import React from 'react';\nimport { styled, useTheme } from '@material-ui/core/styles';\nimport MUIButton, { ButtonProps } from '@material-ui/core/Button';\n\nexport interface ANButtonProps {\n  /**\n   * Button type\n   */\n  type?: string;\n  /**\n   * If you want to override the color\n   */\n  backgroundColor?: string;\n  /**\n   * How large should the button be?\n   */\n  size?: 'small' | 'medium' | 'large';\n  /**\n   * Button contents\n   */\n  label: string | React.ReactNode;\n  // /**\n  //  * Any additional overwriting style.\n  //  */\n  // style: object;\n  /**\n   * Optional click handler\n   */\n  onClick?: () => void;\n  /**\n   * Disable button\n   */\n  disabled?: boolean;\n  /**\n   * width\n   */\n  width?: string;\n  /**\n   * height\n   */\n  height?: string;\n  /**\n   * Color vlue\n   */\n  color?: string;\n  /**\n   * style\n   */\n  style?: any;\n}\n\n/**\n * Primary UI component for user interaction\n */\nexport const ANButton: React.FC<ANButtonProps> = ({\n  type = 'primary',\n  // size = 'medium',\n  backgroundColor,\n  label,\n  // style,\n  disabled,\n  width,\n  height,\n  color,\n  style,\n  ...props\n}) => {\n  const theme = useTheme();\n\n  const getBackground = () => {\n    if (disabled) return `${theme.custom.greyscale.light} !important`;\n    if (backgroundColor) return backgroundColor;\n    if (type === 'primary')\n      return 'linear-gradient(107.79deg, #00C2FF 1.46%, #01E8F7 100%)';\n    if (type === 'challenge')\n      return 'linear-gradient(107.79deg, #F7B201 1.46%, #FF7A00 100%)';\n    return '#ffffff';\n  };\n  const getBackgroundForHoveredState = () => {\n    if (disabled) return '#D9E0F5 !important';\n    if (backgroundColor) return backgroundColor;\n    if (type === 'primary')\n      return 'linear-gradient(107.79deg, #82E1FF 1.46%, #3CF3FF 100%)';\n    if (type === 'challenge')\n      return 'linear-gradient(107.79deg, #FFD056 1.46%, #FF9636 100%)';\n    return '#ffffff';\n  };\n  const getBackgroundForPressedState = () => {\n    if (disabled) return '#D9E0F5 !important';\n    if (backgroundColor) return backgroundColor;\n    if (type === 'primary')\n      return 'linear-gradient(107.79deg, #01B9F2 1.46%, #01DBE9 100%)';\n    if (type === 'challenge')\n      return 'linear-gradient(107.79deg, #EBA900 1.46%, #ED7100 100%)';\n    return '#EFF1F7;';\n  };\n\n  const getColor = () => {\n    if (disabled) return '#B0BDE5 !important';\n    if (color && color !== '') return color;\n    if (type === 'secondary') return '#20232C';\n    return '#ffffff';\n  };\n\n  const ANButton = styled(MUIButton)({\n    color: getColor(),\n    height: height || 46,\n    width: width || 154,\n    background: getBackground(),\n    boxSizing: 'border-box',\n    boxShadow: disabled\n      ? 'none !important'\n      : '0px 3px 3px rgba(116, 131, 178, 0.2)',\n    borderRadius: '8px',\n    fontFamily: 'Manrope',\n    fontStyle: 'normal',\n    fontWeight: 'normal',\n    fontSize: '16px',\n    lineHeight: '22px',\n    textTransform: 'none',\n    animation: 'none',\n    transition: 'none',\n    cursor: 'pointer',\n    '&:hover': {\n      background: getBackgroundForHoveredState(),\n      boxShadow: '0px 4px 4px rgba(116, 131, 178, 0.25)',\n      color: type === 'secondary' ? '#7483B2' : 'white',\n    },\n    '&:active': {\n      background: getBackgroundForPressedState(),\n      boxShadow: '0px 1px 1px rgba(116, 131, 178, 0.35)',\n    },\n    '& .MuiTouchRipple-root': {\n      display: 'none',\n    },\n    ...style,\n  });\n\n  return (\n    <ANButton\n      onClick={\n        disabled\n          ? () => {\n              return;\n            }\n          : props.onClick\n      }\n    >\n      {label}\n    </ANButton>\n  );\n};\n","/Users/hooch/dorg/govern/packages/govern-console/src/containers/DAO/queries.tsx",[],"/Users/hooch/dorg/govern/packages/govern-console/src/containers/Console/queries.tsx",[],"/Users/hooch/dorg/govern/packages/govern-console/src/components/ProposalCards/ProposalCard.tsx",["190","191"],"import React from 'react';\nimport { styled, useTheme } from '@material-ui/core/styles';\nimport MUICard, { CardProps } from '@material-ui/core/Card';\nimport MUITypography from '@material-ui/core/Typography';\nimport { Label } from '../Labels/Label';\n\nexport interface ProposalCardProps {\n  /**\n   * TransactionHash of the proposal\n   */\n  transactionHash: string;\n  /**\n   * Date of proposal\n   */\n  proposalDate: string | React.ReactNode;\n  /**\n   * Status of the proposal\n   */\n  proposalStatus: string;\n  /**\n   * Optional Function Handler\n   */\n  onClickProposalCard?: () => void;\n}\n\nexport const ProposalCard: React.FC<ProposalCardProps> = ({\n  transactionHash,\n  proposalDate,\n  proposalStatus,\n  onClickProposalCard,\n  ...props\n}) => {\n  const theme = useTheme();\n\n  const ProposalCard = styled(MUICard)({\n    backgroundColor: theme.custom.proposalCard.background,\n    height: '150px',\n    width: '400px',\n    border: `2px solid ${theme.custom.proposalCard.border}`,\n    paddingLeft: '0px',\n    paddingTop: '21px',\n    borderRadius: '8px',\n    boxSizing: 'border-box',\n    boxShadow: '0px 6px 6px rgba(180, 193, 228, 0.35)',\n    cursor: 'pointer',\n  });\n\n  const ProposalHash = styled(MUITypography)({\n    color: theme.custom.proposalCard.labelColor,\n    lineHeight: theme.custom.proposalCard.labelLineHeight,\n    fontSize: theme.custom.proposalCard.labelFontSize,\n    fontWeight: theme.custom.proposalCard.labelFontWeight,\n    fontFamily: theme.custom.proposalCard.fontFamily,\n    fontStyle: theme.custom.proposalCard.fontStyle,\n    marginTop: '14px',\n    marginLeft: '32px',\n  });\n\n  const ProposalDateText = styled(MUITypography)({\n    color: theme.custom.proposalCard.dateColor,\n    lineHeight: theme.custom.proposalCard.dateLineHeight,\n    fontSize: theme.custom.proposalCard.dateFontSize,\n    fontWeight: theme.custom.proposalCard.dateFontWeight,\n    fontFamily: theme.custom.proposalCard.fontFamily,\n    fontStyle: theme.custom.proposalCard.fontStyle,\n    marginTop: '14px',\n    marginLeft: '32px',\n  });\n\n  const getColorOfLabel = () => {\n    if (proposalStatus === 'Scheduled') return 'yellow';\n    if (proposalStatus === 'Executed') return 'green';\n    if (proposalStatus === 'Challenged') return 'red';\n  };\n\n  const getSlicedTransactionHash = () => {\n    const hash =\n      transactionHash.slice(0, 6) +\n      '...' +\n      transactionHash.slice(\n        transactionHash.length - 5,\n        transactionHash.length - 1,\n      );\n    return hash;\n  };\n\n  return (\n    <ProposalCard onClick={onClickProposalCard}>\n      <div style={{ marginLeft: '32px' }}>\n        <Label labelColor={getColorOfLabel()} labelText={proposalStatus} />\n      </div>\n      <ProposalHash>{getSlicedTransactionHash()}</ProposalHash>\n      <ProposalDateText>{proposalDate}</ProposalDateText>\n    </ProposalCard>\n  );\n};\n","/Users/hooch/dorg/govern/packages/govern-console/src/containers/ProposalDetails/queries.tsx",[],"/Users/hooch/dorg/govern/packages/govern-console/src/components/DaoHeader/DaoHeader.tsx",["192","193"],"import React from 'react';\nimport { styled, useTheme } from '@material-ui/core/styles';\nimport MUICard, { CardProps } from '@material-ui/core/Card';\nimport MUITypography from '@material-ui/core/Typography';\n\nexport interface DaoHeaderProps {\n  /**\n   * Label of the card - name of the DAO\n   */\n  daoName: string;\n  /**\n   * Value in Ether\n   */\n  ethBalance: string | number;\n  /**\n   * Value in USD\n   */\n  usdBalance: number | string;\n  /**\n   * logo of the DAO\n   */\n  logoUrl?: string;\n}\n\nexport const DaoHeader: React.FC<DaoHeaderProps> = ({\n  daoName,\n  ethBalance,\n  usdBalance,\n  ...props\n}) => {\n  const theme = useTheme();\n  const DaoHeaderCard = styled(MUICard)({\n    background: theme.custom.daoHeader.background,\n    width: '100%',\n    height: '197px',\n    paddingLeft: '64px',\n    paddingTop: '54px',\n    paddingBottom: '53px',\n    boxShadow: 'none',\n    boxSizing: 'border-box',\n  });\n\n  const HeaderLabel = styled(MUITypography)({\n    color: theme.custom.daoHeader.labelColor,\n    lineHeight: theme.custom.daoHeader.labelLineHeight,\n    fontSize: theme.custom.daoHeader.labelFontSize,\n    fontWeight: theme.custom.daoHeader.labelFontWeight,\n    fontFamily: theme.typography.fontFamily,\n    fontStyle: 'normal',\n  });\n\n  const HeaderValue = styled(MUITypography)({\n    color: theme.custom.daoHeader.valueColor,\n    lineHeight: theme.custom.daoHeader.valueLineHeight,\n    fontSize: theme.custom.daoHeader.valueFontSize,\n    fontWeight: theme.custom.daoHeader.valueFontWeight,\n    fontFamily: theme.typography.fontFamily,\n    fontStyle: 'normal',\n  });\n\n  const HeaderUsdBalance = styled(MUITypography)({\n    color: theme.custom.daoHeader.valueColor,\n    lineHeight: theme.custom.daoHeader.valueLineHeight,\n    fontSize: theme.custom.daoHeader.labelFontSize,\n    fontWeight: theme.custom.daoHeader.labelFontWeight,\n    fontFamily: theme.typography.fontFamily,\n    fontStyle: 'normal',\n  });\n\n  return (\n    <DaoHeaderCard>\n      <div\n        style={{\n          display: 'flex',\n          width: '850px',\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n        }}\n      >\n        <div>\n          <HeaderLabel>DAO Name</HeaderLabel>\n          <HeaderValue>{daoName}</HeaderValue>\n        </div>\n        <div>\n          <HeaderLabel>ETH DAO Balance</HeaderLabel>\n          <div style={{ display: 'flex', flexDirection: 'row' }}>\n            <HeaderValue>{ethBalance}</HeaderValue>\n            <HeaderUsdBalance style={{ marginLeft: '15px' }}>\n              {'$ ' + usdBalance}\n            </HeaderUsdBalance>\n          </div>\n        </div>\n      </div>\n    </DaoHeaderCard>\n  );\n};\n","/Users/hooch/dorg/govern/packages/govern-console/src/components/DaoCards/DaoCard.tsx",["194","195","196"],"import React from 'react';\nimport { styled, useTheme } from '@material-ui/core/styles';\nimport MUICard, { CardProps } from '@material-ui/core/Card';\nimport MUITypography from '@material-ui/core/Typography';\n\nexport interface DaoCardProps {\n  /**\n   * Label of the card - name of the DAO\n   */\n  label: string;\n  /**\n   * Aum Value of the DAO\n   */\n  aumValue: string | number;\n  /**\n   * Number of Proposals\n   */\n  numberOfProposals: number;\n  /**\n   * ID of the DAO\n   */\n  daoId: number | string;\n  /**\n   * function to be called on click.\n   */\n  onClick?: () => void;\n}\n\nexport const DaoCard: React.FC<DaoCardProps> = ({\n  label,\n  aumValue,\n  numberOfProposals,\n  daoId,\n  ...props\n}) => {\n  const theme = useTheme();\n  const DaoCard = styled(MUICard)({\n    background: theme.custom.daoCard.background,\n    width: '328px',\n    height: '161px',\n    border: `2px ${theme.custom.daoCard.border}`,\n    boxSizing: 'border-box',\n    boxShadow: '0px 6px 6px rgba(180, 193, 228, 0.35)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '0px',\n    borderRadius: '8px',\n    display: 'flex',\n    flexDirection: 'column',\n    cursor: 'pointer',\n  });\n\n  const CardLabel = styled(MUITypography)({\n    lineHeight: theme.custom.daoCard.labelLineHeight,\n    fontSize: theme.custom.daoCard.labeFontSize,\n    fontWeight: theme.custom.daoCard.labelFontWeight,\n    fontFamily: theme.custom.daoCard.fontFamily,\n    fontStyle: theme.custom.daoCard.fontStyle,\n    background: theme.custom.daoCard.labelColor,\n    WebkitBackgroundClip: 'text',\n    WebkitTextFillColor: 'transparent',\n    padding: '0px 18px',\n    marginBottom: '35px',\n  });\n\n  const DaoPropertyLabel = styled(MUITypography)({\n    color: theme.custom.daoCard.propertyLabelColor,\n    lineHeight: theme.custom.daoCard.propertyLabelLineHeight,\n    fontSize: theme.custom.daoCard.propertLabelFontSize,\n    fontWeight: theme.custom.daoCard.propertyLabelFontWeight,\n    fontFamily: theme.custom.daoCard.fontFamily,\n    fontStyle: theme.custom.daoCard.fontStyle,\n  });\n\n  const DaoPropertyText = styled(MUITypography)({\n    color: theme.custom.daoCard.propertyTextColor,\n    lineHeight: theme.custom.daoCard.propertyTextLineHeight,\n    fontSize: theme.custom.daoCard.propertyTextFontSize,\n    fontWeight: theme.custom.daoCard.propertyTextFontWeight,\n    fontFamily: theme.custom.daoCard.fontFamily,\n    fontStyle: theme.custom.daoCard.fontStyle,\n  });\n\n  const DaoProperty: React.FC<any> = ({ propertyLabel, propertyText }) => {\n    return (\n      <div\n        style={{\n          justifyContent: 'center',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <DaoPropertyLabel>{propertyLabel}</DaoPropertyLabel>\n        <DaoPropertyText>{propertyText}</DaoPropertyText>\n      </div>\n    );\n  };\n\n  return (\n    <DaoCard>\n      <CardLabel>{label}</CardLabel>\n      <div\n        style={{\n          display: 'flex',\n          width: '202px',\n          justifyContent: 'space-between',\n        }}\n      >\n        <div>\n          <DaoProperty\n            propertyLabel=\"AUM(USD)\"\n            propertyText={'$' + aumValue + 'M'}\n          />\n        </div>\n        <div>\n          <DaoProperty\n            propertyLabel=\"PROPOSALS\"\n            propertyText={numberOfProposals}\n          />\n        </div>\n      </div>\n    </DaoCard>\n  );\n};\n","/Users/hooch/dorg/govern/packages/govern-console/src/components/ConsoleHeader/ConsoleHeader.tsx",["197","198","199"],"import React, { useRef } from 'react';\nimport { styled, useTheme } from '@material-ui/core/styles';\nimport MUICard, { CardProps } from '@material-ui/core/Card';\nimport MUITypography from '@material-ui/core/Typography';\nimport { InputField } from '../InputFields/InputField';\nimport { ANButton } from '../Button/ANButton';\n\nexport interface ConsoleHeaderProps {\n  /**\n   * Function to be called on search\n   */\n  onSearch?: (val: string) => void;\n}\n\nexport const ConsoleHeader: React.FC<ConsoleHeaderProps> = ({\n  onSearch,\n  ...props\n}) => {\n  const theme = useTheme();\n  const searchString = useRef('');\n  const onInputChange = (val: string) => {\n    searchString.current = val;\n  };\n  const onGotoDao = () => {\n    console.log(searchString.current);\n  };\n  const ConsoleHeaderCard = styled(MUICard)({\n    background: theme.custom.daoHeader.background,\n    width: '100%',\n    height: '335px',\n    paddingLeft: '76px',\n    paddingTop: '61px',\n    paddingBottom: '82px',\n    boxSizing: 'border-box',\n    boxShadow: 'none',\n  });\n\n  const HeaderLabel = styled(MUITypography)({\n    color: theme.custom.daoHeader.labelColor,\n    lineHeight: '27px',\n    fontSize: '18px',\n    fontWeight: theme.custom.daoHeader.labelFontWeight,\n    fontFamily: theme.typography.fontFamily,\n    fontStyle: 'normal',\n  });\n\n  const HeaderValue = styled(MUITypography)({\n    color: theme.custom.daoHeader.valueColor,\n    lineHeight: '60.1px',\n    fontSize: '44px',\n    fontWeight: theme.custom.daoHeader.valueFontWeight,\n    fontFamily: theme.typography.fontFamily,\n    fontStyle: 'normal',\n  });\n\n  return (\n    <ConsoleHeaderCard>\n      <HeaderValue> Welcome to Aragon Console</HeaderValue>\n      <div style={{ maxWidth: '480px', marginTop: '7px' }}>\n        <HeaderLabel>\n          Lorem ipsum dolor amet ipsu amet dolores ipsum amet dolor ipsum amet\n          ipsum amet dolors ipsum{' '}\n        </HeaderLabel>\n      </div>\n      <div style={{ display: 'flex', flexDirection: 'row', marginTop: '22px' }}>\n        <div style={{ marginRight: '10px' }}>\n          <InputField\n            placeholder=\"DAO Name\"\n            onInputChange={onInputChange}\n            label=\"\"\n            height=\"46px\"\n            width=\"448px\"\n          >\n            {' '}\n          </InputField>\n        </div>\n        <div>\n          <ANButton\n            type=\"primary\"\n            label=\"Go to DAO\"\n            height={'46px'}\n            width={'116px'}\n            onClick={() => onGotoDao()}\n          >\n            {' '}\n          </ANButton>\n        </div>\n      </div>\n    </ConsoleHeaderCard>\n  );\n};\n","/Users/hooch/dorg/govern/packages/govern-console/src/ReusableStyles.tsx",[],"/Users/hooch/dorg/govern/packages/govern-console/src/components/Modal/AddActionsModal.tsx",["200","201","202","203"],"import React, { useState, memo } from 'react';\nimport MuiDialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport { ANButton } from '../../components/Button/ANButton';\nimport { InputField } from '../../components/InputFields/InputField';\nimport {\n  styled,\n  useTheme,\n  Theme,\n  withStyles,\n  WithStyles,\n  createStyles,\n} from '@material-ui/core/styles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\n\nexport interface AddActionsModalProps {\n  /**\n   * Open Modal or not\n   */\n  open: boolean;\n  /**\n   * On close modal\n   */\n  onCloseModal: () => void;\n  /**\n   * What happens when clicked on generate\n   */\n  onAddAction: (action: any) => void;\n  /**\n   * What happens when clicked on generate\n   */\n  actions: [];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      margin: 0,\n      paddingTop: '30px',\n      paddingLeft: '40px',\n      paddingBottom: '0px',\n      border: 'none',\n      width: '620px',\n      borderTopLeftRadius: '16px',\n      borderTopRightRadius: '16px',\n      borderBottomLeftRadius: '0px',\n      borderBottomRightRadius: '0px',\n    },\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.grey[500],\n    },\n  });\n\nexport interface DialogTitleProps extends WithStyles<typeof styles> {\n  id?: string;\n  children: string;\n  onClose: () => void;\n}\n\nconst DialogContent = withStyles((theme: Theme) => ({\n  root: {\n    paddingTop: '33px',\n    paddingLeft: '40px',\n    paddingRight: '40px',\n    paddingBottom: '0px',\n    maxHeight: '424px',\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme: Theme) => ({\n  root: {\n    margin: 0,\n    paddingTop: '24px',\n    paddingLeft: '40px',\n    paddingRight: '40px',\n    paddingBottom: '35px',\n    display: 'flex',\n    justifyContent: 'left',\n    alignItems: 'left',\n  },\n}))(MuiDialogActions);\n\nexport const DialogTitle = withStyles(styles)((props: DialogTitleProps) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nexport const AddActionsModal: React.FC<AddActionsModalProps> = ({\n  open,\n  onCloseModal,\n  onAddAction,\n  actions,\n}) => {\n  const theme = useTheme();\n  const actionStyle = {\n    display: 'flex',\n    paddingTop: '23px',\n    paddingLeft: '21px',\n    paddingRight: '21px',\n    paddingBottom: '23px',\n    justifyContent: 'space-between',\n    borderBottom: '2px solid #E2ECF5',\n  };\n\n  const ActionText = styled(Typography)({\n    color: theme.custom.black,\n    lineHeight: theme.custom.modal.labelLineHeight,\n    fontSize: theme.custom.modal.labelFontSize,\n    fontWeight: theme.custom.modal.labelFontWeight,\n    fontFamily: theme.typography.fontFamily,\n    fontStyle: 'normal',\n  });\n\n  return (\n    <MuiDialog open={open}>\n      <DialogTitle onClose={onCloseModal}> Actions </DialogTitle>\n      <DialogContent>\n        <div style={{ marginBottom: '26px' }}>\n          <InputField\n            height={'46px'}\n            width={'604px'}\n            onInputChange={() => console.log('xyz')}\n            placeholder=\"Search Actions\"\n            label=\"\"\n          ></InputField>\n        </div>\n        {actions && actions.length > 0 && (\n          <div\n            style={{\n              width: '100%',\n              borderRadius: '10px',\n              border: '2px solid #E2ECF5',\n            }}\n          >\n            {actions.map((action: any) => (\n              <div style={actionStyle} key={action.name}>\n                <ActionText>{action.name}</ActionText>\n                <ANButton\n                  label=\"Add\"\n                  onClick={() => onAddAction(action)}\n                  height={'30px'}\n                  width=\"80px\"\n                ></ANButton>\n              </div>\n            ))}\n          </div>\n        )}\n      </DialogContent>\n      <DialogActions>\n        {/* <ANButton\n          type=\"primary\"\n          width={'100%'}\n          height={'45px'}\n          label=\"Add Action\"\n        ></ANButton> */}\n      </DialogActions>\n    </MuiDialog>\n  );\n};\n","/Users/hooch/dorg/govern/packages/govern-console/src/components/Modal/NewActionModal.tsx",["204","205","206"],"import React, { useState, useRef } from 'react';\nimport MuiDialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport { ANButton } from '../../components/Button/ANButton';\nimport { InputField } from '../../components/InputFields/InputField';\nimport {\n  styled,\n  useTheme,\n  Theme,\n  withStyles,\n  WithStyles,\n  createStyles,\n} from '@material-ui/core/styles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\n\nexport interface NewActionModalProps {\n  /**\n   * Open Modal or not\n   */\n  open: boolean;\n  /**\n   * On close modal\n   */\n  onCloseModal: () => void;\n  /**\n   * What happens when clicked on generate\n   */\n  onGenerate: (contractAddress: any, abi: any) => void;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      margin: 0,\n      paddingTop: '30px',\n      paddingLeft: '40px',\n      paddingBottom: '0px',\n      border: 'none',\n      width: '620px',\n      borderTopLeftRadius: '16px',\n      borderTopRightRadius: '16px',\n      borderBottomLeftRadius: '0px',\n      borderBottomRightRadius: '0px',\n    },\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.grey[500],\n    },\n  });\n\nexport interface DialogTitleProps extends WithStyles<typeof styles> {\n  id?: string;\n  children: string;\n  onClose: () => void;\n}\n\nconst DialogContent = withStyles((theme: Theme) => ({\n  root: {\n    paddingTop: '33px',\n    paddingLeft: '40px',\n    paddingBottom: '0px',\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme: Theme) => ({\n  root: {\n    margin: 0,\n    paddingTop: '24px',\n    paddingLeft: '40px',\n    paddingBottom: '35px',\n    display: 'flex',\n    justifyContent: 'left',\n    alignItems: 'left',\n  },\n}))(MuiDialogActions);\n\nexport const DialogTitle = withStyles(styles)((props: DialogTitleProps) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nexport const NewActionModal: React.FC<NewActionModalProps> = ({\n  open,\n  onCloseModal,\n  onGenerate,\n}) => {\n  const theme = useTheme();\n  const contractAddress = useRef();\n  const abi = useRef(null);\n  const isJsonString = (str: string) => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  };\n\n  const onInputABI = (val: string) => {\n    if (isJsonString(val)) {\n      abi.current = JSON.parse(val);\n    } else return;\n  };\n  const onInputContractAddress = (val: any) => {\n    contractAddress.current = val;\n  };\n  const onGenerateClick = () => {\n    if (abi.current === null) return;\n    if (contractAddress.current === null) return;\n\n    console.log(abi.current, contractAddress.current);\n    onGenerate(contractAddress.current, abi.current);\n  };\n  const InputLabelText = styled(Typography)({\n    color: theme.custom.modal.labelColor,\n    lineHeight: theme.custom.modal.labelLineHeight,\n    fontSize: theme.custom.modal.labelFontSize,\n    fontWeight: theme.custom.modal.labelFontWeight,\n    fontFamily: theme.typography.fontFamily,\n    fontStyle: 'normal',\n    marginBottom: '12px',\n  });\n  return (\n    <MuiDialog open={open}>\n      <DialogTitle onClose={onCloseModal}> New Action </DialogTitle>\n      <DialogContent>\n        <InputLabelText>Input ABI</InputLabelText>\n        <div style={{ marginBottom: '26px' }}>\n          <InputField\n            height={'46px'}\n            width={'530px'}\n            onInputChange={onInputABI}\n            placeholder=\"ABI...\"\n            label=\"\"\n          ></InputField>\n        </div>\n        <InputLabelText>Input Contract Address</InputLabelText>\n        <div style={{ marginBottom: '26px' }}>\n          <InputField\n            height={'46px'}\n            width={'530px'}\n            onInputChange={onInputContractAddress}\n            placeholder=\"Contract Address\"\n            label=\"\"\n          ></InputField>\n        </div>\n      </DialogContent>\n      <DialogActions>\n        <ANButton\n          type=\"primary\"\n          width={'112px'}\n          height={'45px'}\n          label=\"Generate\"\n          onClick={() => onGenerateClick()}\n        ></ANButton>\n      </DialogActions>\n    </MuiDialog>\n  );\n};\n","/Users/hooch/dorg/govern/packages/govern-console/src/components/TextArea/TextArea.tsx",["207"],"import React, { memo, useState } from 'react';\nimport TextField, { TextFieldProps } from '@material-ui/core/TextField';\n\nconst TextArea: React.FC<TextFieldProps> = ({ ...props }) => {\n  return (\n    <>\n      <TextField {...props} />\n    </>\n  );\n};\n\nexport default memo(TextArea);\n","/Users/hooch/dorg/govern/packages/govern-console/src/components/HelpButton/HelpButton.tsx",[],"/Users/hooch/dorg/govern/packages/govern-console/src/components/Wallet/Wallet.tsx",["208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226"],"import React from 'react';\nimport { ANButton } from 'components/Button/ANButton';\nimport { styled } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport { useWallet } from 'use-wallet';\nimport connectedUserIcon from 'images/connected-user-icon.svg';\nimport Typography from '@material-ui/core/Typography';\nimport { providers as EthersProviders } from 'ethers';\nimport { useEffect } from 'react';\n\nconst Wallet = ({}) => {\n  const context: any = useWallet();\n  const {\n    connector,\n    account,\n    balance,\n    chainId,\n    connect,\n    connectors,\n    ethereum,\n    error,\n    getBlockNumber,\n    networkName,\n    reset,\n    status,\n    type,\n    ethers: ethersProvider,\n  } = context;\n\n  const onWalletConnectionError = (error: Error) => {\n    // alert(getErrorMessage(error));\n  };\n  // ---- Components ----\n\n  const WalletWrapper = styled(Card)({\n    background: '#FFFFFF',\n    height: '48px',\n    width: '178px',\n    // border: '2px solid #EFF1F7',\n    boxSizing: 'border-box',\n    // boxShadow: '0px 3px 3px rgba(180, 193, 228, 0.35)',\n    boxShadow: 'none',\n    borderRadius: '8px',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  });\n\n  const ConnectedAccount = styled('div')({\n    height: '48px',\n    width: '174px',\n    background: '#FFFFFF',\n    border: '2px solid #EFF1F7',\n    boxSizing: 'border-box',\n    boxShadow: '0px 3px 3px rgba(180, 193, 228, 0.35)',\n    borderRadius: '8px',\n    padding: '13px 20px',\n    display: 'flex',\n    flexDirection: 'row',\n  });\n  const IconHolder = styled('img')({\n    width: '24px',\n    height: '24px',\n  });\n  const AccountAddress = styled(Typography)({\n    fontFamily: 'Manrope',\n    fontStyle: 'normal',\n    fontWeight: 500,\n    fontSize: '16px',\n    lineHeight: '22px',\n    color: '#20232C',\n    cursor: 'pointer',\n  });\n  // React.useEffect(() => {\n  //   if (activatingConnector && activatingConnector === connector) {\n  //     setActivatingConnector(undefined);\n  //   }\n  // }, [connector]);\n  const getTruncatedAccountAddress = (account: string | null) => {\n    if (account === null) return '';\n    return (\n      account.substring(0, 5) +\n      '...' +\n      account.substring(account.length - 5, account.length - 1)\n    );\n  };\n  return (\n    <WalletWrapper>\n      {status !== 'connected' ? (\n        <ANButton\n          type=\"primary\"\n          onClick={() => {\n            connect('injected');\n            // setActivatingConnector(ConnectorNames.Injected);\n          }}\n          label={'Connect Account'}\n          height={'48px'}\n          width={'174px'}\n          disabled={status === 'connecting'}\n        />\n      ) : (\n        <ConnectedAccount\n          onClick={() => {\n            // connect('injected');\n            // setActivatingConnector(ConnectorNames.Injected);\n          }}\n        >\n          {/* <IconHolder src={connectedUserIcon}> </IconHolder> */}\n          <AccountAddress>{getTruncatedAccountAddress(account)}</AccountAddress>\n        </ConnectedAccount>\n      )}\n    </WalletWrapper>\n  );\n};\n\nexport default Wallet;\n","/Users/hooch/dorg/govern/packages/govern-console/src/components/Labels/Label.tsx",["227","228"],"import React from 'react';\nimport { styled, useTheme } from '@material-ui/core/styles';\nimport MUIChip, { ChipProps } from '@material-ui/core/Chip';\n\nexport interface LabelProps extends ChipProps {\n  /**\n   * Label Color\n   */\n  labelColor: string;\n  /**\n   * Label Text\n   */\n  labelText: string | React.ReactNode;\n  /**\n   * Optional Function Handler\n   */\n  onClick?: () => void;\n}\n\nexport const Label: React.FC<any> = ({\n  labelColor,\n  labelText,\n  onClick,\n  ...props\n}) => {\n  const theme = useTheme();\n  const getBackground = () => {\n    if (labelColor === 'green') return `${theme.custom.informative.green}`;\n    if (labelColor === 'orange') return `${theme.custom.informative.orange}`;\n    if (labelColor === 'yellow') return `${theme.custom.informative.yellow}`;\n    if (labelColor === 'red') return `${theme.custom.informative.red}`;\n    if (labelColor === 'white') return `${theme.custom.white}`;\n    if (labelColor === 'grey') return `${theme.custom.greyscale.soft}`;\n  };\n\n  const getColor = () => {\n    if (labelColor === 'green') return `${theme.custom.white}`;\n    if (labelColor === 'orange') return `${theme.custom.white}`;\n    if (labelColor === 'yellow') return `${theme.custom.white}`;\n    if (labelColor === 'red') return `${theme.custom.white}`;\n    if (labelColor === 'white') return `${theme.custom.black}`;\n    if (labelColor === 'grey') return `${theme.custom.greyscale.solid}`;\n  };\n\n  const getBorder = () => {\n    if (labelColor === 'white') {\n      return `2px solid ${theme.custom.greyscale.soft}`;\n    } else {\n      return 'none';\n    }\n  };\n\n  const Label = styled(MUIChip)({\n    color: getColor(),\n    backgroundColor: getBackground(),\n    width: 'fit-content',\n    height: '19px',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '1px 8px 2px',\n    borderRadius: '40px',\n    border: getBorder(),\n    '& .MuiChip-label': {\n      lineHeight: '10px',\n      fontSize: '12px',\n      fontWeight: 500,\n      fontFamily: 'Manrope',\n      fontStyle: 'normal',\n      overflow: 'visible',\n    },\n  });\n\n  return <Label label={labelText}></Label>;\n};\n",{"ruleId":"229","severity":1,"message":"230","line":3,"column":25,"nodeType":"231","messageId":"232","endLine":3,"endColumn":57},{"ruleId":"233","severity":1,"message":"234","line":2,"column":10,"nodeType":"235","messageId":"236","endLine":2,"endColumn":27},{"ruleId":"233","severity":1,"message":"237","line":8,"column":10,"nodeType":"235","messageId":"236","endLine":8,"endColumn":20},{"ruleId":"229","severity":1,"message":"230","line":14,"column":16,"nodeType":"238","messageId":"232","endLine":14,"endColumn":30},{"ruleId":"233","severity":1,"message":"239","line":2,"column":8,"nodeType":"235","messageId":"236","endLine":2,"endColumn":17},{"ruleId":"229","severity":1,"message":"230","line":7,"column":1,"nodeType":"238","messageId":"232","endLine":7,"endColumn":30},{"ruleId":"229","severity":1,"message":"230","line":14,"column":18,"nodeType":"231","messageId":"232","endLine":14,"endColumn":35},{"ruleId":"229","severity":1,"message":"240","line":14,"column":19,"nodeType":"241","messageId":"242","endLine":14,"endColumn":31},{"ruleId":"233","severity":1,"message":"243","line":14,"column":24,"nodeType":"235","messageId":"236","endLine":14,"endColumn":29},{"ruleId":"233","severity":1,"message":"244","line":1,"column":41,"nodeType":"235","messageId":"236","endLine":1,"endColumn":52},{"ruleId":"233","severity":1,"message":"245","line":3,"column":28,"nodeType":"235","messageId":"236","endLine":3,"endColumn":33},{"ruleId":"233","severity":1,"message":"246","line":14,"column":10,"nodeType":"235","messageId":"236","endLine":14,"endColumn":25},{"ruleId":"233","severity":1,"message":"243","line":71,"column":6,"nodeType":"235","messageId":"236","endLine":71,"endColumn":11},{"ruleId":"233","severity":1,"message":"243","line":122,"column":55,"nodeType":"235","messageId":"236","endLine":122,"endColumn":60},{"ruleId":"233","severity":1,"message":"247","line":134,"column":9,"nodeType":"235","messageId":"236","endLine":134,"endColumn":16},{"ruleId":"233","severity":1,"message":"248","line":145,"column":5,"nodeType":"235","messageId":"236","endLine":145,"endColumn":14},{"ruleId":"233","severity":1,"message":"249","line":147,"column":5,"nodeType":"235","messageId":"236","endLine":147,"endColumn":12},{"ruleId":"233","severity":1,"message":"250","line":148,"column":5,"nodeType":"235","messageId":"236","endLine":148,"endColumn":12},{"ruleId":"233","severity":1,"message":"251","line":149,"column":5,"nodeType":"235","messageId":"236","endLine":149,"endColumn":12},{"ruleId":"233","severity":1,"message":"252","line":150,"column":5,"nodeType":"235","messageId":"236","endLine":150,"endColumn":15},{"ruleId":"233","severity":1,"message":"253","line":151,"column":5,"nodeType":"235","messageId":"236","endLine":151,"endColumn":13},{"ruleId":"233","severity":1,"message":"254","line":152,"column":5,"nodeType":"235","messageId":"236","endLine":152,"endColumn":10},{"ruleId":"233","severity":1,"message":"255","line":153,"column":5,"nodeType":"235","messageId":"236","endLine":153,"endColumn":19},{"ruleId":"233","severity":1,"message":"256","line":154,"column":5,"nodeType":"235","messageId":"236","endLine":154,"endColumn":16},{"ruleId":"233","severity":1,"message":"257","line":155,"column":5,"nodeType":"235","messageId":"236","endLine":155,"endColumn":10},{"ruleId":"233","severity":1,"message":"258","line":156,"column":5,"nodeType":"235","messageId":"236","endLine":156,"endColumn":11},{"ruleId":"233","severity":1,"message":"259","line":157,"column":5,"nodeType":"235","messageId":"236","endLine":157,"endColumn":9},{"ruleId":"233","severity":1,"message":"260","line":160,"column":9,"nodeType":"235","messageId":"236","endLine":160,"endColumn":26},{"ruleId":"233","severity":1,"message":"261","line":214,"column":9,"nodeType":"235","messageId":"236","endLine":214,"endColumn":30},{"ruleId":"233","severity":1,"message":"262","line":247,"column":9,"nodeType":"235","messageId":"236","endLine":247,"endColumn":24},{"ruleId":"233","severity":1,"message":"263","line":288,"column":9,"nodeType":"235","messageId":"236","endLine":288,"endColumn":21},{"ruleId":"233","severity":1,"message":"264","line":318,"column":11,"nodeType":"235","messageId":"236","endLine":318,"endColumn":17},{"ruleId":"265","severity":2,"message":"266","line":319,"column":9,"nodeType":"235","messageId":"267","endLine":319,"endColumn":41,"fix":"268"},{"ruleId":"265","severity":2,"message":"269","line":322,"column":9,"nodeType":"235","messageId":"267","endLine":322,"endColumn":17,"fix":"270"},{"ruleId":"265","severity":2,"message":"271","line":323,"column":9,"nodeType":"235","messageId":"267","endLine":323,"endColumn":23,"fix":"272"},{"ruleId":"233","severity":1,"message":"273","line":7,"column":10,"nodeType":"235","messageId":"236","endLine":7,"endColumn":20},{"ruleId":"233","severity":1,"message":"274","line":21,"column":3,"nodeType":"235","messageId":"236","endLine":21,"endColumn":14},{"ruleId":"233","severity":1,"message":"275","line":272,"column":12,"nodeType":"235","messageId":"236","endLine":272,"endColumn":40},{"ruleId":"233","severity":1,"message":"276","line":9,"column":10,"nodeType":"235","messageId":"236","endLine":9,"endColumn":14},{"ruleId":"233","severity":1,"message":"243","line":20,"column":6,"nodeType":"235","messageId":"236","endLine":20,"endColumn":11},{"ruleId":"233","severity":1,"message":"277","line":37,"column":12,"nodeType":"235","messageId":"236","endLine":37,"endColumn":31},{"ruleId":"233","severity":1,"message":"278","line":49,"column":12,"nodeType":"235","messageId":"236","endLine":49,"endColumn":36},{"ruleId":"233","severity":1,"message":"243","line":17,"column":65,"nodeType":"235","messageId":"236","endLine":17,"endColumn":70},{"ruleId":"233","severity":1,"message":"279","line":21,"column":10,"nodeType":"235","messageId":"236","endLine":21,"endColumn":23},{"ruleId":"233","severity":1,"message":"280","line":34,"column":9,"nodeType":"235","messageId":"236","endLine":34,"endColumn":17},{"ruleId":"233","severity":1,"message":"281","line":49,"column":14,"nodeType":"235","messageId":"236","endLine":49,"endColumn":32},{"ruleId":"233","severity":1,"message":"282","line":50,"column":12,"nodeType":"235","messageId":"236","endLine":50,"endColumn":33},{"ruleId":"233","severity":1,"message":"283","line":51,"column":16,"nodeType":"235","messageId":"236","endLine":51,"endColumn":34},{"ruleId":"233","severity":1,"message":"284","line":2,"column":18,"nodeType":"235","messageId":"236","endLine":2,"endColumn":26},{"ruleId":"229","severity":1,"message":"230","line":8,"column":16,"nodeType":"231","messageId":"232","endLine":8,"endColumn":23},{"ruleId":"229","severity":1,"message":"240","line":8,"column":17,"nodeType":"241","messageId":"242","endLine":8,"endColumn":19},{"ruleId":"233","severity":1,"message":"285","line":2,"column":10,"nodeType":"235","messageId":"236","endLine":2,"endColumn":16},{"ruleId":"233","severity":1,"message":"286","line":2,"column":18,"nodeType":"235","messageId":"236","endLine":2,"endColumn":24},{"ruleId":"233","severity":1,"message":"243","line":37,"column":6,"nodeType":"235","messageId":"236","endLine":37,"endColumn":11},{"ruleId":"233","severity":1,"message":"287","line":3,"column":21,"nodeType":"235","messageId":"236","endLine":3,"endColumn":32},{"ruleId":"233","severity":1,"message":"288","line":3,"column":19,"nodeType":"235","messageId":"236","endLine":3,"endColumn":28},{"ruleId":"233","severity":1,"message":"243","line":31,"column":6,"nodeType":"235","messageId":"236","endLine":31,"endColumn":11},{"ruleId":"233","severity":1,"message":"288","line":3,"column":19,"nodeType":"235","messageId":"236","endLine":3,"endColumn":28},{"ruleId":"233","severity":1,"message":"243","line":29,"column":6,"nodeType":"235","messageId":"236","endLine":29,"endColumn":11},{"ruleId":"233","severity":1,"message":"288","line":3,"column":19,"nodeType":"235","messageId":"236","endLine":3,"endColumn":28},{"ruleId":"233","severity":1,"message":"289","line":33,"column":3,"nodeType":"235","messageId":"236","endLine":33,"endColumn":8},{"ruleId":"233","severity":1,"message":"243","line":34,"column":6,"nodeType":"235","messageId":"236","endLine":34,"endColumn":11},{"ruleId":"233","severity":1,"message":"288","line":3,"column":19,"nodeType":"235","messageId":"236","endLine":3,"endColumn":28},{"ruleId":"233","severity":1,"message":"290","line":16,"column":3,"nodeType":"235","messageId":"236","endLine":16,"endColumn":11},{"ruleId":"233","severity":1,"message":"243","line":17,"column":6,"nodeType":"235","messageId":"236","endLine":17,"endColumn":11},{"ruleId":"233","severity":1,"message":"291","line":1,"column":17,"nodeType":"235","messageId":"236","endLine":1,"endColumn":25},{"ruleId":"233","severity":1,"message":"292","line":1,"column":27,"nodeType":"235","messageId":"236","endLine":1,"endColumn":31},{"ruleId":"233","severity":1,"message":"293","line":67,"column":35,"nodeType":"235","messageId":"236","endLine":67,"endColumn":47},{"ruleId":"233","severity":1,"message":"293","line":77,"column":35,"nodeType":"235","messageId":"236","endLine":77,"endColumn":47},{"ruleId":"233","severity":1,"message":"291","line":1,"column":17,"nodeType":"235","messageId":"236","endLine":1,"endColumn":25},{"ruleId":"233","severity":1,"message":"293","line":63,"column":35,"nodeType":"235","messageId":"236","endLine":63,"endColumn":47},{"ruleId":"233","severity":1,"message":"293","line":71,"column":35,"nodeType":"235","messageId":"236","endLine":71,"endColumn":47},{"ruleId":"233","severity":1,"message":"291","line":1,"column":23,"nodeType":"235","messageId":"236","endLine":1,"endColumn":31},{"ruleId":"233","severity":1,"message":"294","line":6,"column":8,"nodeType":"235","messageId":"236","endLine":6,"endColumn":25},{"ruleId":"233","severity":1,"message":"295","line":8,"column":23,"nodeType":"235","messageId":"236","endLine":8,"endColumn":38},{"ruleId":"233","severity":1,"message":"296","line":9,"column":10,"nodeType":"235","messageId":"236","endLine":9,"endColumn":19},{"ruleId":"229","severity":1,"message":"230","line":11,"column":16,"nodeType":"231","messageId":"232","endLine":11,"endColumn":23},{"ruleId":"229","severity":1,"message":"240","line":11,"column":17,"nodeType":"241","messageId":"242","endLine":11,"endColumn":19},{"ruleId":"233","severity":1,"message":"248","line":14,"column":5,"nodeType":"235","messageId":"236","endLine":14,"endColumn":14},{"ruleId":"233","severity":1,"message":"249","line":16,"column":5,"nodeType":"235","messageId":"236","endLine":16,"endColumn":12},{"ruleId":"233","severity":1,"message":"250","line":17,"column":5,"nodeType":"235","messageId":"236","endLine":17,"endColumn":12},{"ruleId":"233","severity":1,"message":"252","line":19,"column":5,"nodeType":"235","messageId":"236","endLine":19,"endColumn":15},{"ruleId":"233","severity":1,"message":"253","line":20,"column":5,"nodeType":"235","messageId":"236","endLine":20,"endColumn":13},{"ruleId":"233","severity":1,"message":"254","line":21,"column":5,"nodeType":"235","messageId":"236","endLine":21,"endColumn":10},{"ruleId":"233","severity":1,"message":"255","line":22,"column":5,"nodeType":"235","messageId":"236","endLine":22,"endColumn":19},{"ruleId":"233","severity":1,"message":"256","line":23,"column":5,"nodeType":"235","messageId":"236","endLine":23,"endColumn":16},{"ruleId":"233","severity":1,"message":"257","line":24,"column":5,"nodeType":"235","messageId":"236","endLine":24,"endColumn":10},{"ruleId":"233","severity":1,"message":"259","line":26,"column":5,"nodeType":"235","messageId":"236","endLine":26,"endColumn":9},{"ruleId":"233","severity":1,"message":"297","line":27,"column":13,"nodeType":"235","messageId":"236","endLine":27,"endColumn":27},{"ruleId":"233","severity":1,"message":"298","line":30,"column":9,"nodeType":"235","messageId":"236","endLine":30,"endColumn":32},{"ruleId":"233","severity":1,"message":"299","line":30,"column":36,"nodeType":"235","messageId":"236","endLine":30,"endColumn":48},{"ruleId":"233","severity":1,"message":"300","line":62,"column":9,"nodeType":"235","messageId":"236","endLine":62,"endColumn":19},{"ruleId":"233","severity":1,"message":"301","line":23,"column":3,"nodeType":"235","messageId":"236","endLine":23,"endColumn":10},{"ruleId":"233","severity":1,"message":"243","line":24,"column":6,"nodeType":"235","messageId":"236","endLine":24,"endColumn":11},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","@typescript-eslint/no-unused-vars","'Web3ReactProvider' is defined but never used.","Identifier","unusedVar","'getLibrary' is defined but never used.","FunctionDeclaration","'lightBlue' is defined but never used.","Object pattern argument should be typed.","ObjectPattern","missingArgTypeUnnamed","'props' is defined but never used.","'useCallback' is defined but never used.","'Theme' is defined but never used.","'defaultAbiCoder' is defined but never used.","'classes' is assigned a value but never used.","'connector' is assigned a value but never used.","'balance' is assigned a value but never used.","'chainId' is assigned a value but never used.","'connect' is assigned a value but never used.","'connectors' is assigned a value but never used.","'ethereum' is assigned a value but never used.","'error' is assigned a value but never used.","'getBlockNumber' is assigned a value but never used.","'networkName' is assigned a value but never used.","'reset' is assigned a value but never used.","'status' is assigned a value but never used.","'type' is assigned a value but never used.","'submitter' is assigned a value but never used.","'JustificationTextArea' is assigned a value but never used.","'isProposalValid' is assigned a value but never used.","'buildPayload' is assigned a value but never used.","'config' is assigned a value but never used.","prefer-const","'proposalOptions' is never reassigned. Use 'const' instead.","useConst",{"range":"302","text":"303"},"'proposal' is never reassigned. Use 'const' instead.",{"range":"304","text":"305"},"'scheduleResult' is never reassigned. Use 'const' instead.",{"range":"306","text":"307"},"'useHistory' is defined but never used.","'onClickBack' is defined but never used.","'errorFetchingProposalDetails' is assigned a value but never used.","'Link' is defined but never used.","'errorLoadingDaoList' is assigned a value but never used.","'errorLoadingRegistryData' is assigned a value but never used.","'isProfilePage' is assigned a value but never used.","'onSearch' is assigned a value but never used.","'isLoadingProposals' is assigned a value but never used.","'errorLoadingProposals' is assigned a value but never used.","'fetchMoreProposals' is assigned a value but never used.","'useTheme' is defined but never used.","'orange' is defined but never used.","'purple' is defined but never used.","'ButtonProps' is defined but never used.","'CardProps' is defined but never used.","'daoId' is defined but never used.","'onSearch' is defined but never used.","'useState' is defined but never used.","'memo' is defined but never used.","'theme' is defined but never used.","'connectedUserIcon' is defined but never used.","'EthersProviders' is defined but never used.","'useEffect' is defined but never used.","'ethersProvider' is assigned a value but never used.","'onWalletConnectionError' is assigned a value but never used.","'error' is defined but never used.","'IconHolder' is assigned a value but never used.","'onClick' is defined but never used.",[8439,8518],"const proposalOptions: ProposalOptions = {\n      provider: ethersProvider,\n    };",[8523,8594],"const proposal = new Proposal(daoDetails.queue.address, proposalOptions);",[8599,8694],"const scheduleResult = await proposal.schedule({\n      payload,\n      config: goodConfig,\n    });"]