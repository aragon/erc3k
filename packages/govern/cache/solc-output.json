{
  "contracts": {
    "contracts/ERC3000Registry.sol": {
      "ERC3000Registry": {
        "abi": [
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "contract ERC3000Executor",
                "name": "dao",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "contract ERC3000",
                "name": "queue",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "registrant",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "string",
                "name": "name",
                "type": "string"
              }
            ],
            "name": "Registered",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "contract ERC3000Executor",
                "name": "dao",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "bytes",
                "name": "metadata",
                "type": "bytes"
              }
            ],
            "name": "SetMetadata",
            "type": "event"
          },
          {
            "inputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "name": "nameUsed",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "contract ERC3000Executor",
                "name": "_dao",
                "type": "address"
              },
              {
                "internalType": "contract ERC3000",
                "name": "_queue",
                "type": "address"
              },
              {
                "internalType": "string",
                "name": "_name",
                "type": "string"
              },
              {
                "internalType": "bytes",
                "name": "_initialMetadata",
                "type": "bytes"
              }
            ],
            "name": "register",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes",
                "name": "_metadata",
                "type": "bytes"
              }
            ],
            "name": "setMetadata",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "608060405234801561001057600080fd5b50610775806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630b9b6e8b1461004657806376d6497414610100578063ee57e36f146101ea575b600080fd5b6100ec6004803603602081101561005c57600080fd5b81019060208101813564010000000081111561007757600080fd5b82018360208201111561008957600080fd5b803590602001918460018302840111640100000000831117156100ab57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610290945050505050565b604080519115158252519081900360200190f35b6101e86004803603608081101561011657600080fd5b73ffffffffffffffffffffffffffffffffffffffff823581169260208101359091169181019060608101604082013564010000000081111561015757600080fd5b82018360208201111561016957600080fd5b8035906020019184600183028401116401000000008311171561018b57600080fd5b9193909290916020810190356401000000008111156101a957600080fd5b8201836020820111156101bb57600080fd5b803590602001918460018302840111640100000000831117156101dd57600080fd5b5090925090506102b0565b005b6101e86004803603602081101561020057600080fd5b81019060208101813564010000000081111561021b57600080fd5b82018360208201111561022d57600080fd5b8035906020019184600183028401116401000000008311171561024f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610575945050505050565b805160208183018101805160008252928201919093012091525460ff1681565b6000848460405180838380828437919091019485525050604051928390036020019092205460ff1615915061032e9050576040805162461bcd60e51b815260206004820152601360248201527f72656769737472793a206e616d65207573656400000000000000000000000000604482015290519081900360640190fd5b604080517f01ffc9a70000000000000000000000000000000000000000000000000000000081527f9abf68a8000000000000000000000000000000000000000000000000000000006004820152905173ffffffffffffffffffffffffffffffffffffffff8716916301ffc9a7916024808301926020929190829003018186803b1580156103ba57600080fd5b505afa1580156103ce573d6000803e3d6000fd5b505050506040513d60208110156103e457600080fd5b5051610437576040805162461bcd60e51b815260206004820152601d60248201527f72656769737472793a2062616420696e74657266616365207175657565000000604482015290519081900360640190fd5b60016000858560405180838380828437919091019485525050604080516020948190038501812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169615159690961790955573ffffffffffffffffffffffffffffffffffffffff8a811686529385018181529085018890523394938b16937ff4f197eba075646e2b24279d445e34fdf4be71ecac050ed2c3d09bb5295c2db993508a9250899189919060608201848480828437600083820152604051601f9091017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016909201829003965090945050505050a361056d8683838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061058292505050565b505050505050565b61057f3382610582565b50565b604080517f01ffc9a70000000000000000000000000000000000000000000000000000000081527f5c3e9760000000000000000000000000000000000000000000000000000000006004820152905173ffffffffffffffffffffffffffffffffffffffff8416916301ffc9a7916024808301926020929190829003018186803b15801561060e57600080fd5b505afa158015610622573d6000803e3d6000fd5b505050506040513d602081101561063857600080fd5b505161068b576040805162461bcd60e51b815260206004820152601b60248201527f72656769737472793a2062616420696e746572666163652064616f0000000000604482015290519081900360640190fd5b8173ffffffffffffffffffffffffffffffffffffffff167f8fa78869a20b896e44b704e4e5ee97cbb81cc5639ff16aec59c41cd97427b5a6826040518080602001828103825283818151815260200191508051906020019080838360005b838110156107015781810151838201526020016106e9565b50505050905090810190601f16801561072e5780820380516001836020036101000a031916815260200191505b509250505060405180910390a2505056fea2646970667358221220c96b91194723fc04986721c44cea007cd839107d8921018e5d20e6ce6fcceed764736f6c63430006080033",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x775 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB9B6E8B EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x76D64974 EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0xEE57E36F EQ PUSH2 0x1EA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x290 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x169 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x18B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x2B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x22D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x575 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x0 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY SWAP2 SWAP1 SWAP2 ADD SWAP5 DUP6 MSTORE POP POP PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP1 SUB PUSH1 0x20 ADD SWAP1 SWAP3 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO SWAP2 POP PUSH2 0x32E SWAP1 POP JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x72656769737472793A206E616D65207573656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x9ABF68A800000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND SWAP2 PUSH4 0x1FFC9A7 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x437 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x72656769737472793A2062616420696E74657266616365207175657565000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 DUP6 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY SWAP2 SWAP1 SWAP2 ADD SWAP5 DUP6 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP5 DUP2 SWAP1 SUB DUP6 ADD DUP2 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP7 ISZERO ISZERO SWAP7 SWAP1 SWAP7 OR SWAP1 SWAP6 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 DUP2 AND DUP7 MSTORE SWAP4 DUP6 ADD DUP2 DUP2 MSTORE SWAP1 DUP6 ADD DUP9 SWAP1 MSTORE CALLER SWAP5 SWAP4 DUP12 AND SWAP4 PUSH32 0xF4F197EBA075646E2B24279D445E34FDF4BE71ECAC050ED2C3D09BB5295C2DB9 SWAP4 POP DUP11 SWAP3 POP DUP10 SWAP2 DUP10 SWAP2 SWAP1 PUSH1 0x60 DUP3 ADD DUP5 DUP5 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP1 SWAP3 ADD DUP3 SWAP1 SUB SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP LOG3 PUSH2 0x56D DUP7 DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x582 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x57F CALLER DUP3 PUSH2 0x582 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x5C3E976000000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP2 PUSH4 0x1FFC9A7 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x60E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x622 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x638 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x68B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x72656769737472793A2062616420696E746572666163652064616F0000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8FA78869A20B896E44B704E4E5EE97CBB81CC5639FF16AEC59C41CD97427B5A6 DUP3 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x701 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x6E9 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x72E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 PUSH12 0x91194723FC04986721C44CEA STOP PUSH29 0xD839107D8921018E5D20E6CE6FCCEED764736F6C634300060800330000 ",
            "sourceMap": "156:1180:0:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;156:1180:0;;;;;;;"
          },
          "deployedBytecode": {
            "immutableReferences": {},
            "linkReferences": {},
            "object": "608060405234801561001057600080fd5b50600436106100415760003560e01c80630b9b6e8b1461004657806376d6497414610100578063ee57e36f146101ea575b600080fd5b6100ec6004803603602081101561005c57600080fd5b81019060208101813564010000000081111561007757600080fd5b82018360208201111561008957600080fd5b803590602001918460018302840111640100000000831117156100ab57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610290945050505050565b604080519115158252519081900360200190f35b6101e86004803603608081101561011657600080fd5b73ffffffffffffffffffffffffffffffffffffffff823581169260208101359091169181019060608101604082013564010000000081111561015757600080fd5b82018360208201111561016957600080fd5b8035906020019184600183028401116401000000008311171561018b57600080fd5b9193909290916020810190356401000000008111156101a957600080fd5b8201836020820111156101bb57600080fd5b803590602001918460018302840111640100000000831117156101dd57600080fd5b5090925090506102b0565b005b6101e86004803603602081101561020057600080fd5b81019060208101813564010000000081111561021b57600080fd5b82018360208201111561022d57600080fd5b8035906020019184600183028401116401000000008311171561024f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610575945050505050565b805160208183018101805160008252928201919093012091525460ff1681565b6000848460405180838380828437919091019485525050604051928390036020019092205460ff1615915061032e9050576040805162461bcd60e51b815260206004820152601360248201527f72656769737472793a206e616d65207573656400000000000000000000000000604482015290519081900360640190fd5b604080517f01ffc9a70000000000000000000000000000000000000000000000000000000081527f9abf68a8000000000000000000000000000000000000000000000000000000006004820152905173ffffffffffffffffffffffffffffffffffffffff8716916301ffc9a7916024808301926020929190829003018186803b1580156103ba57600080fd5b505afa1580156103ce573d6000803e3d6000fd5b505050506040513d60208110156103e457600080fd5b5051610437576040805162461bcd60e51b815260206004820152601d60248201527f72656769737472793a2062616420696e74657266616365207175657565000000604482015290519081900360640190fd5b60016000858560405180838380828437919091019485525050604080516020948190038501812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169615159690961790955573ffffffffffffffffffffffffffffffffffffffff8a811686529385018181529085018890523394938b16937ff4f197eba075646e2b24279d445e34fdf4be71ecac050ed2c3d09bb5295c2db993508a9250899189919060608201848480828437600083820152604051601f9091017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016909201829003965090945050505050a361056d8683838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061058292505050565b505050505050565b61057f3382610582565b50565b604080517f01ffc9a70000000000000000000000000000000000000000000000000000000081527f5c3e9760000000000000000000000000000000000000000000000000000000006004820152905173ffffffffffffffffffffffffffffffffffffffff8416916301ffc9a7916024808301926020929190829003018186803b15801561060e57600080fd5b505afa158015610622573d6000803e3d6000fd5b505050506040513d602081101561063857600080fd5b505161068b576040805162461bcd60e51b815260206004820152601b60248201527f72656769737472793a2062616420696e746572666163652064616f0000000000604482015290519081900360640190fd5b8173ffffffffffffffffffffffffffffffffffffffff167f8fa78869a20b896e44b704e4e5ee97cbb81cc5639ff16aec59c41cd97427b5a6826040518080602001828103825283818151815260200191508051906020019080838360005b838110156107015781810151838201526020016106e9565b50505050905090810190601f16801561072e5780820380516001836020036101000a031916815260200191505b509250505060405180910390a2505056fea2646970667358221220c96b91194723fc04986721c44cea007cd839107d8921018e5d20e6ce6fcceed764736f6c63430006080033",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB9B6E8B EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x76D64974 EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0xEE57E36F EQ PUSH2 0x1EA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x290 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x169 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x18B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x2B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x22D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x575 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x0 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY SWAP2 SWAP1 SWAP2 ADD SWAP5 DUP6 MSTORE POP POP PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP1 SUB PUSH1 0x20 ADD SWAP1 SWAP3 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO SWAP2 POP PUSH2 0x32E SWAP1 POP JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x72656769737472793A206E616D65207573656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x9ABF68A800000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND SWAP2 PUSH4 0x1FFC9A7 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x437 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x72656769737472793A2062616420696E74657266616365207175657565000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 DUP6 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY SWAP2 SWAP1 SWAP2 ADD SWAP5 DUP6 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP5 DUP2 SWAP1 SUB DUP6 ADD DUP2 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP7 ISZERO ISZERO SWAP7 SWAP1 SWAP7 OR SWAP1 SWAP6 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 DUP2 AND DUP7 MSTORE SWAP4 DUP6 ADD DUP2 DUP2 MSTORE SWAP1 DUP6 ADD DUP9 SWAP1 MSTORE CALLER SWAP5 SWAP4 DUP12 AND SWAP4 PUSH32 0xF4F197EBA075646E2B24279D445E34FDF4BE71ECAC050ED2C3D09BB5295C2DB9 SWAP4 POP DUP11 SWAP3 POP DUP10 SWAP2 DUP10 SWAP2 SWAP1 PUSH1 0x60 DUP3 ADD DUP5 DUP5 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP1 SWAP3 ADD DUP3 SWAP1 SUB SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP LOG3 PUSH2 0x56D DUP7 DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x582 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x57F CALLER DUP3 PUSH2 0x582 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x5C3E976000000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP2 PUSH4 0x1FFC9A7 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x60E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x622 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x638 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x68B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x72656769737472793A2062616420696E746572666163652064616F0000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8FA78869A20B896E44B704E4E5EE97CBB81CC5639FF16AEC59C41CD97427B5A6 DUP3 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x701 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x6E9 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x72E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 PUSH12 0x91194723FC04986721C44CEA STOP PUSH29 0xD839107D8921018E5D20E6CE6FCCEED764736F6C634300060800330000 ",
            "sourceMap": "156:1180:0:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;156:1180:0;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;252:40:0;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;252:40:0;;;;;;;;27:11:-1;11:28;;8:2;;;52:1;49;42:12;8:2;252:40:0;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;252:40:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;252:40:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;252:40:0;;-1:-1:-1;252:40:0;;-1:-1:-1;;;;;252:40:0:i;:::-;;;;;;;;;;;;;;;;;;475:506;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;475:506:0;;;;;;;;;;;;;;;;;;;;;;;;27:11:-1;11:28;;8:2;;;52:1;49;42:12;8:2;475:506:0;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;475:506:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;475:506:0;;;;;;;;;;;27:11:-1;11:28;;8:2;;;52:1;49;42:12;8:2;475:506:0;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;475:506:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;475:506:0;;-1:-1:-1;475:506:0;-1:-1:-1;475:506:0;:::i;:::-;;987:121;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;987:121:0;;;;;;;;27:11:-1;11:28;;8:2;;;52:1;49;42:12;8:2;987:121:0;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;987:121:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;987:121:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;987:121:0;;-1:-1:-1;987:121:0;;-1:-1:-1;;;;;987:121:0:i;252:40::-;22:14:-1;;169:4;143:32;;;;;198:20;;252:40:0;224:31:-1;;156:18;;;283;;;;273:49;328:32;;252:40:0;;;;:::o;475:506::-;619:8;628:5;;619:15;;;;;30:3:-1;22:6;14;1:33;45:16;;;;619:15:0;;;-1:-1:-1;;619:15:0;;;;;;;;;;;;;;618:16;;-1:-1:-1;610:48:0;;-1:-1:-1;610:48:0;;;;-1:-1:-1;;;610:48:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;676:46;;;;;;701:20;676:46;;;;;;:24;;;;;;:46;;;;;;;;;;;;;;:24;:46;;;2:2:-1;;;;27:1;24;17:12;2:2;676:46:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;676:46:0;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;676:46:0;668:88;;;;;-1:-1:-1;;;668:88:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;865:4;847:8;856:5;;847:15;;;;;30:3:-1;22:6;14;1:33;45:16;;;;847:15:0;;;-1:-1:-1;;847:15:0;;;;;;;;;;;;:22;;;;;;;;;;;;;;885:43;;;;;;;;;;;;;;;;;;910:10;;885:43;;;;;;-1:-1:-1;885:43:0;;-1:-1:-1;922:5:0;;885:43;;847:15;885:43;;;922:5;885:43;;922:5;885:43;1:33:-1;99:1;81:16;;;74:27;885:43:0;;137:4:-1;117:14;;;133:9;113:30;157:16;;;885:43:0;;;;-1:-1:-1;885:43:0;;-1:-1:-1;;;;;885:43:0;938:36;951:4;957:16;;938:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;938:12:0;;-1:-1:-1;;;938:36:0:i;:::-;475:506;;;;;;:::o;987:121::-;1049:52;1078:10;1091:9;1049:12;:52::i;:::-;987:121;:::o;1114:220::-;1209:42;;;;;;1232:18;1209:42;;;;;;:22;;;;;;:42;;;;;;;;;;;;;;:22;:42;;;2:2:-1;;;;27:1;24;17:12;2:2;1209:42:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1209:42:0;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1209:42:0;1201:82;;;;;-1:-1:-1;;;1201:82:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;1311:4;1299:28;;;1317:9;1299:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1299:28:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1114:220;;:::o"
          },
          "methodIdentifiers": {
            "nameUsed(string)": "0b9b6e8b",
            "register(address,address,string,bytes)": "76d64974",
            "setMetadata(bytes)": "ee57e36f"
          }
        }
      }
    },
    "contracts/Eaglet.sol": {
      "Eaglet": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "contract IERC3000",
                "name": "_initialExecutor",
                "type": "address"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "sender",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "ETHDeposited",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "actor",
                "type": "address"
              },
              {
                "components": [
                  {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                  },
                  {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes"
                  }
                ],
                "indexed": false,
                "internalType": "struct ERC3000Data.Action[]",
                "name": "actions",
                "type": "tuple[]"
              },
              {
                "indexed": false,
                "internalType": "bytes[]",
                "name": "execResults",
                "type": "bytes[]"
              }
            ],
            "name": "Executed",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes4",
                "name": "role",
                "type": "bytes4"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "actor",
                "type": "address"
              }
            ],
            "name": "Frozen",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes4",
                "name": "role",
                "type": "bytes4"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "actor",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "who",
                "type": "address"
              }
            ],
            "name": "Granted",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes4",
                "name": "role",
                "type": "bytes4"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "actor",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "who",
                "type": "address"
              }
            ],
            "name": "Revoked",
            "type": "event"
          },
          {
            "inputs": [],
            "name": "ROOT_ROLE",
            "outputs": [
              {
                "internalType": "bytes4",
                "name": "",
                "type": "bytes4"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "components": [
                  {
                    "internalType": "enum MiniACLData.BulkOp",
                    "name": "op",
                    "type": "uint8"
                  },
                  {
                    "internalType": "bytes4",
                    "name": "role",
                    "type": "bytes4"
                  },
                  {
                    "internalType": "address",
                    "name": "who",
                    "type": "address"
                  }
                ],
                "internalType": "struct MiniACLData.BulkItem[]",
                "name": "items",
                "type": "tuple[]"
              }
            ],
            "name": "bulk",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "components": [
                  {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                  },
                  {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes"
                  }
                ],
                "internalType": "struct ERC3000Data.Action[]",
                "name": "actions",
                "type": "tuple[]"
              }
            ],
            "name": "exec",
            "outputs": [
              {
                "internalType": "bytes[]",
                "name": "",
                "type": "bytes[]"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes4",
                "name": "_role",
                "type": "bytes4"
              }
            ],
            "name": "freeze",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes4",
                "name": "_role",
                "type": "bytes4"
              },
              {
                "internalType": "address",
                "name": "_who",
                "type": "address"
              }
            ],
            "name": "grant",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes4",
                "name": "_role",
                "type": "bytes4"
              }
            ],
            "name": "isFrozen",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes4",
                "name": "_role",
                "type": "bytes4"
              },
              {
                "internalType": "address",
                "name": "_who",
                "type": "address"
              }
            ],
            "name": "revoke",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes4",
                "name": "",
                "type": "bytes4"
              },
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "name": "roles",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes4",
                "name": "_interfaceId",
                "type": "bytes4"
              }
            ],
            "name": "supportsInterface",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "pure",
            "type": "function"
          },
          {
            "stateMutability": "payable",
            "type": "receive"
          }
        ],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x11F8 CODESIZE SUB DUP1 PUSH3 0x11F8 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x16E JUMP JUMPDEST ADDRESS PUSH3 0x51 PUSH4 0x161B7D81 PUSH1 0xE2 SHL DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH3 0x75 AND JUMP JUMPDEST POP PUSH3 0x6E PUSH4 0x2E1F4BB PUSH1 0xE5 SHL DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH3 0x75 AND JUMP JUMPDEST POP PUSH3 0x1EC JUMP JUMPDEST PUSH3 0x89 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH3 0x145 AND JUMP JUMPDEST ISZERO PUSH3 0xB2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA9 SWAP1 PUSH3 0x19E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 EQ ISZERO PUSH3 0xDF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA9 SWAP1 PUSH3 0x1C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD SWAP1 SWAP3 CALLER SWAP3 SWAP1 SWAP2 PUSH32 0x1C3AC05008A204AEF806FB7B0A907C496ED107CD989825BEB9DF5F8094C2EABD SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x180 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x197 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x30B1B61D10333937BD32B7 PUSH1 0xA9 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x61636C3A2062616420667265657A65 PUSH1 0x88 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH2 0xFFC DUP1 PUSH3 0x1FC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C3E9760 GT PUSH2 0x69 JUMPI DUP1 PUSH4 0x96FC8ABD GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x96FC8ABD EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0xA157A10D EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0xBDF9A726 EQ PUSH2 0x20E JUMPI PUSH2 0xE2 JUMP JUMPDEST DUP1 PUSH4 0x5C3E9760 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x7E8C7F08 EQ PUSH2 0x1AC JUMPI PUSH2 0xE2 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0x1C47671B EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0x495A9825 EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0x58849734 EQ PUSH2 0x15F JUMPI PUSH2 0xE2 JUMP JUMPDEST CALLDATASIZE PUSH2 0xE2 JUMPI CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x6C703791F399558807424F489CCD811C72B4FF0B74AF547264FAD7C646776DF0 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0xF21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x107 PUSH2 0x102 CALLDATASIZE PUSH1 0x4 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x22E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114 SWAP2 SWAP1 PUSH2 0xE25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13D PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xB8B JUMP JUMPDEST PUSH2 0x272 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x107 PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x3BE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13D PUSH2 0x17A CALLDATASIZE PUSH1 0x4 PUSH2 0xC8A JUMP JUMPDEST PUSH2 0x3E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19F PUSH2 0x19A CALLDATASIZE PUSH1 0x4 PUSH2 0xA59 JUMP JUMPDEST PUSH2 0x47C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114 SWAP2 SWAP1 PUSH2 0xD5D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x6B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114 SWAP2 SWAP1 PUSH2 0xE30 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x107 PUSH2 0x1E9 CALLDATASIZE PUSH1 0x4 PUSH2 0xC8A JUMP JUMPDEST PUSH2 0x6BE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13D PUSH2 0x209 CALLDATASIZE PUSH1 0x4 PUSH2 0xC8A JUMP JUMPDEST PUSH2 0x6DB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13D PUSH2 0x229 CALLDATASIZE PUSH1 0x4 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x770 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0x5C3E976000000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x26C JUMPI POP PUSH2 0x26C DUP3 PUSH2 0x808 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x8DAFB0716DBDC5222F4B82FA3495E71054F736C761C542CFFF5CF37CEEF75D46 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0x161B7D81 PUSH1 0xE2 SHL SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x2E1 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x306 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FD SWAP1 PUSH2 0xE7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x3B9 JUMPI PUSH2 0x31A PUSH2 0x9F9 JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x326 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x33D JUMPI INVALID JUMPDEST DUP2 MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x34A JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x367 JUMPI PUSH2 0x362 DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0x83A JUMP JUMPDEST PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x1 DUP2 MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x376 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x38E JUMPI PUSH2 0x362 DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0x8F0 JUMP JUMPDEST PUSH1 0x2 DUP2 MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x39D JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x3B0 JUMPI PUSH2 0x3B0 DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0x979 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x309 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x8DAFB0716DBDC5222F4B82FA3495E71054F736C761C542CFFF5CF37CEEF75D46 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0x161B7D81 PUSH1 0xE2 SHL SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x456 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x472 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FD SWAP1 PUSH2 0xE7C JUMP JUMPDEST PUSH2 0x3B9 DUP4 DUP4 PUSH2 0x8F0 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x7B98092935FAE603CE262EFFB602034522041DE02B6C825126B8CCA4FE67E98F PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH32 0x5C3E976000000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x507 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x523 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FD SWAP1 PUSH2 0xE7C JUMP JUMPDEST PUSH1 0x60 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x53D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x571 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x55C JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x668 JUMPI PUSH1 0x0 PUSH1 0x60 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x590 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x5B1 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP9 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x5C9 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x5E2 SWAP2 SWAP1 PUSH2 0xD41 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x61F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x624 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x646 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FD SWAP1 PUSH2 0xE45 JUMP JUMPDEST DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x653 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP POP PUSH1 0x1 ADD PUSH2 0x577 JUMP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x853C59370D112FBA38E26EDE245C0D137FD5FF8360C69699264EDC28D87233EA DUP6 DUP4 PUSH1 0x40 MLOAD PUSH2 0x6A4 SWAP3 SWAP2 SWAP1 PUSH2 0xD70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x161B7D81 PUSH1 0xE2 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 DUP2 MSTORE SWAP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 MSTORE SWAP1 DUP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x8DAFB0716DBDC5222F4B82FA3495E71054F736C761C542CFFF5CF37CEEF75D46 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0x161B7D81 PUSH1 0xE2 SHL SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x74A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x766 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FD SWAP1 PUSH2 0xE7C JUMP JUMPDEST PUSH2 0x3B9 DUP4 DUP4 PUSH2 0x83A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x8DAFB0716DBDC5222F4B82FA3495E71054F736C761C542CFFF5CF37CEEF75D46 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0x161B7D81 PUSH1 0xE2 SHL SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x7DF JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x7FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FD SWAP1 PUSH2 0xE7C JUMP JUMPDEST PUSH2 0x804 DUP3 PUSH2 0x979 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x843 DUP3 PUSH2 0x3BE JUMP JUMPDEST ISZERO PUSH2 0x860 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FD SWAP1 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 EQ ISZERO PUSH2 0x88A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FD SWAP1 PUSH2 0xEEA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD SWAP1 SWAP3 CALLER SWAP3 SWAP1 SWAP2 PUSH32 0x1C3AC05008A204AEF806FB7B0A907C496ED107CD989825BEB9DF5F8094C2EABD SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x8F9 DUP3 PUSH2 0x3BE JUMP JUMPDEST ISZERO PUSH2 0x916 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FD SWAP1 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD SWAP1 SWAP3 CALLER SWAP3 SWAP1 SWAP2 PUSH32 0x682F2C466C1E9F6883EB72CBCED01373E1CB18B05AE5C8BC04DC73D73E29F8CD SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x982 DUP2 PUSH2 0x3BE JUMP JUMPDEST ISZERO PUSH2 0x99F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FD SWAP1 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE MLOAD CALLER SWAP3 SWAP2 PUSH32 0x49C6B8B07A879425742523FA80F8FFB25E39AD518C93A5896A0DF19518397E5 SWAP2 LOG3 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP2 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA6B JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xA82 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD DUP7 PUSH1 0x1F DUP3 ADD SLT PUSH2 0xA93 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP3 POP PUSH2 0xAA8 PUSH2 0xAA3 DUP5 PUSH2 0xF51 JUMP JUMPDEST PUSH2 0xF2A JUMP JUMPDEST DUP4 DUP2 MSTORE DUP5 DUP2 ADD SWAP1 DUP3 DUP7 ADD DUP8 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0xB7C JUMPI DUP2 CALLDATALOAD DUP6 ADD PUSH1 0x1F NOT PUSH1 0x60 DUP2 DUP4 DUP16 SUB ADD SLT ISZERO PUSH2 0xAD4 JUMPI DUP11 DUP12 REVERT JUMPDEST PUSH2 0xADE PUSH1 0x60 PUSH2 0xF2A JUMP JUMPDEST PUSH2 0xAEA DUP15 DUP13 DUP6 ADD PUSH2 0xA1B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x40 DUP4 ADD CALLDATALOAD DUP12 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD CALLDATALOAD DUP10 DUP2 GT ISZERO PUSH2 0xB06 JUMPI DUP13 DUP14 REVERT JUMPDEST DUP1 DUP5 ADD DUP16 PUSH1 0x3F DUP3 ADD SLT PUSH2 0xB17 JUMPI DUP14 DUP15 REVERT JUMPDEST DUP13 DUP2 ADD CALLDATALOAD SWAP5 POP DUP11 DUP6 GT ISZERO PUSH2 0xB29 JUMPI DUP14 DUP15 REVERT JUMPDEST PUSH2 0xB39 DUP14 DUP6 PUSH1 0x1F DUP9 ADD AND ADD PUSH2 0xF2A JUMP JUMPDEST SWAP2 POP DUP5 DUP3 MSTORE DUP16 PUSH1 0x40 DUP7 DUP4 ADD ADD GT ISZERO PUSH2 0xB4F JUMPI DUP14 DUP15 REVERT JUMPDEST DUP5 PUSH1 0x40 DUP3 ADD DUP15 DUP5 ADD CALLDATACOPY POP SWAP3 DUP4 ADD DUP12 ADD DUP13 SWAP1 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP DUP5 MSTORE SWAP3 DUP8 ADD SWAP3 SWAP1 DUP8 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xAB4 JUMP JUMPDEST POP SWAP1 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB9D JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBB3 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP1 DUP5 ADD DUP6 PUSH1 0x1F DUP3 ADD SLT PUSH2 0xBC4 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP2 POP PUSH2 0xBD4 PUSH2 0xAA3 DUP4 PUSH2 0xF51 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP4 DUP2 ADD SWAP1 DUP3 DUP6 ADD PUSH1 0x60 DUP1 DUP7 MUL DUP6 ADD DUP8 ADD DUP11 LT ISZERO PUSH2 0xBF2 JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP5 POP JUMPDEST DUP6 DUP6 LT ISZERO PUSH2 0xC59 JUMPI DUP1 DUP3 DUP12 SUB SLT ISZERO PUSH2 0xC0C JUMPI DUP8 DUP9 REVERT JUMPDEST PUSH2 0xC15 DUP2 PUSH2 0xF2A JUMP JUMPDEST PUSH2 0xC1F DUP12 DUP5 PUSH2 0xA4A JUMP JUMPDEST DUP2 MSTORE PUSH2 0xC2D DUP12 DUP10 DUP6 ADD PUSH2 0xA32 JUMP JUMPDEST DUP9 DUP3 ADD MSTORE PUSH1 0x40 PUSH2 0xC3F DUP13 DUP3 DUP7 ADD PUSH2 0xA1B JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE DUP5 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP3 DUP7 ADD SWAP3 SWAP1 DUP2 ADD SWAP1 PUSH2 0xBF6 JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC78 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC83 DUP2 PUSH2 0xFAD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC9C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xCA7 DUP2 PUSH2 0xFAD JUMP JUMPDEST SWAP2 POP PUSH2 0xCB6 DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0xA1B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MLOAD DUP1 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP6 POP DUP1 DUP2 DUP4 MUL DUP5 ADD ADD DUP2 DUP7 ADD DUP6 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xD08 JUMPI PUSH1 0x1F NOT DUP7 DUP5 SUB ADD DUP10 MSTORE PUSH2 0xCF6 DUP4 DUP4 MLOAD PUSH2 0xD15 JUMP JUMPDEST SWAP9 DUP5 ADD SWAP9 SWAP3 POP SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xCDA JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xD2D DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xF7D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0xD53 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0xF7D JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0xC83 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCBF JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP4 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x60 SWAP1 DUP2 DUP6 ADD SWAP1 PUSH1 0x20 DUP1 DUP3 MUL DUP8 ADD DUP5 ADD DUP2 DUP11 ADD DUP8 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xE04 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA0 DUP11 DUP5 SUB ADD DUP7 MSTORE DUP2 MLOAD PUSH2 0xDD1 DUP2 MLOAD PUSH2 0xF71 JUMP JUMPDEST DUP5 MSTORE DUP5 DUP2 ADD MLOAD DUP6 DUP6 ADD MSTORE DUP9 DUP2 ADD MLOAD DUP9 DUP11 DUP7 ADD MSTORE PUSH2 0xDF0 DUP10 DUP7 ADD DUP3 PUSH2 0xD15 JUMP JUMPDEST SWAP8 DUP7 ADD SWAP8 SWAP5 POP POP POP SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xD96 JUMP JUMPDEST POP POP DUP8 DUP2 SUB DUP3 DUP10 ADD MSTORE PUSH2 0xE17 DUP2 DUP11 PUSH2 0xCBF JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xC SWAP1 DUP3 ADD MSTORE PUSH32 0x6561676C65743A2063616C6C0000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x9 SWAP1 DUP3 ADD MSTORE PUSH32 0x61636C3A20617574680000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH32 0x61636C3A2066726F7A656E000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH32 0x61636C3A2062616420667265657A650000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xF49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xF67 JUMPI DUP1 DUP2 REVERT JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF98 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xF80 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xFA7 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xFC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0xDB761EFE9E5BD9CE23FABB4538CE82D5F49D766398DF8315E5742DA4 DUP3 LOG2 DUP13 PUSH5 0x736F6C6343 STOP MOD ADDMOD STOP CALLER ",
            "sourceMap": "220:1097:1:-:0;;;507:130;5:9:-1;2:2;;;27:1;24;17:12;2:2;507:130:1;;;;;;;;;;;;;;;;;;;;;562:4;1144:31:7;-1:-1:-1;562:4:1;1144:6:7;:31::i;:::-;-1:-1:-1;586:44:1::1;-1:-1:-1::0;612:16:1;586:6:::1;:44::i;:::-;507:130:::0;220:1097;;1960:258:7;2032:15;2041:5;2032:8;:15::i;:::-;2031:16;2023:40;;;;-1:-1:-1;2023:40:7;;;;;;;;;;;;;;;;;-1:-1:-1;2081:19:7;;-1:-1:-1;2081:19:7;;2073:47;;;;-1:-1:-1;2073:47:7;;;;;;;;;-1:-1:-1;2139:12:7;;:5;:12;;;;;;;;;;;-1:-1:-1;2139:18:7;;;;;;;;;;:25;;-1:-1:-1;2139:25:7;-1:-1:-1;2139:25:7;;;2179:32;2139:18;;2194:10;;2139:12;;2179:32;;2139:5;2179:32;1960:258;;:::o;2612:108::-;-1:-1:-1;2688:12:7;2665:4;2688:12;;;;;;;;;;;-1:-1:-1;2688:25:7;;;;;;;;;;;2612:108::o;180:297:-1:-;;312:2;300:9;291:7;287:23;283:32;280:2;;;-1:-1;;318:12;280:2;100:13;;-1:-1;2421:54;;2563:52;;2553:2;;-1:-1;;2619:12;2553:2;370:91;274:203;-1:-1;;;274:203;1128:416;1328:2;1342:47;;;709:2;1313:18;;;2078:19;-1:-1;2118:14;;;725:34;778:12;;;1299:245;1551:416;1751:2;1765:47;;;1029:2;1736:18;;;2078:19;-1:-1;2118:14;;;1045:38;1102:12;;;1722:245;;220:1097:1;;;;;;"
          },
          "deployedBytecode": {
            "immutableReferences": {},
            "linkReferences": {},
            "object": "60806040526004361061009a5760003560e01c80635c3e97601161006957806396fc8abd1161004e57806396fc8abd146101ce578063a157a10d146101ee578063bdf9a7261461020e576100e2565b80635c3e97601461017f5780637e8c7f08146101ac576100e2565b806301ffc9a7146100e75780631c47671b1461011d578063495a98251461013f578063588497341461015f576100e2565b366100e257336001600160a01b03167f6c703791f399558807424f489ccd811c72b4ff0b74af547264fad7c646776df0346040516100d89190610f21565b60405180910390a2005b600080fd5b3480156100f357600080fd5b50610107610102366004610c67565b61022e565b6040516101149190610e25565b60405180910390f35b34801561012957600080fd5b5061013d610138366004610b8b565b610272565b005b34801561014b57600080fd5b5061010761015a366004610c67565b6103be565b34801561016b57600080fd5b5061013d61017a366004610c8a565b6103e7565b34801561018b57600080fd5b5061019f61019a366004610a59565b61047c565b6040516101149190610d5d565b3480156101b857600080fd5b506101c16106b3565b6040516101149190610e30565b3480156101da57600080fd5b506101076101e9366004610c8a565b6106be565b3480156101fa57600080fd5b5061013d610209366004610c8a565b6106db565b34801561021a57600080fd5b5061013d610229366004610c67565b610770565b60006001600160e01b031982167f5c3e976000000000000000000000000000000000000000000000000000000000148061026c575061026c82610808565b92915050565b3360009081527f8dafb0716dbdc5222f4b82fa3495e71054f736c761c542cfff5cf37ceef75d46602052604090205463161b7d8160e21b9060ff16806102e157506001600160e01b031981166000908152602081815260408083206001600160a01b03845290915290205460ff165b6103065760405162461bcd60e51b81526004016102fd90610e7c565b60405180910390fd5b60005b82518110156103b95761031a6109f9565b83828151811061032657fe5b602002602001015190506000600281111561033d57fe5b8151600281111561034a57fe5b1415610367576103628160200151826040015161083a565b6103b0565b60018151600281111561037657fe5b141561038e57610362816020015182604001516108f0565b60028151600281111561039d57fe5b14156103b0576103b08160200151610979565b50600101610309565b505050565b6001600160e01b0319166000908152602081815260408083206001845290915290205460ff1690565b3360009081527f8dafb0716dbdc5222f4b82fa3495e71054f736c761c542cfff5cf37ceef75d46602052604090205463161b7d8160e21b9060ff168061045657506001600160e01b031981166000908152602081815260408083206001600160a01b03845290915290205460ff165b6104725760405162461bcd60e51b81526004016102fd90610e7c565b6103b983836108f0565b3360009081527f7b98092935fae603ce262effb602034522041de02b6c825126b8cca4fe67e98f60205260409020546060907f5c3e9760000000000000000000000000000000000000000000000000000000009060ff168061050757506001600160e01b031981166000908152602081815260408083206001600160a01b03845290915290205460ff165b6105235760405162461bcd60e51b81526004016102fd90610e7c565b6060835167ffffffffffffffff8111801561053d57600080fd5b5060405190808252806020026020018201604052801561057157816020015b606081526020019060019003908161055c5790505b50905060005b8451811015610668576000606086838151811061059057fe5b6020026020010151600001516001600160a01b03168784815181106105b157fe5b6020026020010151602001518885815181106105c957fe5b6020026020010151604001516040516105e29190610d41565b60006040518083038185875af1925050503d806000811461061f576040519150601f19603f3d011682016040523d82523d6000602084013e610624565b606091505b5091509150816106465760405162461bcd60e51b81526004016102fd90610e45565b8084848151811061065357fe5b60209081029190910101525050600101610577565b50336001600160a01b03167f853c59370d112fba38e26ede245c0d137fd5ff8360c69699264edc28d87233ea85836040516106a4929190610d70565b60405180910390a29392505050565b63161b7d8160e21b81565b600060208181529281526040808220909352908152205460ff1681565b3360009081527f8dafb0716dbdc5222f4b82fa3495e71054f736c761c542cfff5cf37ceef75d46602052604090205463161b7d8160e21b9060ff168061074a57506001600160e01b031981166000908152602081815260408083206001600160a01b03845290915290205460ff165b6107665760405162461bcd60e51b81526004016102fd90610e7c565b6103b9838361083a565b3360009081527f8dafb0716dbdc5222f4b82fa3495e71054f736c761c542cfff5cf37ceef75d46602052604090205463161b7d8160e21b9060ff16806107df57506001600160e01b031981166000908152602081815260408083206001600160a01b03845290915290205460ff165b6107fb5760405162461bcd60e51b81526004016102fd90610e7c565b61080482610979565b5050565b6001600160e01b031981167f01ffc9a70000000000000000000000000000000000000000000000000000000014919050565b610843826103be565b156108605760405162461bcd60e51b81526004016102fd90610eb3565b6001600160a01b0381166001141561088a5760405162461bcd60e51b81526004016102fd90610eea565b6001600160e01b031982166000818152602081815260408083206001600160a01b0386168085529252808320805460ff19166001179055519092339290917f1c3ac05008a204aef806fb7b0a907c496ed107cd989825beb9df5f8094c2eabd9190a45050565b6108f9826103be565b156109165760405162461bcd60e51b81526004016102fd90610eb3565b6001600160e01b031982166000818152602081815260408083206001600160a01b0386168085529252808320805460ff19169055519092339290917f682f2c466c1e9f6883eb72cbced01373e1cb18b05ae5c8bc04dc73d73e29f8cd9190a45050565b610982816103be565b1561099f5760405162461bcd60e51b81526004016102fd90610eb3565b6001600160e01b0319811660008181526020818152604080832060018085529252808320805460ff1916909217909155513392917f049c6b8b07a879425742523fa80f8ffb25e39ad518c93a5896a0df19518397e591a350565b6040805160608101909152806000815260006020820181905260409091015290565b80356001600160a01b038116811461026c57600080fd5b80356001600160e01b03198116811461026c57600080fd5b80356003811061026c57600080fd5b60006020808385031215610a6b578182fd5b823567ffffffffffffffff80821115610a82578384fd5b81850186601f820112610a93578485fd5b80359250610aa8610aa384610f51565b610f2a565b83815284810190828601875b86811015610b7c5781358501601f19606081838f03011215610ad4578a8bfd5b610ade6060610f2a565b610aea8e8c8501610a1b565b815260408301358b820152606083013589811115610b06578c8dfd5b8084018f603f820112610b17578d8efd5b8c81013594508a851115610b29578d8efd5b610b398d85601f88011601610f2a565b91508482528f6040868301011115610b4f578d8efd5b84604082018e840137509283018b018c905260408101929092525084529287019290870190600101610ab4565b50909998505050505050505050565b60006020808385031215610b9d578182fd5b823567ffffffffffffffff811115610bb3578283fd5b80840185601f820112610bc4578384fd5b80359150610bd4610aa383610f51565b828152838101908285016060808602850187018a1015610bf2578788fd5b8794505b85851015610c595780828b031215610c0c578788fd5b610c1581610f2a565b610c1f8b84610a4a565b8152610c2d8b898501610a32565b888201526040610c3f8c828601610a1b565b908201528452600194909401939286019290810190610bf6565b509098975050505050505050565b600060208284031215610c78578081fd5b8135610c8381610fad565b9392505050565b60008060408385031215610c9c578081fd5b8235610ca781610fad565b9150610cb68460208501610a1b565b90509250929050565b60008282518085526020808601955080818302840101818601855b84811015610d0857601f19868403018952610cf6838351610d15565b98840198925090830190600101610cda565b5090979650505050505050565b60008151808452610d2d816020860160208601610f7d565b601f01601f19169290920160200192915050565b60008251610d53818460208701610f7d565b9190910192915050565b600060208252610c836020830184610cbf565b604080825283518282018190526000919060609081850190602080820287018401818a01875b84811015610e04577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08a84030186528151610dd18151610f71565b8452848101518585015288810151888a860152610df089860182610d15565b978601979450505090830190600101610d96565b505087810382890152610e17818a610cbf565b9a9950505050505050505050565b901515815260200190565b6001600160e01b031991909116815260200190565b6020808252600c908201527f6561676c65743a2063616c6c0000000000000000000000000000000000000000604082015260600190565b60208082526009908201527f61636c3a20617574680000000000000000000000000000000000000000000000604082015260600190565b6020808252600b908201527f61636c3a2066726f7a656e000000000000000000000000000000000000000000604082015260600190565b6020808252600f908201527f61636c3a2062616420667265657a650000000000000000000000000000000000604082015260600190565b90815260200190565b60405181810167ffffffffffffffff81118282101715610f4957600080fd5b604052919050565b600067ffffffffffffffff821115610f67578081fd5b5060209081020190565b6001600160a01b031690565b60005b83811015610f98578181015183820152602001610f80565b83811115610fa7576000848401525b50505050565b6001600160e01b031981168114610fc357600080fd5b5056fea26469706673582212207bdb761efe9e5bd9ce23fabb4538ce82d5f49d766398df8315e5742da482a28c64736f6c63430006080033",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C3E9760 GT PUSH2 0x69 JUMPI DUP1 PUSH4 0x96FC8ABD GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x96FC8ABD EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0xA157A10D EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0xBDF9A726 EQ PUSH2 0x20E JUMPI PUSH2 0xE2 JUMP JUMPDEST DUP1 PUSH4 0x5C3E9760 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x7E8C7F08 EQ PUSH2 0x1AC JUMPI PUSH2 0xE2 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0x1C47671B EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0x495A9825 EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0x58849734 EQ PUSH2 0x15F JUMPI PUSH2 0xE2 JUMP JUMPDEST CALLDATASIZE PUSH2 0xE2 JUMPI CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x6C703791F399558807424F489CCD811C72B4FF0B74AF547264FAD7C646776DF0 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0xF21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x107 PUSH2 0x102 CALLDATASIZE PUSH1 0x4 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x22E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114 SWAP2 SWAP1 PUSH2 0xE25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13D PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xB8B JUMP JUMPDEST PUSH2 0x272 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x107 PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x3BE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13D PUSH2 0x17A CALLDATASIZE PUSH1 0x4 PUSH2 0xC8A JUMP JUMPDEST PUSH2 0x3E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19F PUSH2 0x19A CALLDATASIZE PUSH1 0x4 PUSH2 0xA59 JUMP JUMPDEST PUSH2 0x47C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114 SWAP2 SWAP1 PUSH2 0xD5D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x6B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114 SWAP2 SWAP1 PUSH2 0xE30 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x107 PUSH2 0x1E9 CALLDATASIZE PUSH1 0x4 PUSH2 0xC8A JUMP JUMPDEST PUSH2 0x6BE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13D PUSH2 0x209 CALLDATASIZE PUSH1 0x4 PUSH2 0xC8A JUMP JUMPDEST PUSH2 0x6DB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13D PUSH2 0x229 CALLDATASIZE PUSH1 0x4 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x770 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0x5C3E976000000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x26C JUMPI POP PUSH2 0x26C DUP3 PUSH2 0x808 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x8DAFB0716DBDC5222F4B82FA3495E71054F736C761C542CFFF5CF37CEEF75D46 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0x161B7D81 PUSH1 0xE2 SHL SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x2E1 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x306 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FD SWAP1 PUSH2 0xE7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x3B9 JUMPI PUSH2 0x31A PUSH2 0x9F9 JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x326 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x33D JUMPI INVALID JUMPDEST DUP2 MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x34A JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x367 JUMPI PUSH2 0x362 DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0x83A JUMP JUMPDEST PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x1 DUP2 MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x376 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x38E JUMPI PUSH2 0x362 DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0x8F0 JUMP JUMPDEST PUSH1 0x2 DUP2 MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x39D JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x3B0 JUMPI PUSH2 0x3B0 DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0x979 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x309 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x8DAFB0716DBDC5222F4B82FA3495E71054F736C761C542CFFF5CF37CEEF75D46 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0x161B7D81 PUSH1 0xE2 SHL SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x456 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x472 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FD SWAP1 PUSH2 0xE7C JUMP JUMPDEST PUSH2 0x3B9 DUP4 DUP4 PUSH2 0x8F0 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x7B98092935FAE603CE262EFFB602034522041DE02B6C825126B8CCA4FE67E98F PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH32 0x5C3E976000000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x507 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x523 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FD SWAP1 PUSH2 0xE7C JUMP JUMPDEST PUSH1 0x60 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x53D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x571 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x55C JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x668 JUMPI PUSH1 0x0 PUSH1 0x60 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x590 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x5B1 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP9 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x5C9 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x5E2 SWAP2 SWAP1 PUSH2 0xD41 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x61F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x624 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x646 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FD SWAP1 PUSH2 0xE45 JUMP JUMPDEST DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x653 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP POP PUSH1 0x1 ADD PUSH2 0x577 JUMP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x853C59370D112FBA38E26EDE245C0D137FD5FF8360C69699264EDC28D87233EA DUP6 DUP4 PUSH1 0x40 MLOAD PUSH2 0x6A4 SWAP3 SWAP2 SWAP1 PUSH2 0xD70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x161B7D81 PUSH1 0xE2 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 DUP2 MSTORE SWAP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 MSTORE SWAP1 DUP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x8DAFB0716DBDC5222F4B82FA3495E71054F736C761C542CFFF5CF37CEEF75D46 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0x161B7D81 PUSH1 0xE2 SHL SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x74A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x766 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FD SWAP1 PUSH2 0xE7C JUMP JUMPDEST PUSH2 0x3B9 DUP4 DUP4 PUSH2 0x83A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x8DAFB0716DBDC5222F4B82FA3495E71054F736C761C542CFFF5CF37CEEF75D46 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0x161B7D81 PUSH1 0xE2 SHL SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x7DF JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x7FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FD SWAP1 PUSH2 0xE7C JUMP JUMPDEST PUSH2 0x804 DUP3 PUSH2 0x979 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x843 DUP3 PUSH2 0x3BE JUMP JUMPDEST ISZERO PUSH2 0x860 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FD SWAP1 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 EQ ISZERO PUSH2 0x88A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FD SWAP1 PUSH2 0xEEA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD SWAP1 SWAP3 CALLER SWAP3 SWAP1 SWAP2 PUSH32 0x1C3AC05008A204AEF806FB7B0A907C496ED107CD989825BEB9DF5F8094C2EABD SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x8F9 DUP3 PUSH2 0x3BE JUMP JUMPDEST ISZERO PUSH2 0x916 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FD SWAP1 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD SWAP1 SWAP3 CALLER SWAP3 SWAP1 SWAP2 PUSH32 0x682F2C466C1E9F6883EB72CBCED01373E1CB18B05AE5C8BC04DC73D73E29F8CD SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x982 DUP2 PUSH2 0x3BE JUMP JUMPDEST ISZERO PUSH2 0x99F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FD SWAP1 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE MLOAD CALLER SWAP3 SWAP2 PUSH32 0x49C6B8B07A879425742523FA80F8FFB25E39AD518C93A5896A0DF19518397E5 SWAP2 LOG3 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP2 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA6B JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xA82 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD DUP7 PUSH1 0x1F DUP3 ADD SLT PUSH2 0xA93 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP3 POP PUSH2 0xAA8 PUSH2 0xAA3 DUP5 PUSH2 0xF51 JUMP JUMPDEST PUSH2 0xF2A JUMP JUMPDEST DUP4 DUP2 MSTORE DUP5 DUP2 ADD SWAP1 DUP3 DUP7 ADD DUP8 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0xB7C JUMPI DUP2 CALLDATALOAD DUP6 ADD PUSH1 0x1F NOT PUSH1 0x60 DUP2 DUP4 DUP16 SUB ADD SLT ISZERO PUSH2 0xAD4 JUMPI DUP11 DUP12 REVERT JUMPDEST PUSH2 0xADE PUSH1 0x60 PUSH2 0xF2A JUMP JUMPDEST PUSH2 0xAEA DUP15 DUP13 DUP6 ADD PUSH2 0xA1B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x40 DUP4 ADD CALLDATALOAD DUP12 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD CALLDATALOAD DUP10 DUP2 GT ISZERO PUSH2 0xB06 JUMPI DUP13 DUP14 REVERT JUMPDEST DUP1 DUP5 ADD DUP16 PUSH1 0x3F DUP3 ADD SLT PUSH2 0xB17 JUMPI DUP14 DUP15 REVERT JUMPDEST DUP13 DUP2 ADD CALLDATALOAD SWAP5 POP DUP11 DUP6 GT ISZERO PUSH2 0xB29 JUMPI DUP14 DUP15 REVERT JUMPDEST PUSH2 0xB39 DUP14 DUP6 PUSH1 0x1F DUP9 ADD AND ADD PUSH2 0xF2A JUMP JUMPDEST SWAP2 POP DUP5 DUP3 MSTORE DUP16 PUSH1 0x40 DUP7 DUP4 ADD ADD GT ISZERO PUSH2 0xB4F JUMPI DUP14 DUP15 REVERT JUMPDEST DUP5 PUSH1 0x40 DUP3 ADD DUP15 DUP5 ADD CALLDATACOPY POP SWAP3 DUP4 ADD DUP12 ADD DUP13 SWAP1 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP DUP5 MSTORE SWAP3 DUP8 ADD SWAP3 SWAP1 DUP8 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xAB4 JUMP JUMPDEST POP SWAP1 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB9D JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBB3 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP1 DUP5 ADD DUP6 PUSH1 0x1F DUP3 ADD SLT PUSH2 0xBC4 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP2 POP PUSH2 0xBD4 PUSH2 0xAA3 DUP4 PUSH2 0xF51 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP4 DUP2 ADD SWAP1 DUP3 DUP6 ADD PUSH1 0x60 DUP1 DUP7 MUL DUP6 ADD DUP8 ADD DUP11 LT ISZERO PUSH2 0xBF2 JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP5 POP JUMPDEST DUP6 DUP6 LT ISZERO PUSH2 0xC59 JUMPI DUP1 DUP3 DUP12 SUB SLT ISZERO PUSH2 0xC0C JUMPI DUP8 DUP9 REVERT JUMPDEST PUSH2 0xC15 DUP2 PUSH2 0xF2A JUMP JUMPDEST PUSH2 0xC1F DUP12 DUP5 PUSH2 0xA4A JUMP JUMPDEST DUP2 MSTORE PUSH2 0xC2D DUP12 DUP10 DUP6 ADD PUSH2 0xA32 JUMP JUMPDEST DUP9 DUP3 ADD MSTORE PUSH1 0x40 PUSH2 0xC3F DUP13 DUP3 DUP7 ADD PUSH2 0xA1B JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE DUP5 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP3 DUP7 ADD SWAP3 SWAP1 DUP2 ADD SWAP1 PUSH2 0xBF6 JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC78 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC83 DUP2 PUSH2 0xFAD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC9C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xCA7 DUP2 PUSH2 0xFAD JUMP JUMPDEST SWAP2 POP PUSH2 0xCB6 DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0xA1B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MLOAD DUP1 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP6 POP DUP1 DUP2 DUP4 MUL DUP5 ADD ADD DUP2 DUP7 ADD DUP6 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xD08 JUMPI PUSH1 0x1F NOT DUP7 DUP5 SUB ADD DUP10 MSTORE PUSH2 0xCF6 DUP4 DUP4 MLOAD PUSH2 0xD15 JUMP JUMPDEST SWAP9 DUP5 ADD SWAP9 SWAP3 POP SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xCDA JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xD2D DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xF7D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0xD53 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0xF7D JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0xC83 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCBF JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP4 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x60 SWAP1 DUP2 DUP6 ADD SWAP1 PUSH1 0x20 DUP1 DUP3 MUL DUP8 ADD DUP5 ADD DUP2 DUP11 ADD DUP8 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xE04 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA0 DUP11 DUP5 SUB ADD DUP7 MSTORE DUP2 MLOAD PUSH2 0xDD1 DUP2 MLOAD PUSH2 0xF71 JUMP JUMPDEST DUP5 MSTORE DUP5 DUP2 ADD MLOAD DUP6 DUP6 ADD MSTORE DUP9 DUP2 ADD MLOAD DUP9 DUP11 DUP7 ADD MSTORE PUSH2 0xDF0 DUP10 DUP7 ADD DUP3 PUSH2 0xD15 JUMP JUMPDEST SWAP8 DUP7 ADD SWAP8 SWAP5 POP POP POP SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xD96 JUMP JUMPDEST POP POP DUP8 DUP2 SUB DUP3 DUP10 ADD MSTORE PUSH2 0xE17 DUP2 DUP11 PUSH2 0xCBF JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xC SWAP1 DUP3 ADD MSTORE PUSH32 0x6561676C65743A2063616C6C0000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x9 SWAP1 DUP3 ADD MSTORE PUSH32 0x61636C3A20617574680000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH32 0x61636C3A2066726F7A656E000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH32 0x61636C3A2062616420667265657A650000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xF49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xF67 JUMPI DUP1 DUP2 REVERT JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF98 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xF80 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xFA7 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xFC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0xDB761EFE9E5BD9CE23FABB4538CE82D5F49D766398DF8315E5742DA4 DUP3 LOG2 DUP13 PUSH5 0x736F6C6343 STOP MOD ADDMOD STOP CALLER ",
            "sourceMap": "220:1097:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;686:35;;699:10;;686:35;;;;711:9;;686:35;;;;;;;;;;220:1097;;12:1:-1;9;2:12;317:190:12;;5:9:-1;2:2;;;27:1;24;17:12;2:2;-1:-1;317:190:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1502:452:7;;5:9:-1;2:2;;;27:1;24;17:12;2:2;-1:-1;1502:452:7;;;;;;;;:::i;:::-;;2612:108;;5:9:-1;2:2;;;27:1;24;17:12;2:2;-1:-1;2612:108:7;;;;;;;;:::i;1298:106::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;-1:-1;1298:106:7;;;;;;;;:::i;734:558:1:-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;-1:-1;734:558:1;;;;;;;;:::i;:::-;;;;;;;;285:153:7;;5:9:-1;2:2;;;27:1;24;17:12;2:2;285:153:7;;;:::i;:::-;;;;;;;;565:58;;5:9:-1;2:2;;;27:1;24;17:12;2:2;-1:-1;565:58:7;;;;;;;;:::i;1188:104::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;-1:-1;1188:104:7;;;;;;;;:::i;1410:86::-;;5:9:-1;2:2;;;27:1;24;17:12;2:2;-1:-1;1410:86:7;;;;;;;;:::i;317:190:12:-;395:4;292:18;-1:-1:-1;;;;;;418:41:12;;;;:82;;;463:37;487:12;463:23;:37::i;:::-;411:89;317:190;-1:-1:-1;;317:190:12:o;1502:452:7:-;933:10;920:5;:24;;;:12;;:24;:12;:24;;;-1:-1:-1;;;;920:24:7;;;:84;;-1:-1:-1;;;;;;;982:12:7;;:5;:12;;;;;;;;;;;-1:-1:-1;;;;;982:22:7;;;;;;;;;;920:84;899:166;;;;-1:-1:-1;;;899:166:7;;;;;;;;;;;;;;;;;1591:9:::1;1586:362;1610:5;:12;1606:1;:16;1586:362;;;1643:32;;:::i;:::-;1678:5;1684:1;1678:8;;;;;;;;;;;;;;1643:43;;1716:24;1705:35;;;;;;;;:7:::0;;:35:::1;::::0;::::1;;;;;;;1701:236;;;1742:27;1749:4;:9;;;1760:4;:8;;;1742:6;:27::i;:::-;1701:236;;;1803:25;1792:7:::0;;:36:::1;::::0;::::1;;;;;;;1788:149;;;1830:28;1838:4;:9;;;1849:4;:8;;;1830:7;:28::i;1788:149::-;1892:25;1881:7:::0;;:36:::1;::::0;::::1;;;;;;;1877:60;;;1919:18;1927:4;:9;;;1919:7;:18::i;:::-;-1:-1:-1::0;1624:3:7::1;;1586:362;;;;1502:452:::0;;:::o;2612:108::-;-1:-1:-1;;;;;;2688:12:7;2665:4;2688:12;;;;;;;;;;;-1:-1:-1;2688:25:7;;;;;;;;;;;2612:108::o;1298:106::-;933:10;920:5;:24;;;:12;;:24;:12;:24;;;-1:-1:-1;;;;920:24:7;;;:84;;-1:-1:-1;;;;;;;982:12:7;;:5;:12;;;;;;;;;;;-1:-1:-1;;;;;982:22:7;;;;;;;;;;920:84;899:166;;;;-1:-1:-1;;;899:166:7;;;;;;;;;1377:20:::1;1385:5;1392:4;1377:7;:20::i;734:558:1:-:0;933:10:7;920:5;:24;;;:12;;:24;:12;:24;;;826:14:1;;307:18;;920:24:7;;;:84;;-1:-1:-1;;;;;;;982:12:7;;:5;:12;;;;;;;;;;;-1:-1:-1;;;;;982:22:7;;;;;;;;;;920:84;899:166;;;;-1:-1:-1;;;899:166:7;;;;;;;;;852:26:1::1;893:7;:14;881:27;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;881:27:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;852:56:1;-1:-1:-1;924:9:1::1;919:280;943:7;:14;939:1;:18;919:280;;;1023:7;1032:16;1052:7;1060:1;1052:10;;;;;;;;;;;;;;:13;;;-1:-1:-1::0;;;;;1052:18:1::1;1078:7;1086:1;1078:10;;;;;;;;;;;;;;:16;;;1096:7;1104:1;1096:10;;;;;;;;;;;;;;:15;;;1052:60;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;1022:90:1;;;;1134:2;1126:27;;;::::0;-1:-1:-1;;;1126:27:1;;::::1;::::0;::::1;;;;;1185:3;1168:11;1180:1;1168:14;;;;;;;;;::::0;;::::1;::::0;;;;;:20;-1:-1:-1;;959:3:1::1;;919:280;;;-1:-1:-1::0;1214:42:1::1;::::0;1223:10:::1;::::0;1214:42:::1;::::0;::::1;::::0;1235:7;;1244:11;;1214:42:::1;;;;;;;;;;1274:11:::0;734:558;-1:-1:-1;;;734:558:1:o;285:153:7:-;-1:-1:-1;;;285:153:7;:::o;565:58::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;1188:104::-;933:10;920:5;:24;;;:12;;:24;:12;:24;;;-1:-1:-1;;;;920:24:7;;;:84;;-1:-1:-1;;;;;;;982:12:7;;:5;:12;;;;;;;;;;;-1:-1:-1;;;;;982:22:7;;;;;;;;;;920:84;899:166;;;;-1:-1:-1;;;899:166:7;;;;;;;;;1266:19:::1;1273:5;1280:4;1266:6;:19::i;1410:86::-:0;933:10;920:5;:24;;;:12;;:24;:12;:24;;;-1:-1:-1;;;;920:24:7;;;:84;;-1:-1:-1;;;;;;;982:12:7;;:5;:12;;;;;;;;;;;-1:-1:-1;;;;;982:22:7;;;;;;;;;;920:84;899:166;;;;-1:-1:-1;;;899:166:7;;;;;;;;;1475:14:::1;1483:5;1475:7;:14::i;:::-;1410:86:::0;;:::o;493:142:15:-;-1:-1:-1;;;;;;593:35:15;188:18;593:35;;493:142::o;1960:258:7:-;2032:15;2041:5;2032:8;:15::i;:::-;2031:16;2023:40;;;;-1:-1:-1;;;2023:40:7;;;;;;;;;-1:-1:-1;;;;;2081:19:7;;-1:-1:-1;2081:19:7;;2073:47;;;;-1:-1:-1;;;2073:47:7;;;;;;;;;-1:-1:-1;;;;;;2139:12:7;;:5;:12;;;;;;;;;;;-1:-1:-1;;;;;2139:18:7;;;;;;;;;;:25;;-1:-1:-1;;2139:25:7;-1:-1:-1;2139:25:7;;;2179:32;2139:18;;2194:10;;2139:12;;2179:32;;2139:5;2179:32;1960:258;;:::o;2224:195::-;2297:15;2306:5;2297:8;:15::i;:::-;2296:16;2288:40;;;;-1:-1:-1;;;2288:40:7;;;;;;;;;-1:-1:-1;;;;;;2339:12:7;;2360:5;2339:12;;;;;;;;;;;-1:-1:-1;;;;;2339:18:7;;;;;;;;;;:26;;-1:-1:-1;;2339:26:7;;;2380:32;2339:18;;2395:10;;2339:12;;2380:32;;2360:5;2380:32;2224:195;;:::o;2425:181::-;2484:15;2493:5;2484:8;:15::i;:::-;2483:16;2475:40;;;;-1:-1:-1;;;2475:40:7;;;;;;;;;-1:-1:-1;;;;;;2526:12:7;;:5;:12;;;;;;;;;;;-1:-1:-1;2526:25:7;;;;;;;;:32;;-1:-1:-1;;2526:32:7;;;;;;;2574:25;2588:10;;2526:12;2574:25;;;2425:181;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130::-;72:20;;-1:-1;;;;;18824:54;;19564:35;;19554:2;;19613:1;;19603:12;1767:128;1833:20;;-1:-1;;;;;;18672:78;;19687:34;;19677:2;;19735:1;;19725:12;2351:152;2429:20;;19831:1;19821:12;;19811:2;;19847:1;;19837:12;4050:425;;4203:2;;4191:9;4182:7;4178:23;4174:32;4171:2;;;-1:-1;;4209:12;4171:2;4267:17;4254:31;4305:18;;4297:6;4294:30;4291:2;;;-1:-1;;4327:12;4291:2;4442:6;4431:9;4427:22;319:3;312:4;304:6;300:17;296:27;286:2;;-1:-1;;327:12;286:2;374:6;361:20;347:34;;396:104;411:88;492:6;411:88;;;396:104;;;528:21;;;585:14;;;;560:17;;;-1:-1;665:257;690:6;687:1;684:13;665:257;;;760:17;;748:30;;-1:-1;2655:4;2634:19;;;;;2630:30;2627:2;;;-1:-1;;2663:12;2627:2;2691:20;2655:4;2691:20;;;2791:49;2836:3;4203:2;748:30;;2791:49;;;2773:16;2766:75;2957:22;748:30;2957:22;3980:20;4203:2;2922:5;2918:16;2911:75;2655:4;748:30;3060:18;3047:32;4305:18;3091:6;3088:30;3085:2;;;-1:-1;;3121:12;3085:2;3211:6;748:30;3196:22;2004:3;1985:17;3196:22;1985:17;1981:27;1971:2;;-1:-1;;2012:12;1971:2;4203;3196:22;;2046:20;2032:34;;4305:18;16274:6;16271:30;16268:2;;;-1:-1;;16304:12;16268:2;2081:64;4203:2;2634:19;312:4;16362:6;16358:17;16354:33;16435:15;2081:64;;;2072:73;;2165:6;2158:5;2151:21;2269:3;2957:22;2260:6;3196:22;2251:16;;2248:25;2245:2;;;-1:-1;;2276:12;2245:2;19051:6;2957:22;3196;2189:17;4203:2;2227:5;2223:16;19028:30;-1:-1;19089:16;;;;;19082:27;;;2957:22;3148:16;;3141:84;;;;-1:-1;785:74;;873:14;;;;901;;;;712:1;705:9;665:257;;;-1:-1;4347:112;;4165:310;-1:-1;;;;;;;;;4165:310;4482:429;;4637:2;;4625:9;4616:7;4612:23;4608:32;4605:2;;;-1:-1;;4643:12;4605:2;4701:17;4688:31;4739:18;4731:6;4728:30;4725:2;;;-1:-1;;4761:12;4725:2;4878:6;4867:9;4863:22;1117:3;1110:4;1102:6;1098:17;1094:27;1084:2;;-1:-1;;1125:12;1084:2;1172:6;1159:20;1145:34;;1194:106;1209:90;1292:6;1209:90;;1194:106;1328:21;;;1385:14;;;;1360:17;;;1486:4;1474:17;;;1465:27;;;;1462:36;-1:-1;1459:2;;;-1:-1;;1501:12;1459:2;-1:-1;1527:10;;1521:232;1546:6;1543:1;1540:13;1521:232;;;1486:4;3390:9;3385:3;3381:19;3377:30;3374:2;;;-1:-1;;3410:12;3374:2;3438:20;1486:4;3438:20;;;3538:60;3594:3;3570:22;3538:60;;;3520:16;3513:86;3693:48;3737:3;4637:2;3717:9;3713:22;3693:48;;;4637:2;3679:5;3675:16;3668:74;3802:2;3835:49;3880:3;3802:2;3860:9;3856:22;3835:49;;;3817:16;;;3810:75;1614:76;;1568:1;1561:9;;;;;1704:14;;;;1732;;;;1521:232;;;-1:-1;4781:114;;4599:312;-1:-1;;;;;;;;4599:312;4918:239;;5021:2;5009:9;5000:7;4996:23;4992:32;4989:2;;;-1:-1;;5027:12;4989:2;1846:6;1833:20;1858:32;1884:5;1858:32;;;5079:62;4983:174;-1:-1;;;4983:174;5164:364;;;5284:2;5272:9;5263:7;5259:23;5255:32;5252:2;;;-1:-1;;5290:12;5252:2;1846:6;1833:20;1858:32;1884:5;1858:32;;;5342:62;-1:-1;5459:53;5504:7;5441:2;5480:22;;5459:53;;;5449:63;;5246:282;;;;;;6128:920;;6277:77;6348:5;16928:12;17668:6;17663:3;17656:19;17705:4;;17700:3;17696:14;6360:102;;17705:4;;6519:6;6515:17;17700:3;6506:27;;17705:4;6613:5;16591:14;-1:-1;6652:357;6677:6;6674:1;6671:13;6652:357;;;-1:-1;;17700:3;6733:4;6729:20;;6724:3;6717:33;5655:64;5715:3;6784:6;6778:13;5655:64;;;6988:14;;;;6798:90;-1:-1;17363:14;;;;6699:1;6692:9;6652:357;;;-1:-1;7032:10;;6270:778;-1:-1;;;;;;;6270:778;8399:323;;8531:5;16928:12;17668:6;17663:3;17656:19;8614:52;8659:6;17705:4;17700:3;17696:14;17705:4;8640:5;8636:16;8614:52;;;19488:2;19468:14;-1:-1;;19464:28;8678:39;;;;17705:4;8678:39;;8479:243;-1:-1;;8479:243;11382:271;;8889:5;16928:12;9000:52;9045:6;9040:3;9033:4;9026:5;9022:16;9000:52;;;9064:16;;;;;11516:137;-1:-1;;11516:137;11660:406;;11855:2;11876:17;11869:47;11930:126;11855:2;11844:9;11840:18;12042:6;11930:126;;12073:761;12394:2;12408:47;;;16928:12;;12379:18;;;17656:19;;;12073:761;;12394:2;17696:14;;;;;;17705:4;7570:17;;;7561:27;;;;16591:14;;;12073:761;7722:402;7747:6;7744:1;7741:13;7722:402;;;7799:20;12383:9;7803:4;7799:20;;7794:3;7787:33;7854:6;7848:13;18483:24;10644:16;10638:23;18483:24;;;6059:3;6052:37;17705:4;10803:5;10799:16;10793:23;17705:4;10874:3;10870:14;11213:37;12394:2;10957:5;10953:16;10947:23;17696:14;12394:2;10994:3;10990:14;10983:38;11036:71;17696:14;10569:3;10565:14;11088:12;11036:71;;;8103:14;;;;7868:120;-1:-1;;;17363:14;;;;7769:1;7762:9;7722:402;;;7726:14;;12673:9;12667:4;12663:20;17705:4;12647:9;12643:18;12636:48;12698:126;12819:4;12810:6;12698:126;;;12690:134;12365:469;-1:-1;;;;;;;;;;12365:469;12841:210;18585:13;;18578:21;8236:34;;12962:2;12947:18;;12933:118;13058:218;-1:-1;;;;;;18672:78;;;;8351:36;;13183:2;13168:18;;13154:122;13283:416;13483:2;13497:47;;;9317:2;13468:18;;;17656:19;9353:14;17696;;;9333:35;9387:12;;;13454:245;13706:416;13906:2;13920:47;;;9638:1;13891:18;;;17656:19;9673:11;17696:14;;;9653:32;9704:12;;;13877:245;14129:416;14329:2;14343:47;;;9955:2;14314:18;;;17656:19;9991:13;17696:14;;;9971:34;10024:12;;;14300:245;14552:416;14752:2;14766:47;;;10275:2;14737:18;;;17656:19;10311:17;17696:14;;;10291:38;10348:12;;;14723:245;14975:222;11213:37;;;15102:2;15087:18;;15073:124;15204:256;15266:2;15260:9;15292:17;;;15367:18;15352:34;;15388:22;;;15349:62;15346:2;;;15424:1;;15414:12;15346:2;15266;15433:22;15244:216;;-1:-1;15244:216;15467:328;;15650:18;15642:6;15639:30;15636:2;;;-1:-1;;15672:12;15636:2;-1:-1;15717:4;15705:17;;;15770:15;;15573:222;18762:121;-1:-1;;;;;18824:54;;18807:76;19124:268;19189:1;19196:101;19210:6;19207:1;19204:13;19196:101;;;19277:11;;;19271:18;19258:11;;;19251:39;19232:2;19225:10;19196:101;;;19312:6;19309:1;19306:13;19303:2;;;19189:1;19368:6;19363:3;19359:16;19352:27;19303:2;;19173:219;;;;19629:115;-1:-1;;;;;;18672:78;;19687:34;;19677:2;;19735:1;;19725:12;19677:2;19671:73;"
          },
          "methodIdentifiers": {
            "ROOT_ROLE()": "7e8c7f08",
            "bulk((uint8,bytes4,address)[])": "1c47671b",
            "exec((address,uint256,bytes)[])": "5c3e9760",
            "freeze(bytes4)": "bdf9a726",
            "grant(bytes4,address)": "a157a10d",
            "isFrozen(bytes4)": "495a9825",
            "revoke(bytes4,address)": "58849734",
            "roles(bytes4,address)": "96fc8abd",
            "supportsInterface(bytes4)": "01ffc9a7"
          }
        }
      }
    },
    "contracts/EagletFactory.sol": {
      "EagletFactory": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "contract ERC3000Registry",
                "name": "_registry",
                "type": "address"
              },
              {
                "internalType": "contract OptimisticQueueFactory",
                "name": "_queueFactory",
                "type": "address"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "inputs": [
              {
                "internalType": "string",
                "name": "_name",
                "type": "string"
              }
            ],
            "name": "newDummyEaglet",
            "outputs": [
              {
                "internalType": "contract Eaglet",
                "name": "eaglet",
                "type": "address"
              },
              {
                "internalType": "contract OptimisticQueue",
                "name": "queue",
                "type": "address"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "queueFactory",
            "outputs": [
              {
                "internalType": "contract OptimisticQueueFactory",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "registry",
            "outputs": [
              {
                "internalType": "contract ERC3000Registry",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          }
        ],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "608060405234801561001057600080fd5b50604051611c8d380380611c8d83398101604081905261002f91610063565b600080546001600160a01b039283166001600160a01b031991821617909155600180549390921692169190911790556100b4565b60008060408385031215610075578182fd5b82516100808161009c565b60208401519092506100918161009c565b809150509250929050565b6001600160a01b03811681146100b157600080fd5b50565b611bca806100c36000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80634295f16c146100465780636ca4110e146100705780637b10399914610085575b600080fd5b61005961005436600461070a565b61008d565b60405161006792919061091f565b60405180910390f35b6100786105f0565b604051610067919061090b565b6100786105ff565b60008061009861060e565b6100a0610625565b506040805160c0810182526000808252602080830185905282840185905260608301859052608083018290528351908101845281815260a08301525491517f328867ce00000000000000000000000000000000000000000000000000000000815290916001600160a01b03169063328867ce9061012390309085906004016107cd565b602060405180830381600087803b15801561013d57600080fd5b505af1158015610151573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061017591906106e3565b9250826040516101849061066d565b61018e919061090b565b604051809103906000f0801580156101aa573d6000803e3d6000fd5b506001546040517f76d649740000000000000000000000000000000000000000000000000000000081529195506001600160a01b0316906376d64974906101fb90879087908b908b90600401610939565b600060405180830381600087803b15801561021557600080fd5b505af1158015610229573d6000803e3d6000fd5b505060408051600680825260e08201909252606093509150816020015b61024e61067a565b81526020019060019003908161024657905050604080516060810190915290915080600081527f25ddcbe00000000000000000000000000000000000000000000000000000000060208201526001600160a01b03604090910152815182906000906102b557fe5b6020908102919091010152604080516060810190915280600081527fecb6cba60000000000000000000000000000000000000000000000000000000060208201526001600160a01b0360409091015281518290600190811061031357fe5b6020908102919091010152604080516060810190915280600081527f5decc1900000000000000000000000000000000000000000000000000000000060208201526001600160a01b0360409091015281518290600290811061037157fe5b6020908102919091010152604080516060810190915280600081527faa455d9f0000000000000000000000000000000000000000000000000000000060208201526001600160a01b0387166040909101528151829060039081106103d157fe5b602090810291909101015260408051606081019091528060018152602001856001600160a01b0316637e8c7f086040518163ffffffff1660e01b815260040160206040518083038186803b15801561042857600080fd5b505afa15801561043c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610460919061069c565b7fffffffff000000000000000000000000000000000000000000000000000000001681523060209091015281518290600490811061049a57fe5b602090810291909101015260408051606081019091528060028152602001856001600160a01b0316637e8c7f086040518163ffffffff1660e01b815260040160206040518083038186803b1580156104f157600080fd5b505afa158015610505573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610529919061069c565b7fffffffff00000000000000000000000000000000000000000000000000000000168152600060209091015281518290600590811061056457fe5b60209081029190910101526040517f1c47671b0000000000000000000000000000000000000000000000000000000081526001600160a01b03851690631c47671b906105b4908490600401610895565b600060405180830381600087803b1580156105ce57600080fd5b505af11580156105e2573d6000803e3d6000fd5b505050505050509250929050565b6000546001600160a01b031681565b6001546001600160a01b031681565b604080518082019091526000808252602082015290565b6040518060c001604052806000815260200161063f61060e565b815260200161064c61060e565b815260200161065961060e565b815260006020820152606060409091015290565b6111f88061099d83390190565b6040805160608101909152806000815260006020820181905260409091015290565b6000602082840312156106ad578081fd5b81517fffffffff00000000000000000000000000000000000000000000000000000000811681146106dc578182fd5b9392505050565b6000602082840312156106f4578081fd5b81516001600160a01b03811681146106dc578182fd5b6000806020838503121561071c578081fd5b823567ffffffffffffffff80821115610733578283fd5b81850186601f820112610744578384fd5b8035925081831115610754578384fd5b866020848301011115610765578384fd5b60200196919550909350505050565b6001600160a01b03169052565b7fffffffff00000000000000000000000000000000000000000000000000000000169052565b600381106107b157fe5b9052565b80516001600160a01b03168252602090810151910152565b60006001600160a01b038085168352602060408185015284516040850152808501516107fc60608601826107b5565b50604085015161080f60a08601826107b5565b50606085015161082260e08601826107b5565b5060808501516101208382168187015260a08701519350806101408701525050815180610160860152835b8181101561086a578381018301518682016101800152820161084d565b8181111561087c578461018083880101525b50601f01601f1916939093016101800195945050505050565b6020808252825182820181905260009190848201906040850190845b818110156108ff5783516108c68482516107a7565b858101516108d687860182610781565b506040808201516108e982870182610774565b50505092840192606092909201916001016108b1565b50909695505050505050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b60006001600160a01b03808716835280861660208401525060806040830152826080830152828460a08401378060a08484010152601f19601f84011660a083828501030160608401528160a0828501015260c0818401019150509594505050505056fe60806040523480156200001157600080fd5b50604051620011f8380380620011f883398101604081905262000034916200016e565b306200005163161b7d8160e21b826001600160e01b036200007516565b506200006e6302e1f4bb60e51b826001600160e01b036200007516565b50620001ec565b62000089826001600160e01b036200014516565b15620000b25760405162461bcd60e51b8152600401620000a9906200019e565b60405180910390fd5b6001600160a01b03811660011415620000df5760405162461bcd60e51b8152600401620000a990620001c3565b6001600160e01b031982166000818152602081815260408083206001600160a01b0386168085529252808320805460ff19166001179055519092339290917f1c3ac05008a204aef806fb7b0a907c496ed107cd989825beb9df5f8094c2eabd9190a45050565b6001600160e01b0319166000908152602081815260408083206001845290915290205460ff1690565b60006020828403121562000180578081fd5b81516001600160a01b038116811462000197578182fd5b9392505050565b6020808252600b908201526a30b1b61d10333937bd32b760a91b604082015260600190565b6020808252600f908201526e61636c3a2062616420667265657a6560881b604082015260600190565b610ffc80620001fc6000396000f3fe60806040526004361061009a5760003560e01c80635c3e97601161006957806396fc8abd1161004e57806396fc8abd146101ce578063a157a10d146101ee578063bdf9a7261461020e576100e2565b80635c3e97601461017f5780637e8c7f08146101ac576100e2565b806301ffc9a7146100e75780631c47671b1461011d578063495a98251461013f578063588497341461015f576100e2565b366100e257336001600160a01b03167f6c703791f399558807424f489ccd811c72b4ff0b74af547264fad7c646776df0346040516100d89190610f21565b60405180910390a2005b600080fd5b3480156100f357600080fd5b50610107610102366004610c67565b61022e565b6040516101149190610e25565b60405180910390f35b34801561012957600080fd5b5061013d610138366004610b8b565b610272565b005b34801561014b57600080fd5b5061010761015a366004610c67565b6103be565b34801561016b57600080fd5b5061013d61017a366004610c8a565b6103e7565b34801561018b57600080fd5b5061019f61019a366004610a59565b61047c565b6040516101149190610d5d565b3480156101b857600080fd5b506101c16106b3565b6040516101149190610e30565b3480156101da57600080fd5b506101076101e9366004610c8a565b6106be565b3480156101fa57600080fd5b5061013d610209366004610c8a565b6106db565b34801561021a57600080fd5b5061013d610229366004610c67565b610770565b60006001600160e01b031982167f5c3e976000000000000000000000000000000000000000000000000000000000148061026c575061026c82610808565b92915050565b3360009081527f8dafb0716dbdc5222f4b82fa3495e71054f736c761c542cfff5cf37ceef75d46602052604090205463161b7d8160e21b9060ff16806102e157506001600160e01b031981166000908152602081815260408083206001600160a01b03845290915290205460ff165b6103065760405162461bcd60e51b81526004016102fd90610e7c565b60405180910390fd5b60005b82518110156103b95761031a6109f9565b83828151811061032657fe5b602002602001015190506000600281111561033d57fe5b8151600281111561034a57fe5b1415610367576103628160200151826040015161083a565b6103b0565b60018151600281111561037657fe5b141561038e57610362816020015182604001516108f0565b60028151600281111561039d57fe5b14156103b0576103b08160200151610979565b50600101610309565b505050565b6001600160e01b0319166000908152602081815260408083206001845290915290205460ff1690565b3360009081527f8dafb0716dbdc5222f4b82fa3495e71054f736c761c542cfff5cf37ceef75d46602052604090205463161b7d8160e21b9060ff168061045657506001600160e01b031981166000908152602081815260408083206001600160a01b03845290915290205460ff165b6104725760405162461bcd60e51b81526004016102fd90610e7c565b6103b983836108f0565b3360009081527f7b98092935fae603ce262effb602034522041de02b6c825126b8cca4fe67e98f60205260409020546060907f5c3e9760000000000000000000000000000000000000000000000000000000009060ff168061050757506001600160e01b031981166000908152602081815260408083206001600160a01b03845290915290205460ff165b6105235760405162461bcd60e51b81526004016102fd90610e7c565b6060835167ffffffffffffffff8111801561053d57600080fd5b5060405190808252806020026020018201604052801561057157816020015b606081526020019060019003908161055c5790505b50905060005b8451811015610668576000606086838151811061059057fe5b6020026020010151600001516001600160a01b03168784815181106105b157fe5b6020026020010151602001518885815181106105c957fe5b6020026020010151604001516040516105e29190610d41565b60006040518083038185875af1925050503d806000811461061f576040519150601f19603f3d011682016040523d82523d6000602084013e610624565b606091505b5091509150816106465760405162461bcd60e51b81526004016102fd90610e45565b8084848151811061065357fe5b60209081029190910101525050600101610577565b50336001600160a01b03167f853c59370d112fba38e26ede245c0d137fd5ff8360c69699264edc28d87233ea85836040516106a4929190610d70565b60405180910390a29392505050565b63161b7d8160e21b81565b600060208181529281526040808220909352908152205460ff1681565b3360009081527f8dafb0716dbdc5222f4b82fa3495e71054f736c761c542cfff5cf37ceef75d46602052604090205463161b7d8160e21b9060ff168061074a57506001600160e01b031981166000908152602081815260408083206001600160a01b03845290915290205460ff165b6107665760405162461bcd60e51b81526004016102fd90610e7c565b6103b9838361083a565b3360009081527f8dafb0716dbdc5222f4b82fa3495e71054f736c761c542cfff5cf37ceef75d46602052604090205463161b7d8160e21b9060ff16806107df57506001600160e01b031981166000908152602081815260408083206001600160a01b03845290915290205460ff165b6107fb5760405162461bcd60e51b81526004016102fd90610e7c565b61080482610979565b5050565b6001600160e01b031981167f01ffc9a70000000000000000000000000000000000000000000000000000000014919050565b610843826103be565b156108605760405162461bcd60e51b81526004016102fd90610eb3565b6001600160a01b0381166001141561088a5760405162461bcd60e51b81526004016102fd90610eea565b6001600160e01b031982166000818152602081815260408083206001600160a01b0386168085529252808320805460ff19166001179055519092339290917f1c3ac05008a204aef806fb7b0a907c496ed107cd989825beb9df5f8094c2eabd9190a45050565b6108f9826103be565b156109165760405162461bcd60e51b81526004016102fd90610eb3565b6001600160e01b031982166000818152602081815260408083206001600160a01b0386168085529252808320805460ff19169055519092339290917f682f2c466c1e9f6883eb72cbced01373e1cb18b05ae5c8bc04dc73d73e29f8cd9190a45050565b610982816103be565b1561099f5760405162461bcd60e51b81526004016102fd90610eb3565b6001600160e01b0319811660008181526020818152604080832060018085529252808320805460ff1916909217909155513392917f049c6b8b07a879425742523fa80f8ffb25e39ad518c93a5896a0df19518397e591a350565b6040805160608101909152806000815260006020820181905260409091015290565b80356001600160a01b038116811461026c57600080fd5b80356001600160e01b03198116811461026c57600080fd5b80356003811061026c57600080fd5b60006020808385031215610a6b578182fd5b823567ffffffffffffffff80821115610a82578384fd5b81850186601f820112610a93578485fd5b80359250610aa8610aa384610f51565b610f2a565b83815284810190828601875b86811015610b7c5781358501601f19606081838f03011215610ad4578a8bfd5b610ade6060610f2a565b610aea8e8c8501610a1b565b815260408301358b820152606083013589811115610b06578c8dfd5b8084018f603f820112610b17578d8efd5b8c81013594508a851115610b29578d8efd5b610b398d85601f88011601610f2a565b91508482528f6040868301011115610b4f578d8efd5b84604082018e840137509283018b018c905260408101929092525084529287019290870190600101610ab4565b50909998505050505050505050565b60006020808385031215610b9d578182fd5b823567ffffffffffffffff811115610bb3578283fd5b80840185601f820112610bc4578384fd5b80359150610bd4610aa383610f51565b828152838101908285016060808602850187018a1015610bf2578788fd5b8794505b85851015610c595780828b031215610c0c578788fd5b610c1581610f2a565b610c1f8b84610a4a565b8152610c2d8b898501610a32565b888201526040610c3f8c828601610a1b565b908201528452600194909401939286019290810190610bf6565b509098975050505050505050565b600060208284031215610c78578081fd5b8135610c8381610fad565b9392505050565b60008060408385031215610c9c578081fd5b8235610ca781610fad565b9150610cb68460208501610a1b565b90509250929050565b60008282518085526020808601955080818302840101818601855b84811015610d0857601f19868403018952610cf6838351610d15565b98840198925090830190600101610cda565b5090979650505050505050565b60008151808452610d2d816020860160208601610f7d565b601f01601f19169290920160200192915050565b60008251610d53818460208701610f7d565b9190910192915050565b600060208252610c836020830184610cbf565b604080825283518282018190526000919060609081850190602080820287018401818a01875b84811015610e04577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08a84030186528151610dd18151610f71565b8452848101518585015288810151888a860152610df089860182610d15565b978601979450505090830190600101610d96565b505087810382890152610e17818a610cbf565b9a9950505050505050505050565b901515815260200190565b6001600160e01b031991909116815260200190565b6020808252600c908201527f6561676c65743a2063616c6c0000000000000000000000000000000000000000604082015260600190565b60208082526009908201527f61636c3a20617574680000000000000000000000000000000000000000000000604082015260600190565b6020808252600b908201527f61636c3a2066726f7a656e000000000000000000000000000000000000000000604082015260600190565b6020808252600f908201527f61636c3a2062616420667265657a650000000000000000000000000000000000604082015260600190565b90815260200190565b60405181810167ffffffffffffffff81118282101715610f4957600080fd5b604052919050565b600067ffffffffffffffff821115610f67578081fd5b5060209081020190565b6001600160a01b031690565b60005b83811015610f98578181015183820152602001610f80565b83811115610fa7576000848401525b50505050565b6001600160e01b031981168114610fc357600080fd5b5056fea26469706673582212207bdb761efe9e5bd9ce23fabb4538ce82d5f49d766398df8315e5742da482a28c64736f6c63430006080033a264697066735822122087773f6d66854e77dc3b5a2a3f521901216b970229df45e4522f506b910526b864736f6c63430006080033",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1C8D CODESIZE SUB DUP1 PUSH2 0x1C8D DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x63 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP4 SWAP1 SWAP3 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0xB4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x75 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH2 0x80 DUP2 PUSH2 0x9C JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0x91 DUP2 PUSH2 0x9C JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1BCA DUP1 PUSH2 0xC3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4295F16C EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x6CA4110E EQ PUSH2 0x70 JUMPI DUP1 PUSH4 0x7B103999 EQ PUSH2 0x85 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0x70A JUMP JUMPDEST PUSH2 0x8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x67 SWAP3 SWAP2 SWAP1 PUSH2 0x91F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x78 PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x67 SWAP2 SWAP1 PUSH2 0x90B JUMP JUMPDEST PUSH2 0x78 PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x98 PUSH2 0x60E JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x625 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP3 DUP5 ADD DUP6 SWAP1 MSTORE PUSH1 0x60 DUP4 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP4 ADD DUP3 SWAP1 MSTORE DUP4 MLOAD SWAP1 DUP2 ADD DUP5 MSTORE DUP2 DUP2 MSTORE PUSH1 0xA0 DUP4 ADD MSTORE SLOAD SWAP2 MLOAD PUSH32 0x328867CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x328867CE SWAP1 PUSH2 0x123 SWAP1 ADDRESS SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x7CD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x151 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x6E3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH1 0x40 MLOAD PUSH2 0x184 SWAP1 PUSH2 0x66D JUMP JUMPDEST PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x90B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x1AA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH32 0x76D6497400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP2 SWAP6 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x76D64974 SWAP1 PUSH2 0x1FB SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x939 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x229 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x6 DUP1 DUP3 MSTORE PUSH1 0xE0 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP4 POP SWAP2 POP DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x24E PUSH2 0x67A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x246 JUMPI SWAP1 POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP2 MSTORE SWAP1 SWAP2 POP DUP1 PUSH1 0x0 DUP2 MSTORE PUSH32 0x25DDCBE000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE DUP2 MLOAD DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x2B5 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP2 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH32 0xECB6CBA600000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE DUP2 MLOAD DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x313 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP2 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH32 0x5DECC19000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE DUP2 MLOAD DUP3 SWAP1 PUSH1 0x2 SWAP1 DUP2 LT PUSH2 0x371 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP2 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH32 0xAA455D9F00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE DUP2 MLOAD DUP3 SWAP1 PUSH1 0x3 SWAP1 DUP2 LT PUSH2 0x3D1 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP2 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7E8C7F08 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x428 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x43C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x460 SWAP2 SWAP1 PUSH2 0x69C JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND DUP2 MSTORE ADDRESS PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE DUP2 MLOAD DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP2 LT PUSH2 0x49A JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP2 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7E8C7F08 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x505 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x529 SWAP2 SWAP1 PUSH2 0x69C JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE DUP2 MLOAD DUP3 SWAP1 PUSH1 0x5 SWAP1 DUP2 LT PUSH2 0x564 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x40 MLOAD PUSH32 0x1C47671B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x1C47671B SWAP1 PUSH2 0x5B4 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x895 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5E2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x63F PUSH2 0x60E JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x64C PUSH2 0x60E JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x659 PUSH2 0x60E JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x11F8 DUP1 PUSH2 0x99D DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP2 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6AD JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x6DC JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6F4 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6DC JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x71C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x733 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP6 ADD DUP7 PUSH1 0x1F DUP3 ADD SLT PUSH2 0x744 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP3 POP DUP2 DUP4 GT ISZERO PUSH2 0x754 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP5 DUP4 ADD ADD GT ISZERO PUSH2 0x765 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH1 0x20 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x7B1 JUMPI INVALID JUMPDEST SWAP1 MSTORE JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 SWAP1 DUP2 ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND DUP4 MSTORE PUSH1 0x20 PUSH1 0x40 DUP2 DUP6 ADD MSTORE DUP5 MLOAD PUSH1 0x40 DUP6 ADD MSTORE DUP1 DUP6 ADD MLOAD PUSH2 0x7FC PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x7B5 JUMP JUMPDEST POP PUSH1 0x40 DUP6 ADD MLOAD PUSH2 0x80F PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0x7B5 JUMP JUMPDEST POP PUSH1 0x60 DUP6 ADD MLOAD PUSH2 0x822 PUSH1 0xE0 DUP7 ADD DUP3 PUSH2 0x7B5 JUMP JUMPDEST POP PUSH1 0x80 DUP6 ADD MLOAD PUSH2 0x120 DUP4 DUP3 AND DUP2 DUP8 ADD MSTORE PUSH1 0xA0 DUP8 ADD MLOAD SWAP4 POP DUP1 PUSH2 0x140 DUP8 ADD MSTORE POP POP DUP2 MLOAD DUP1 PUSH2 0x160 DUP7 ADD MSTORE DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x86A JUMPI DUP4 DUP2 ADD DUP4 ADD MLOAD DUP7 DUP3 ADD PUSH2 0x180 ADD MSTORE DUP3 ADD PUSH2 0x84D JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x87C JUMPI DUP5 PUSH2 0x180 DUP4 DUP9 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP4 SWAP1 SWAP4 ADD PUSH2 0x180 ADD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8FF JUMPI DUP4 MLOAD PUSH2 0x8C6 DUP5 DUP3 MLOAD PUSH2 0x7A7 JUMP JUMPDEST DUP6 DUP2 ADD MLOAD PUSH2 0x8D6 DUP8 DUP7 ADD DUP3 PUSH2 0x781 JUMP JUMPDEST POP PUSH1 0x40 DUP1 DUP3 ADD MLOAD PUSH2 0x8E9 DUP3 DUP8 ADD DUP3 PUSH2 0x774 JUMP JUMPDEST POP POP POP SWAP3 DUP5 ADD SWAP3 PUSH1 0x60 SWAP3 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x8B1 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND DUP4 MSTORE DUP1 DUP7 AND PUSH1 0x20 DUP5 ADD MSTORE POP PUSH1 0x80 PUSH1 0x40 DUP4 ADD MSTORE DUP3 PUSH1 0x80 DUP4 ADD MSTORE DUP3 DUP5 PUSH1 0xA0 DUP5 ADD CALLDATACOPY DUP1 PUSH1 0xA0 DUP5 DUP5 ADD ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP5 ADD AND PUSH1 0xA0 DUP4 DUP3 DUP6 ADD SUB ADD PUSH1 0x60 DUP5 ADD MSTORE DUP2 PUSH1 0xA0 DUP3 DUP6 ADD ADD MSTORE PUSH1 0xC0 DUP2 DUP5 ADD ADD SWAP2 POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x11F8 CODESIZE SUB DUP1 PUSH3 0x11F8 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x16E JUMP JUMPDEST ADDRESS PUSH3 0x51 PUSH4 0x161B7D81 PUSH1 0xE2 SHL DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH3 0x75 AND JUMP JUMPDEST POP PUSH3 0x6E PUSH4 0x2E1F4BB PUSH1 0xE5 SHL DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH3 0x75 AND JUMP JUMPDEST POP PUSH3 0x1EC JUMP JUMPDEST PUSH3 0x89 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH3 0x145 AND JUMP JUMPDEST ISZERO PUSH3 0xB2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA9 SWAP1 PUSH3 0x19E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 EQ ISZERO PUSH3 0xDF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA9 SWAP1 PUSH3 0x1C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD SWAP1 SWAP3 CALLER SWAP3 SWAP1 SWAP2 PUSH32 0x1C3AC05008A204AEF806FB7B0A907C496ED107CD989825BEB9DF5F8094C2EABD SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x180 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x197 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x30B1B61D10333937BD32B7 PUSH1 0xA9 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x61636C3A2062616420667265657A65 PUSH1 0x88 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH2 0xFFC DUP1 PUSH3 0x1FC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C3E9760 GT PUSH2 0x69 JUMPI DUP1 PUSH4 0x96FC8ABD GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x96FC8ABD EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0xA157A10D EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0xBDF9A726 EQ PUSH2 0x20E JUMPI PUSH2 0xE2 JUMP JUMPDEST DUP1 PUSH4 0x5C3E9760 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x7E8C7F08 EQ PUSH2 0x1AC JUMPI PUSH2 0xE2 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0x1C47671B EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0x495A9825 EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0x58849734 EQ PUSH2 0x15F JUMPI PUSH2 0xE2 JUMP JUMPDEST CALLDATASIZE PUSH2 0xE2 JUMPI CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x6C703791F399558807424F489CCD811C72B4FF0B74AF547264FAD7C646776DF0 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0xF21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x107 PUSH2 0x102 CALLDATASIZE PUSH1 0x4 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x22E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114 SWAP2 SWAP1 PUSH2 0xE25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13D PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xB8B JUMP JUMPDEST PUSH2 0x272 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x107 PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x3BE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13D PUSH2 0x17A CALLDATASIZE PUSH1 0x4 PUSH2 0xC8A JUMP JUMPDEST PUSH2 0x3E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19F PUSH2 0x19A CALLDATASIZE PUSH1 0x4 PUSH2 0xA59 JUMP JUMPDEST PUSH2 0x47C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114 SWAP2 SWAP1 PUSH2 0xD5D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x6B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114 SWAP2 SWAP1 PUSH2 0xE30 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x107 PUSH2 0x1E9 CALLDATASIZE PUSH1 0x4 PUSH2 0xC8A JUMP JUMPDEST PUSH2 0x6BE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13D PUSH2 0x209 CALLDATASIZE PUSH1 0x4 PUSH2 0xC8A JUMP JUMPDEST PUSH2 0x6DB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13D PUSH2 0x229 CALLDATASIZE PUSH1 0x4 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x770 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0x5C3E976000000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x26C JUMPI POP PUSH2 0x26C DUP3 PUSH2 0x808 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x8DAFB0716DBDC5222F4B82FA3495E71054F736C761C542CFFF5CF37CEEF75D46 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0x161B7D81 PUSH1 0xE2 SHL SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x2E1 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x306 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FD SWAP1 PUSH2 0xE7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x3B9 JUMPI PUSH2 0x31A PUSH2 0x9F9 JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x326 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x33D JUMPI INVALID JUMPDEST DUP2 MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x34A JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x367 JUMPI PUSH2 0x362 DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0x83A JUMP JUMPDEST PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x1 DUP2 MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x376 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x38E JUMPI PUSH2 0x362 DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0x8F0 JUMP JUMPDEST PUSH1 0x2 DUP2 MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x39D JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x3B0 JUMPI PUSH2 0x3B0 DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0x979 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x309 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x8DAFB0716DBDC5222F4B82FA3495E71054F736C761C542CFFF5CF37CEEF75D46 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0x161B7D81 PUSH1 0xE2 SHL SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x456 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x472 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FD SWAP1 PUSH2 0xE7C JUMP JUMPDEST PUSH2 0x3B9 DUP4 DUP4 PUSH2 0x8F0 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x7B98092935FAE603CE262EFFB602034522041DE02B6C825126B8CCA4FE67E98F PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH32 0x5C3E976000000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x507 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x523 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FD SWAP1 PUSH2 0xE7C JUMP JUMPDEST PUSH1 0x60 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x53D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x571 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x55C JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x668 JUMPI PUSH1 0x0 PUSH1 0x60 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x590 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x5B1 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP9 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x5C9 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x5E2 SWAP2 SWAP1 PUSH2 0xD41 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x61F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x624 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x646 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FD SWAP1 PUSH2 0xE45 JUMP JUMPDEST DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x653 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP POP PUSH1 0x1 ADD PUSH2 0x577 JUMP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x853C59370D112FBA38E26EDE245C0D137FD5FF8360C69699264EDC28D87233EA DUP6 DUP4 PUSH1 0x40 MLOAD PUSH2 0x6A4 SWAP3 SWAP2 SWAP1 PUSH2 0xD70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x161B7D81 PUSH1 0xE2 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 DUP2 MSTORE SWAP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 MSTORE SWAP1 DUP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x8DAFB0716DBDC5222F4B82FA3495E71054F736C761C542CFFF5CF37CEEF75D46 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0x161B7D81 PUSH1 0xE2 SHL SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x74A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x766 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FD SWAP1 PUSH2 0xE7C JUMP JUMPDEST PUSH2 0x3B9 DUP4 DUP4 PUSH2 0x83A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x8DAFB0716DBDC5222F4B82FA3495E71054F736C761C542CFFF5CF37CEEF75D46 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0x161B7D81 PUSH1 0xE2 SHL SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x7DF JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x7FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FD SWAP1 PUSH2 0xE7C JUMP JUMPDEST PUSH2 0x804 DUP3 PUSH2 0x979 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x843 DUP3 PUSH2 0x3BE JUMP JUMPDEST ISZERO PUSH2 0x860 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FD SWAP1 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 EQ ISZERO PUSH2 0x88A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FD SWAP1 PUSH2 0xEEA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD SWAP1 SWAP3 CALLER SWAP3 SWAP1 SWAP2 PUSH32 0x1C3AC05008A204AEF806FB7B0A907C496ED107CD989825BEB9DF5F8094C2EABD SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x8F9 DUP3 PUSH2 0x3BE JUMP JUMPDEST ISZERO PUSH2 0x916 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FD SWAP1 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD SWAP1 SWAP3 CALLER SWAP3 SWAP1 SWAP2 PUSH32 0x682F2C466C1E9F6883EB72CBCED01373E1CB18B05AE5C8BC04DC73D73E29F8CD SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x982 DUP2 PUSH2 0x3BE JUMP JUMPDEST ISZERO PUSH2 0x99F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FD SWAP1 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE MLOAD CALLER SWAP3 SWAP2 PUSH32 0x49C6B8B07A879425742523FA80F8FFB25E39AD518C93A5896A0DF19518397E5 SWAP2 LOG3 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP2 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA6B JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xA82 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD DUP7 PUSH1 0x1F DUP3 ADD SLT PUSH2 0xA93 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP3 POP PUSH2 0xAA8 PUSH2 0xAA3 DUP5 PUSH2 0xF51 JUMP JUMPDEST PUSH2 0xF2A JUMP JUMPDEST DUP4 DUP2 MSTORE DUP5 DUP2 ADD SWAP1 DUP3 DUP7 ADD DUP8 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0xB7C JUMPI DUP2 CALLDATALOAD DUP6 ADD PUSH1 0x1F NOT PUSH1 0x60 DUP2 DUP4 DUP16 SUB ADD SLT ISZERO PUSH2 0xAD4 JUMPI DUP11 DUP12 REVERT JUMPDEST PUSH2 0xADE PUSH1 0x60 PUSH2 0xF2A JUMP JUMPDEST PUSH2 0xAEA DUP15 DUP13 DUP6 ADD PUSH2 0xA1B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x40 DUP4 ADD CALLDATALOAD DUP12 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD CALLDATALOAD DUP10 DUP2 GT ISZERO PUSH2 0xB06 JUMPI DUP13 DUP14 REVERT JUMPDEST DUP1 DUP5 ADD DUP16 PUSH1 0x3F DUP3 ADD SLT PUSH2 0xB17 JUMPI DUP14 DUP15 REVERT JUMPDEST DUP13 DUP2 ADD CALLDATALOAD SWAP5 POP DUP11 DUP6 GT ISZERO PUSH2 0xB29 JUMPI DUP14 DUP15 REVERT JUMPDEST PUSH2 0xB39 DUP14 DUP6 PUSH1 0x1F DUP9 ADD AND ADD PUSH2 0xF2A JUMP JUMPDEST SWAP2 POP DUP5 DUP3 MSTORE DUP16 PUSH1 0x40 DUP7 DUP4 ADD ADD GT ISZERO PUSH2 0xB4F JUMPI DUP14 DUP15 REVERT JUMPDEST DUP5 PUSH1 0x40 DUP3 ADD DUP15 DUP5 ADD CALLDATACOPY POP SWAP3 DUP4 ADD DUP12 ADD DUP13 SWAP1 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP DUP5 MSTORE SWAP3 DUP8 ADD SWAP3 SWAP1 DUP8 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xAB4 JUMP JUMPDEST POP SWAP1 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB9D JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBB3 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP1 DUP5 ADD DUP6 PUSH1 0x1F DUP3 ADD SLT PUSH2 0xBC4 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP2 POP PUSH2 0xBD4 PUSH2 0xAA3 DUP4 PUSH2 0xF51 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP4 DUP2 ADD SWAP1 DUP3 DUP6 ADD PUSH1 0x60 DUP1 DUP7 MUL DUP6 ADD DUP8 ADD DUP11 LT ISZERO PUSH2 0xBF2 JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP5 POP JUMPDEST DUP6 DUP6 LT ISZERO PUSH2 0xC59 JUMPI DUP1 DUP3 DUP12 SUB SLT ISZERO PUSH2 0xC0C JUMPI DUP8 DUP9 REVERT JUMPDEST PUSH2 0xC15 DUP2 PUSH2 0xF2A JUMP JUMPDEST PUSH2 0xC1F DUP12 DUP5 PUSH2 0xA4A JUMP JUMPDEST DUP2 MSTORE PUSH2 0xC2D DUP12 DUP10 DUP6 ADD PUSH2 0xA32 JUMP JUMPDEST DUP9 DUP3 ADD MSTORE PUSH1 0x40 PUSH2 0xC3F DUP13 DUP3 DUP7 ADD PUSH2 0xA1B JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE DUP5 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP3 DUP7 ADD SWAP3 SWAP1 DUP2 ADD SWAP1 PUSH2 0xBF6 JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC78 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC83 DUP2 PUSH2 0xFAD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC9C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xCA7 DUP2 PUSH2 0xFAD JUMP JUMPDEST SWAP2 POP PUSH2 0xCB6 DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0xA1B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MLOAD DUP1 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP6 POP DUP1 DUP2 DUP4 MUL DUP5 ADD ADD DUP2 DUP7 ADD DUP6 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xD08 JUMPI PUSH1 0x1F NOT DUP7 DUP5 SUB ADD DUP10 MSTORE PUSH2 0xCF6 DUP4 DUP4 MLOAD PUSH2 0xD15 JUMP JUMPDEST SWAP9 DUP5 ADD SWAP9 SWAP3 POP SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xCDA JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xD2D DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xF7D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0xD53 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0xF7D JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0xC83 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCBF JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP4 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x60 SWAP1 DUP2 DUP6 ADD SWAP1 PUSH1 0x20 DUP1 DUP3 MUL DUP8 ADD DUP5 ADD DUP2 DUP11 ADD DUP8 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xE04 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA0 DUP11 DUP5 SUB ADD DUP7 MSTORE DUP2 MLOAD PUSH2 0xDD1 DUP2 MLOAD PUSH2 0xF71 JUMP JUMPDEST DUP5 MSTORE DUP5 DUP2 ADD MLOAD DUP6 DUP6 ADD MSTORE DUP9 DUP2 ADD MLOAD DUP9 DUP11 DUP7 ADD MSTORE PUSH2 0xDF0 DUP10 DUP7 ADD DUP3 PUSH2 0xD15 JUMP JUMPDEST SWAP8 DUP7 ADD SWAP8 SWAP5 POP POP POP SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xD96 JUMP JUMPDEST POP POP DUP8 DUP2 SUB DUP3 DUP10 ADD MSTORE PUSH2 0xE17 DUP2 DUP11 PUSH2 0xCBF JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xC SWAP1 DUP3 ADD MSTORE PUSH32 0x6561676C65743A2063616C6C0000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x9 SWAP1 DUP3 ADD MSTORE PUSH32 0x61636C3A20617574680000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH32 0x61636C3A2066726F7A656E000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH32 0x61636C3A2062616420667265657A650000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xF49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xF67 JUMPI DUP1 DUP2 REVERT JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF98 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xF80 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xFA7 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xFC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0xDB761EFE9E5BD9CE23FABB4538CE82D5F49D766398DF8315E5742DA4 DUP3 LOG2 DUP13 PUSH5 0x736F6C6343 STOP MOD ADDMOD STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 PUSH24 0x3F6D66854E77DC3B5A2A3F521901216B970229DF45E4522F POP PUSH12 0x910526B864736F6C63430006 ADDMOD STOP CALLER ",
            "sourceMap": "427:1581:2:-:0;;;597:159;5:9:-1;2:2;;;27:1;24;17:12;2:2;597:159:2;;;;;;;;;;;;;;;;;;;;;691:12;:28;;-1:-1:-1;;;;;691:28:2;;;-1:-1:-1;;;;;;691:28:2;;;;;;;;729:20;;;;;;;;;;;;;;427:1581;;393:505:-1;;;578:2;566:9;557:7;553:23;549:32;546:2;;;-1:-1;;584:12;546:2;112:6;106:13;124:56;174:5;124:56;;;770:2;850:22;;300:13;636:97;;-1:-1;318:63;300:13;318:63;;;778:104;;;;540:358;;;;;;1380:163;-1:-1;;;;;1314:54;;1462:58;;1452:2;;1534:1;;1524:12;1452:2;1446:97;;;427:1581:2;;;;;;"
          },
          "deployedBytecode": {
            "immutableReferences": {},
            "linkReferences": {},
            "object": "608060405234801561001057600080fd5b50600436106100415760003560e01c80634295f16c146100465780636ca4110e146100705780637b10399914610085575b600080fd5b61005961005436600461070a565b61008d565b60405161006792919061091f565b60405180910390f35b6100786105f0565b604051610067919061090b565b6100786105ff565b60008061009861060e565b6100a0610625565b506040805160c0810182526000808252602080830185905282840185905260608301859052608083018290528351908101845281815260a08301525491517f328867ce00000000000000000000000000000000000000000000000000000000815290916001600160a01b03169063328867ce9061012390309085906004016107cd565b602060405180830381600087803b15801561013d57600080fd5b505af1158015610151573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061017591906106e3565b9250826040516101849061066d565b61018e919061090b565b604051809103906000f0801580156101aa573d6000803e3d6000fd5b506001546040517f76d649740000000000000000000000000000000000000000000000000000000081529195506001600160a01b0316906376d64974906101fb90879087908b908b90600401610939565b600060405180830381600087803b15801561021557600080fd5b505af1158015610229573d6000803e3d6000fd5b505060408051600680825260e08201909252606093509150816020015b61024e61067a565b81526020019060019003908161024657905050604080516060810190915290915080600081527f25ddcbe00000000000000000000000000000000000000000000000000000000060208201526001600160a01b03604090910152815182906000906102b557fe5b6020908102919091010152604080516060810190915280600081527fecb6cba60000000000000000000000000000000000000000000000000000000060208201526001600160a01b0360409091015281518290600190811061031357fe5b6020908102919091010152604080516060810190915280600081527f5decc1900000000000000000000000000000000000000000000000000000000060208201526001600160a01b0360409091015281518290600290811061037157fe5b6020908102919091010152604080516060810190915280600081527faa455d9f0000000000000000000000000000000000000000000000000000000060208201526001600160a01b0387166040909101528151829060039081106103d157fe5b602090810291909101015260408051606081019091528060018152602001856001600160a01b0316637e8c7f086040518163ffffffff1660e01b815260040160206040518083038186803b15801561042857600080fd5b505afa15801561043c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610460919061069c565b7fffffffff000000000000000000000000000000000000000000000000000000001681523060209091015281518290600490811061049a57fe5b602090810291909101015260408051606081019091528060028152602001856001600160a01b0316637e8c7f086040518163ffffffff1660e01b815260040160206040518083038186803b1580156104f157600080fd5b505afa158015610505573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610529919061069c565b7fffffffff00000000000000000000000000000000000000000000000000000000168152600060209091015281518290600590811061056457fe5b60209081029190910101526040517f1c47671b0000000000000000000000000000000000000000000000000000000081526001600160a01b03851690631c47671b906105b4908490600401610895565b600060405180830381600087803b1580156105ce57600080fd5b505af11580156105e2573d6000803e3d6000fd5b505050505050509250929050565b6000546001600160a01b031681565b6001546001600160a01b031681565b604080518082019091526000808252602082015290565b6040518060c001604052806000815260200161063f61060e565b815260200161064c61060e565b815260200161065961060e565b815260006020820152606060409091015290565b6111f88061099d83390190565b6040805160608101909152806000815260006020820181905260409091015290565b6000602082840312156106ad578081fd5b81517fffffffff00000000000000000000000000000000000000000000000000000000811681146106dc578182fd5b9392505050565b6000602082840312156106f4578081fd5b81516001600160a01b03811681146106dc578182fd5b6000806020838503121561071c578081fd5b823567ffffffffffffffff80821115610733578283fd5b81850186601f820112610744578384fd5b8035925081831115610754578384fd5b866020848301011115610765578384fd5b60200196919550909350505050565b6001600160a01b03169052565b7fffffffff00000000000000000000000000000000000000000000000000000000169052565b600381106107b157fe5b9052565b80516001600160a01b03168252602090810151910152565b60006001600160a01b038085168352602060408185015284516040850152808501516107fc60608601826107b5565b50604085015161080f60a08601826107b5565b50606085015161082260e08601826107b5565b5060808501516101208382168187015260a08701519350806101408701525050815180610160860152835b8181101561086a578381018301518682016101800152820161084d565b8181111561087c578461018083880101525b50601f01601f1916939093016101800195945050505050565b6020808252825182820181905260009190848201906040850190845b818110156108ff5783516108c68482516107a7565b858101516108d687860182610781565b506040808201516108e982870182610774565b50505092840192606092909201916001016108b1565b50909695505050505050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b60006001600160a01b03808716835280861660208401525060806040830152826080830152828460a08401378060a08484010152601f19601f84011660a083828501030160608401528160a0828501015260c0818401019150509594505050505056fe60806040523480156200001157600080fd5b50604051620011f8380380620011f883398101604081905262000034916200016e565b306200005163161b7d8160e21b826001600160e01b036200007516565b506200006e6302e1f4bb60e51b826001600160e01b036200007516565b50620001ec565b62000089826001600160e01b036200014516565b15620000b25760405162461bcd60e51b8152600401620000a9906200019e565b60405180910390fd5b6001600160a01b03811660011415620000df5760405162461bcd60e51b8152600401620000a990620001c3565b6001600160e01b031982166000818152602081815260408083206001600160a01b0386168085529252808320805460ff19166001179055519092339290917f1c3ac05008a204aef806fb7b0a907c496ed107cd989825beb9df5f8094c2eabd9190a45050565b6001600160e01b0319166000908152602081815260408083206001845290915290205460ff1690565b60006020828403121562000180578081fd5b81516001600160a01b038116811462000197578182fd5b9392505050565b6020808252600b908201526a30b1b61d10333937bd32b760a91b604082015260600190565b6020808252600f908201526e61636c3a2062616420667265657a6560881b604082015260600190565b610ffc80620001fc6000396000f3fe60806040526004361061009a5760003560e01c80635c3e97601161006957806396fc8abd1161004e57806396fc8abd146101ce578063a157a10d146101ee578063bdf9a7261461020e576100e2565b80635c3e97601461017f5780637e8c7f08146101ac576100e2565b806301ffc9a7146100e75780631c47671b1461011d578063495a98251461013f578063588497341461015f576100e2565b366100e257336001600160a01b03167f6c703791f399558807424f489ccd811c72b4ff0b74af547264fad7c646776df0346040516100d89190610f21565b60405180910390a2005b600080fd5b3480156100f357600080fd5b50610107610102366004610c67565b61022e565b6040516101149190610e25565b60405180910390f35b34801561012957600080fd5b5061013d610138366004610b8b565b610272565b005b34801561014b57600080fd5b5061010761015a366004610c67565b6103be565b34801561016b57600080fd5b5061013d61017a366004610c8a565b6103e7565b34801561018b57600080fd5b5061019f61019a366004610a59565b61047c565b6040516101149190610d5d565b3480156101b857600080fd5b506101c16106b3565b6040516101149190610e30565b3480156101da57600080fd5b506101076101e9366004610c8a565b6106be565b3480156101fa57600080fd5b5061013d610209366004610c8a565b6106db565b34801561021a57600080fd5b5061013d610229366004610c67565b610770565b60006001600160e01b031982167f5c3e976000000000000000000000000000000000000000000000000000000000148061026c575061026c82610808565b92915050565b3360009081527f8dafb0716dbdc5222f4b82fa3495e71054f736c761c542cfff5cf37ceef75d46602052604090205463161b7d8160e21b9060ff16806102e157506001600160e01b031981166000908152602081815260408083206001600160a01b03845290915290205460ff165b6103065760405162461bcd60e51b81526004016102fd90610e7c565b60405180910390fd5b60005b82518110156103b95761031a6109f9565b83828151811061032657fe5b602002602001015190506000600281111561033d57fe5b8151600281111561034a57fe5b1415610367576103628160200151826040015161083a565b6103b0565b60018151600281111561037657fe5b141561038e57610362816020015182604001516108f0565b60028151600281111561039d57fe5b14156103b0576103b08160200151610979565b50600101610309565b505050565b6001600160e01b0319166000908152602081815260408083206001845290915290205460ff1690565b3360009081527f8dafb0716dbdc5222f4b82fa3495e71054f736c761c542cfff5cf37ceef75d46602052604090205463161b7d8160e21b9060ff168061045657506001600160e01b031981166000908152602081815260408083206001600160a01b03845290915290205460ff165b6104725760405162461bcd60e51b81526004016102fd90610e7c565b6103b983836108f0565b3360009081527f7b98092935fae603ce262effb602034522041de02b6c825126b8cca4fe67e98f60205260409020546060907f5c3e9760000000000000000000000000000000000000000000000000000000009060ff168061050757506001600160e01b031981166000908152602081815260408083206001600160a01b03845290915290205460ff165b6105235760405162461bcd60e51b81526004016102fd90610e7c565b6060835167ffffffffffffffff8111801561053d57600080fd5b5060405190808252806020026020018201604052801561057157816020015b606081526020019060019003908161055c5790505b50905060005b8451811015610668576000606086838151811061059057fe5b6020026020010151600001516001600160a01b03168784815181106105b157fe5b6020026020010151602001518885815181106105c957fe5b6020026020010151604001516040516105e29190610d41565b60006040518083038185875af1925050503d806000811461061f576040519150601f19603f3d011682016040523d82523d6000602084013e610624565b606091505b5091509150816106465760405162461bcd60e51b81526004016102fd90610e45565b8084848151811061065357fe5b60209081029190910101525050600101610577565b50336001600160a01b03167f853c59370d112fba38e26ede245c0d137fd5ff8360c69699264edc28d87233ea85836040516106a4929190610d70565b60405180910390a29392505050565b63161b7d8160e21b81565b600060208181529281526040808220909352908152205460ff1681565b3360009081527f8dafb0716dbdc5222f4b82fa3495e71054f736c761c542cfff5cf37ceef75d46602052604090205463161b7d8160e21b9060ff168061074a57506001600160e01b031981166000908152602081815260408083206001600160a01b03845290915290205460ff165b6107665760405162461bcd60e51b81526004016102fd90610e7c565b6103b9838361083a565b3360009081527f8dafb0716dbdc5222f4b82fa3495e71054f736c761c542cfff5cf37ceef75d46602052604090205463161b7d8160e21b9060ff16806107df57506001600160e01b031981166000908152602081815260408083206001600160a01b03845290915290205460ff165b6107fb5760405162461bcd60e51b81526004016102fd90610e7c565b61080482610979565b5050565b6001600160e01b031981167f01ffc9a70000000000000000000000000000000000000000000000000000000014919050565b610843826103be565b156108605760405162461bcd60e51b81526004016102fd90610eb3565b6001600160a01b0381166001141561088a5760405162461bcd60e51b81526004016102fd90610eea565b6001600160e01b031982166000818152602081815260408083206001600160a01b0386168085529252808320805460ff19166001179055519092339290917f1c3ac05008a204aef806fb7b0a907c496ed107cd989825beb9df5f8094c2eabd9190a45050565b6108f9826103be565b156109165760405162461bcd60e51b81526004016102fd90610eb3565b6001600160e01b031982166000818152602081815260408083206001600160a01b0386168085529252808320805460ff19169055519092339290917f682f2c466c1e9f6883eb72cbced01373e1cb18b05ae5c8bc04dc73d73e29f8cd9190a45050565b610982816103be565b1561099f5760405162461bcd60e51b81526004016102fd90610eb3565b6001600160e01b0319811660008181526020818152604080832060018085529252808320805460ff1916909217909155513392917f049c6b8b07a879425742523fa80f8ffb25e39ad518c93a5896a0df19518397e591a350565b6040805160608101909152806000815260006020820181905260409091015290565b80356001600160a01b038116811461026c57600080fd5b80356001600160e01b03198116811461026c57600080fd5b80356003811061026c57600080fd5b60006020808385031215610a6b578182fd5b823567ffffffffffffffff80821115610a82578384fd5b81850186601f820112610a93578485fd5b80359250610aa8610aa384610f51565b610f2a565b83815284810190828601875b86811015610b7c5781358501601f19606081838f03011215610ad4578a8bfd5b610ade6060610f2a565b610aea8e8c8501610a1b565b815260408301358b820152606083013589811115610b06578c8dfd5b8084018f603f820112610b17578d8efd5b8c81013594508a851115610b29578d8efd5b610b398d85601f88011601610f2a565b91508482528f6040868301011115610b4f578d8efd5b84604082018e840137509283018b018c905260408101929092525084529287019290870190600101610ab4565b50909998505050505050505050565b60006020808385031215610b9d578182fd5b823567ffffffffffffffff811115610bb3578283fd5b80840185601f820112610bc4578384fd5b80359150610bd4610aa383610f51565b828152838101908285016060808602850187018a1015610bf2578788fd5b8794505b85851015610c595780828b031215610c0c578788fd5b610c1581610f2a565b610c1f8b84610a4a565b8152610c2d8b898501610a32565b888201526040610c3f8c828601610a1b565b908201528452600194909401939286019290810190610bf6565b509098975050505050505050565b600060208284031215610c78578081fd5b8135610c8381610fad565b9392505050565b60008060408385031215610c9c578081fd5b8235610ca781610fad565b9150610cb68460208501610a1b565b90509250929050565b60008282518085526020808601955080818302840101818601855b84811015610d0857601f19868403018952610cf6838351610d15565b98840198925090830190600101610cda565b5090979650505050505050565b60008151808452610d2d816020860160208601610f7d565b601f01601f19169290920160200192915050565b60008251610d53818460208701610f7d565b9190910192915050565b600060208252610c836020830184610cbf565b604080825283518282018190526000919060609081850190602080820287018401818a01875b84811015610e04577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08a84030186528151610dd18151610f71565b8452848101518585015288810151888a860152610df089860182610d15565b978601979450505090830190600101610d96565b505087810382890152610e17818a610cbf565b9a9950505050505050505050565b901515815260200190565b6001600160e01b031991909116815260200190565b6020808252600c908201527f6561676c65743a2063616c6c0000000000000000000000000000000000000000604082015260600190565b60208082526009908201527f61636c3a20617574680000000000000000000000000000000000000000000000604082015260600190565b6020808252600b908201527f61636c3a2066726f7a656e000000000000000000000000000000000000000000604082015260600190565b6020808252600f908201527f61636c3a2062616420667265657a650000000000000000000000000000000000604082015260600190565b90815260200190565b60405181810167ffffffffffffffff81118282101715610f4957600080fd5b604052919050565b600067ffffffffffffffff821115610f67578081fd5b5060209081020190565b6001600160a01b031690565b60005b83811015610f98578181015183820152602001610f80565b83811115610fa7576000848401525b50505050565b6001600160e01b031981168114610fc357600080fd5b5056fea26469706673582212207bdb761efe9e5bd9ce23fabb4538ce82d5f49d766398df8315e5742da482a28c64736f6c63430006080033a264697066735822122087773f6d66854e77dc3b5a2a3f521901216b970229df45e4522f506b910526b864736f6c63430006080033",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4295F16C EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x6CA4110E EQ PUSH2 0x70 JUMPI DUP1 PUSH4 0x7B103999 EQ PUSH2 0x85 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0x70A JUMP JUMPDEST PUSH2 0x8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x67 SWAP3 SWAP2 SWAP1 PUSH2 0x91F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x78 PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x67 SWAP2 SWAP1 PUSH2 0x90B JUMP JUMPDEST PUSH2 0x78 PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x98 PUSH2 0x60E JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x625 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP3 DUP5 ADD DUP6 SWAP1 MSTORE PUSH1 0x60 DUP4 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP4 ADD DUP3 SWAP1 MSTORE DUP4 MLOAD SWAP1 DUP2 ADD DUP5 MSTORE DUP2 DUP2 MSTORE PUSH1 0xA0 DUP4 ADD MSTORE SLOAD SWAP2 MLOAD PUSH32 0x328867CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x328867CE SWAP1 PUSH2 0x123 SWAP1 ADDRESS SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x7CD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x151 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x6E3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH1 0x40 MLOAD PUSH2 0x184 SWAP1 PUSH2 0x66D JUMP JUMPDEST PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x90B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x1AA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH32 0x76D6497400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP2 SWAP6 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x76D64974 SWAP1 PUSH2 0x1FB SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x939 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x229 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x6 DUP1 DUP3 MSTORE PUSH1 0xE0 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP4 POP SWAP2 POP DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x24E PUSH2 0x67A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x246 JUMPI SWAP1 POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP2 MSTORE SWAP1 SWAP2 POP DUP1 PUSH1 0x0 DUP2 MSTORE PUSH32 0x25DDCBE000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE DUP2 MLOAD DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x2B5 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP2 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH32 0xECB6CBA600000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE DUP2 MLOAD DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x313 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP2 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH32 0x5DECC19000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE DUP2 MLOAD DUP3 SWAP1 PUSH1 0x2 SWAP1 DUP2 LT PUSH2 0x371 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP2 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH32 0xAA455D9F00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE DUP2 MLOAD DUP3 SWAP1 PUSH1 0x3 SWAP1 DUP2 LT PUSH2 0x3D1 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP2 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7E8C7F08 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x428 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x43C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x460 SWAP2 SWAP1 PUSH2 0x69C JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND DUP2 MSTORE ADDRESS PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE DUP2 MLOAD DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP2 LT PUSH2 0x49A JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP2 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7E8C7F08 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x505 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x529 SWAP2 SWAP1 PUSH2 0x69C JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE DUP2 MLOAD DUP3 SWAP1 PUSH1 0x5 SWAP1 DUP2 LT PUSH2 0x564 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x40 MLOAD PUSH32 0x1C47671B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x1C47671B SWAP1 PUSH2 0x5B4 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x895 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5E2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x63F PUSH2 0x60E JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x64C PUSH2 0x60E JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x659 PUSH2 0x60E JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x11F8 DUP1 PUSH2 0x99D DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP2 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6AD JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x6DC JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6F4 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6DC JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x71C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x733 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP6 ADD DUP7 PUSH1 0x1F DUP3 ADD SLT PUSH2 0x744 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP3 POP DUP2 DUP4 GT ISZERO PUSH2 0x754 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP5 DUP4 ADD ADD GT ISZERO PUSH2 0x765 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH1 0x20 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x7B1 JUMPI INVALID JUMPDEST SWAP1 MSTORE JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 SWAP1 DUP2 ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND DUP4 MSTORE PUSH1 0x20 PUSH1 0x40 DUP2 DUP6 ADD MSTORE DUP5 MLOAD PUSH1 0x40 DUP6 ADD MSTORE DUP1 DUP6 ADD MLOAD PUSH2 0x7FC PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x7B5 JUMP JUMPDEST POP PUSH1 0x40 DUP6 ADD MLOAD PUSH2 0x80F PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0x7B5 JUMP JUMPDEST POP PUSH1 0x60 DUP6 ADD MLOAD PUSH2 0x822 PUSH1 0xE0 DUP7 ADD DUP3 PUSH2 0x7B5 JUMP JUMPDEST POP PUSH1 0x80 DUP6 ADD MLOAD PUSH2 0x120 DUP4 DUP3 AND DUP2 DUP8 ADD MSTORE PUSH1 0xA0 DUP8 ADD MLOAD SWAP4 POP DUP1 PUSH2 0x140 DUP8 ADD MSTORE POP POP DUP2 MLOAD DUP1 PUSH2 0x160 DUP7 ADD MSTORE DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x86A JUMPI DUP4 DUP2 ADD DUP4 ADD MLOAD DUP7 DUP3 ADD PUSH2 0x180 ADD MSTORE DUP3 ADD PUSH2 0x84D JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x87C JUMPI DUP5 PUSH2 0x180 DUP4 DUP9 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP4 SWAP1 SWAP4 ADD PUSH2 0x180 ADD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8FF JUMPI DUP4 MLOAD PUSH2 0x8C6 DUP5 DUP3 MLOAD PUSH2 0x7A7 JUMP JUMPDEST DUP6 DUP2 ADD MLOAD PUSH2 0x8D6 DUP8 DUP7 ADD DUP3 PUSH2 0x781 JUMP JUMPDEST POP PUSH1 0x40 DUP1 DUP3 ADD MLOAD PUSH2 0x8E9 DUP3 DUP8 ADD DUP3 PUSH2 0x774 JUMP JUMPDEST POP POP POP SWAP3 DUP5 ADD SWAP3 PUSH1 0x60 SWAP3 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x8B1 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND DUP4 MSTORE DUP1 DUP7 AND PUSH1 0x20 DUP5 ADD MSTORE POP PUSH1 0x80 PUSH1 0x40 DUP4 ADD MSTORE DUP3 PUSH1 0x80 DUP4 ADD MSTORE DUP3 DUP5 PUSH1 0xA0 DUP5 ADD CALLDATACOPY DUP1 PUSH1 0xA0 DUP5 DUP5 ADD ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP5 ADD AND PUSH1 0xA0 DUP4 DUP3 DUP6 ADD SUB ADD PUSH1 0x60 DUP5 ADD MSTORE DUP2 PUSH1 0xA0 DUP3 DUP6 ADD ADD MSTORE PUSH1 0xC0 DUP2 DUP5 ADD ADD SWAP2 POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x11F8 CODESIZE SUB DUP1 PUSH3 0x11F8 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x16E JUMP JUMPDEST ADDRESS PUSH3 0x51 PUSH4 0x161B7D81 PUSH1 0xE2 SHL DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH3 0x75 AND JUMP JUMPDEST POP PUSH3 0x6E PUSH4 0x2E1F4BB PUSH1 0xE5 SHL DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH3 0x75 AND JUMP JUMPDEST POP PUSH3 0x1EC JUMP JUMPDEST PUSH3 0x89 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH3 0x145 AND JUMP JUMPDEST ISZERO PUSH3 0xB2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA9 SWAP1 PUSH3 0x19E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 EQ ISZERO PUSH3 0xDF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA9 SWAP1 PUSH3 0x1C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD SWAP1 SWAP3 CALLER SWAP3 SWAP1 SWAP2 PUSH32 0x1C3AC05008A204AEF806FB7B0A907C496ED107CD989825BEB9DF5F8094C2EABD SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x180 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x197 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x30B1B61D10333937BD32B7 PUSH1 0xA9 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x61636C3A2062616420667265657A65 PUSH1 0x88 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH2 0xFFC DUP1 PUSH3 0x1FC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C3E9760 GT PUSH2 0x69 JUMPI DUP1 PUSH4 0x96FC8ABD GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x96FC8ABD EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0xA157A10D EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0xBDF9A726 EQ PUSH2 0x20E JUMPI PUSH2 0xE2 JUMP JUMPDEST DUP1 PUSH4 0x5C3E9760 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x7E8C7F08 EQ PUSH2 0x1AC JUMPI PUSH2 0xE2 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0x1C47671B EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0x495A9825 EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0x58849734 EQ PUSH2 0x15F JUMPI PUSH2 0xE2 JUMP JUMPDEST CALLDATASIZE PUSH2 0xE2 JUMPI CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x6C703791F399558807424F489CCD811C72B4FF0B74AF547264FAD7C646776DF0 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0xF21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x107 PUSH2 0x102 CALLDATASIZE PUSH1 0x4 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x22E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114 SWAP2 SWAP1 PUSH2 0xE25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13D PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xB8B JUMP JUMPDEST PUSH2 0x272 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x107 PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x3BE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13D PUSH2 0x17A CALLDATASIZE PUSH1 0x4 PUSH2 0xC8A JUMP JUMPDEST PUSH2 0x3E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19F PUSH2 0x19A CALLDATASIZE PUSH1 0x4 PUSH2 0xA59 JUMP JUMPDEST PUSH2 0x47C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114 SWAP2 SWAP1 PUSH2 0xD5D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x6B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114 SWAP2 SWAP1 PUSH2 0xE30 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x107 PUSH2 0x1E9 CALLDATASIZE PUSH1 0x4 PUSH2 0xC8A JUMP JUMPDEST PUSH2 0x6BE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13D PUSH2 0x209 CALLDATASIZE PUSH1 0x4 PUSH2 0xC8A JUMP JUMPDEST PUSH2 0x6DB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13D PUSH2 0x229 CALLDATASIZE PUSH1 0x4 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x770 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0x5C3E976000000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x26C JUMPI POP PUSH2 0x26C DUP3 PUSH2 0x808 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x8DAFB0716DBDC5222F4B82FA3495E71054F736C761C542CFFF5CF37CEEF75D46 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0x161B7D81 PUSH1 0xE2 SHL SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x2E1 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x306 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FD SWAP1 PUSH2 0xE7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x3B9 JUMPI PUSH2 0x31A PUSH2 0x9F9 JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x326 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x33D JUMPI INVALID JUMPDEST DUP2 MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x34A JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x367 JUMPI PUSH2 0x362 DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0x83A JUMP JUMPDEST PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x1 DUP2 MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x376 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x38E JUMPI PUSH2 0x362 DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0x8F0 JUMP JUMPDEST PUSH1 0x2 DUP2 MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x39D JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x3B0 JUMPI PUSH2 0x3B0 DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0x979 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x309 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x8DAFB0716DBDC5222F4B82FA3495E71054F736C761C542CFFF5CF37CEEF75D46 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0x161B7D81 PUSH1 0xE2 SHL SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x456 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x472 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FD SWAP1 PUSH2 0xE7C JUMP JUMPDEST PUSH2 0x3B9 DUP4 DUP4 PUSH2 0x8F0 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x7B98092935FAE603CE262EFFB602034522041DE02B6C825126B8CCA4FE67E98F PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH32 0x5C3E976000000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x507 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x523 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FD SWAP1 PUSH2 0xE7C JUMP JUMPDEST PUSH1 0x60 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x53D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x571 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x55C JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x668 JUMPI PUSH1 0x0 PUSH1 0x60 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x590 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x5B1 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP9 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x5C9 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x5E2 SWAP2 SWAP1 PUSH2 0xD41 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x61F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x624 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x646 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FD SWAP1 PUSH2 0xE45 JUMP JUMPDEST DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x653 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP POP PUSH1 0x1 ADD PUSH2 0x577 JUMP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x853C59370D112FBA38E26EDE245C0D137FD5FF8360C69699264EDC28D87233EA DUP6 DUP4 PUSH1 0x40 MLOAD PUSH2 0x6A4 SWAP3 SWAP2 SWAP1 PUSH2 0xD70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x161B7D81 PUSH1 0xE2 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 DUP2 MSTORE SWAP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 MSTORE SWAP1 DUP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x8DAFB0716DBDC5222F4B82FA3495E71054F736C761C542CFFF5CF37CEEF75D46 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0x161B7D81 PUSH1 0xE2 SHL SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x74A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x766 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FD SWAP1 PUSH2 0xE7C JUMP JUMPDEST PUSH2 0x3B9 DUP4 DUP4 PUSH2 0x83A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x8DAFB0716DBDC5222F4B82FA3495E71054F736C761C542CFFF5CF37CEEF75D46 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0x161B7D81 PUSH1 0xE2 SHL SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x7DF JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x7FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FD SWAP1 PUSH2 0xE7C JUMP JUMPDEST PUSH2 0x804 DUP3 PUSH2 0x979 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x843 DUP3 PUSH2 0x3BE JUMP JUMPDEST ISZERO PUSH2 0x860 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FD SWAP1 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 EQ ISZERO PUSH2 0x88A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FD SWAP1 PUSH2 0xEEA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD SWAP1 SWAP3 CALLER SWAP3 SWAP1 SWAP2 PUSH32 0x1C3AC05008A204AEF806FB7B0A907C496ED107CD989825BEB9DF5F8094C2EABD SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x8F9 DUP3 PUSH2 0x3BE JUMP JUMPDEST ISZERO PUSH2 0x916 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FD SWAP1 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD SWAP1 SWAP3 CALLER SWAP3 SWAP1 SWAP2 PUSH32 0x682F2C466C1E9F6883EB72CBCED01373E1CB18B05AE5C8BC04DC73D73E29F8CD SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x982 DUP2 PUSH2 0x3BE JUMP JUMPDEST ISZERO PUSH2 0x99F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FD SWAP1 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE MLOAD CALLER SWAP3 SWAP2 PUSH32 0x49C6B8B07A879425742523FA80F8FFB25E39AD518C93A5896A0DF19518397E5 SWAP2 LOG3 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP2 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA6B JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xA82 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD DUP7 PUSH1 0x1F DUP3 ADD SLT PUSH2 0xA93 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP3 POP PUSH2 0xAA8 PUSH2 0xAA3 DUP5 PUSH2 0xF51 JUMP JUMPDEST PUSH2 0xF2A JUMP JUMPDEST DUP4 DUP2 MSTORE DUP5 DUP2 ADD SWAP1 DUP3 DUP7 ADD DUP8 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0xB7C JUMPI DUP2 CALLDATALOAD DUP6 ADD PUSH1 0x1F NOT PUSH1 0x60 DUP2 DUP4 DUP16 SUB ADD SLT ISZERO PUSH2 0xAD4 JUMPI DUP11 DUP12 REVERT JUMPDEST PUSH2 0xADE PUSH1 0x60 PUSH2 0xF2A JUMP JUMPDEST PUSH2 0xAEA DUP15 DUP13 DUP6 ADD PUSH2 0xA1B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x40 DUP4 ADD CALLDATALOAD DUP12 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD CALLDATALOAD DUP10 DUP2 GT ISZERO PUSH2 0xB06 JUMPI DUP13 DUP14 REVERT JUMPDEST DUP1 DUP5 ADD DUP16 PUSH1 0x3F DUP3 ADD SLT PUSH2 0xB17 JUMPI DUP14 DUP15 REVERT JUMPDEST DUP13 DUP2 ADD CALLDATALOAD SWAP5 POP DUP11 DUP6 GT ISZERO PUSH2 0xB29 JUMPI DUP14 DUP15 REVERT JUMPDEST PUSH2 0xB39 DUP14 DUP6 PUSH1 0x1F DUP9 ADD AND ADD PUSH2 0xF2A JUMP JUMPDEST SWAP2 POP DUP5 DUP3 MSTORE DUP16 PUSH1 0x40 DUP7 DUP4 ADD ADD GT ISZERO PUSH2 0xB4F JUMPI DUP14 DUP15 REVERT JUMPDEST DUP5 PUSH1 0x40 DUP3 ADD DUP15 DUP5 ADD CALLDATACOPY POP SWAP3 DUP4 ADD DUP12 ADD DUP13 SWAP1 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP DUP5 MSTORE SWAP3 DUP8 ADD SWAP3 SWAP1 DUP8 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xAB4 JUMP JUMPDEST POP SWAP1 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB9D JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBB3 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP1 DUP5 ADD DUP6 PUSH1 0x1F DUP3 ADD SLT PUSH2 0xBC4 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP2 POP PUSH2 0xBD4 PUSH2 0xAA3 DUP4 PUSH2 0xF51 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP4 DUP2 ADD SWAP1 DUP3 DUP6 ADD PUSH1 0x60 DUP1 DUP7 MUL DUP6 ADD DUP8 ADD DUP11 LT ISZERO PUSH2 0xBF2 JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP5 POP JUMPDEST DUP6 DUP6 LT ISZERO PUSH2 0xC59 JUMPI DUP1 DUP3 DUP12 SUB SLT ISZERO PUSH2 0xC0C JUMPI DUP8 DUP9 REVERT JUMPDEST PUSH2 0xC15 DUP2 PUSH2 0xF2A JUMP JUMPDEST PUSH2 0xC1F DUP12 DUP5 PUSH2 0xA4A JUMP JUMPDEST DUP2 MSTORE PUSH2 0xC2D DUP12 DUP10 DUP6 ADD PUSH2 0xA32 JUMP JUMPDEST DUP9 DUP3 ADD MSTORE PUSH1 0x40 PUSH2 0xC3F DUP13 DUP3 DUP7 ADD PUSH2 0xA1B JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE DUP5 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP3 DUP7 ADD SWAP3 SWAP1 DUP2 ADD SWAP1 PUSH2 0xBF6 JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC78 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC83 DUP2 PUSH2 0xFAD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC9C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xCA7 DUP2 PUSH2 0xFAD JUMP JUMPDEST SWAP2 POP PUSH2 0xCB6 DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0xA1B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MLOAD DUP1 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP6 POP DUP1 DUP2 DUP4 MUL DUP5 ADD ADD DUP2 DUP7 ADD DUP6 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xD08 JUMPI PUSH1 0x1F NOT DUP7 DUP5 SUB ADD DUP10 MSTORE PUSH2 0xCF6 DUP4 DUP4 MLOAD PUSH2 0xD15 JUMP JUMPDEST SWAP9 DUP5 ADD SWAP9 SWAP3 POP SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xCDA JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xD2D DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xF7D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0xD53 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0xF7D JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0xC83 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCBF JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP4 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x60 SWAP1 DUP2 DUP6 ADD SWAP1 PUSH1 0x20 DUP1 DUP3 MUL DUP8 ADD DUP5 ADD DUP2 DUP11 ADD DUP8 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xE04 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA0 DUP11 DUP5 SUB ADD DUP7 MSTORE DUP2 MLOAD PUSH2 0xDD1 DUP2 MLOAD PUSH2 0xF71 JUMP JUMPDEST DUP5 MSTORE DUP5 DUP2 ADD MLOAD DUP6 DUP6 ADD MSTORE DUP9 DUP2 ADD MLOAD DUP9 DUP11 DUP7 ADD MSTORE PUSH2 0xDF0 DUP10 DUP7 ADD DUP3 PUSH2 0xD15 JUMP JUMPDEST SWAP8 DUP7 ADD SWAP8 SWAP5 POP POP POP SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xD96 JUMP JUMPDEST POP POP DUP8 DUP2 SUB DUP3 DUP10 ADD MSTORE PUSH2 0xE17 DUP2 DUP11 PUSH2 0xCBF JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xC SWAP1 DUP3 ADD MSTORE PUSH32 0x6561676C65743A2063616C6C0000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x9 SWAP1 DUP3 ADD MSTORE PUSH32 0x61636C3A20617574680000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH32 0x61636C3A2066726F7A656E000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH32 0x61636C3A2062616420667265657A650000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xF49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xF67 JUMPI DUP1 DUP2 REVERT JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF98 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xF80 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xFA7 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xFC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0xDB761EFE9E5BD9CE23FABB4538CE82D5F49D766398DF8315E5742DA4 DUP3 LOG2 DUP13 PUSH5 0x736F6C6343 STOP MOD ADDMOD STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 PUSH24 0x3F6D66854E77DC3B5A2A3F521901216B970229DF45E4522F POP PUSH12 0x910526B864736F6C63430006 ADDMOD STOP CALLER ",
            "sourceMap": "427:1581:2:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;427:1581:2;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;762:1244:2;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;511:42;;;:::i;:::-;;;;;;;;559:31;;;:::i;762:1244::-;827:13;842:21;875:42;;:::i;:::-;927:32;;:::i;:::-;-1:-1:-1;962:161:2;;;;;;;;-1:-1:-1;962:161:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1142:12;:44;;;;;962:161;;-1:-1:-1;;;;;1142:12:2;;:21;;:44;;1172:4;;962:161;;1142:44;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1142:44:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1142:44:2;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1142:44:2;;;;;;;;;1134:52;;1216:5;1205:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;1233:8:2;;:43;;;;;1196:26;;-1:-1:-1;;;;;;1233:8:2;;:17;;:43;;1196:26;;1259:5;;1266;;;;1233:43;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1233:43:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;1325:29:2;;;1352:1;1325:29;;;;;;;;;1287:35;;-1:-1:-1;1325:29:2;-1:-1:-1;1325:29:2;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;1375:81:2;;;;;;;;;1287:67;;-1:-1:-1;1375:81:2;-1:-1:-1;1375:81:2;;1422:23;1375:81;;;;-1:-1:-1;;;;;1375:81:2;;;;;1364:8;;:5;;-1:-1:-1;;1364:8:2;;;;;;;;;;;;;:92;1477:80;;;;;;;;;;-1:-1:-1;1477:80:2;;1524:22;1477:80;;;;-1:-1:-1;;;;;1477:80:2;;;;;1466:8;;:5;;1472:1;;1466:8;;;;;;;;;;;;;;;:91;1578:82;;;;;;;;;;-1:-1:-1;1578:82:2;;1625:24;1578:82;;;;-1:-1:-1;;;;;1578:82:2;;;;;1567:8;;:5;;1573:1;;1567:8;;;;;;;;;;;;;;;:93;1681:89;;;;;;;;;;-1:-1:-1;1681:89:2;;1728:24;1681:89;;;;-1:-1:-1;;;;;1681:89:2;;;;;;;1670:8;;:5;;1676:1;;1670:8;;;;;;;;;;;;;;;:100;1791:81;;;;;;;;;;1812:25;1791:81;;;;1839:5;-1:-1:-1;;;;;1839:15:2;;:17;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1839:17:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1839:17:2;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1839:17:2;;;;;;;;;1791:81;;;;1866:4;1791:81;;;;;1780:8;;:5;;1786:1;;1780:8;;;;;;;;;;;;;;;:92;1893:78;;;;;;;;;;1914:25;1893:78;;;;1941:5;-1:-1:-1;;;;;1941:15:2;;:17;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1941:17:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1941:17:2;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1941:17:2;;;;;;;;;1893:78;;;;1968:1;1893:78;;;;;1882:8;;:5;;1888:1;;1882:8;;;;;;;;;;;;;;;:89;1982:17;;;;;-1:-1:-1;;;;;1982:10:2;;;;;:17;;1993:5;;1982:17;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1982:17:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1982:17:2;;;;762:1244;;;;;;;;:::o;511:42::-;;;-1:-1:-1;;;;;511:42:2;;:::o;559:31::-;;;-1:-1:-1;;;;;559:31:2;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;693:261::-;;807:2;795:9;786:7;782:23;778:32;775:2;;;-1:-1;;813:12;775:2;88:6;82:13;12731:66;15548:5;12720:78;15524:5;15521:34;15511:2;;-1:-1;;15559:12;15511:2;865:73;769:185;-1:-1;;;769:185;961:311;;1100:2;1088:9;1079:7;1075:23;1071:32;1068:2;;;-1:-1;;1106:12;1068:2;252:6;246:13;-1:-1;;;;;15720:5;13129:54;15671:5;15668:59;15658:2;;-1:-1;;15731:12;1279:367;;;1403:2;1391:9;1382:7;1378:23;1374:32;1371:2;;;-1:-1;;1409:12;1371:2;1467:17;1454:31;1505:18;;1497:6;1494:30;1491:2;;;-1:-1;;1527:12;1491:2;1613:6;1602:9;1598:22;463:3;456:4;448:6;444:17;440:27;430:2;;-1:-1;;471:12;430:2;514:6;501:20;491:30;;1505:18;533:6;530:30;527:2;;;-1:-1;;563:12;527:2;658:3;1403:2;638:17;599:6;624:32;;621:41;618:2;;;-1:-1;;665:12;618:2;1403;595:17;;1555:75;;-1:-1;1365:281;;-1:-1;;;;1365:281;1939:103;-1:-1;;;;;13129:54;2000:37;;1994:48;3146:100;12731:66;12720:78;3205:36;;3199:47;4474:134;15434:1;15427:5;15424:12;15414:2;;15440:9;15414:2;4544:59;;4538:70;5984:475;6190:23;;-1:-1;;;;;13129:54;2000:37;;6363:4;6352:16;;;6346:23;6423:14;;7995:37;6096:363;8044:477;;-1:-1;;;;;13140:42;2030:5;13129:54;2007:3;2000:37;8365:2;8247;8365;8354:9;8350:18;8343:48;6760:16;6754:23;8247:2;8236:9;8232:18;7995:37;8365:2;6929:5;6925:16;6919:23;6948:119;7052:14;8236:9;7052:14;7038:12;6948:119;;;;8247:2;7151:5;7147:16;7141:23;7170:119;7274:14;8236:9;7274:14;7260:12;7170:119;;;;7052:14;7368:5;7364:16;7358:23;7387:119;7491:14;8236:9;7491:14;7477:12;7387:119;;;;7589:4;7582:5;7578:16;7572:23;6676:6;13140:42;12641:5;13129:54;6676:6;8236:9;7649:14;2000:37;7274:14;7737:5;7733:16;7727:23;7707:43;;6676:6;7770:16;8236:9;7770:16;7763:40;;;3385:5;11534:12;12001:6;6667:16;8236:9;6667:16;11989:19;-1:-1;15045:101;15059:6;15056:1;15053:13;15045:101;;;15126:11;;;;;15120:18;15107:11;;;;;15100:39;15074:10;;15045:101;;;15161:6;15158:1;15155:13;15152:2;;;-1:-1;15208:16;15217:6;8236:9;15208:16;;15201:27;15152:2;-1:-1;15337:2;15317:14;-1:-1;;15313:28;3532:39;;;;;;;8218:303;-1:-1;;;;;8218:303;8528:474;8757:2;8771:47;;;11534:12;;8742:18;;;11989:19;;;8528:474;;8757:2;11362:14;;;;12029;;;;8528:474;2778:338;2803:6;2800:1;2797:13;2778:338;;;2870:6;2864:13;5510:72;5567:14;5487:16;5481:23;5510:72;;;8757:2;5654:5;5650:16;5644:23;5673:61;8757:2;5723:3;5719:14;5705:12;5673:61;;;;5812:4;;5805:5;5801:16;5795:23;5824:63;5812:4;5876:3;5872:14;5858:12;5824:63;;;-1:-1;;;11818:14;;;;1920:4;1911:14;;;;;2825:1;2818:9;2778:338;;;-1:-1;8824:168;;8728:274;-1:-1;;;;;;8728:274;9009:268;-1:-1;;;;;13129:54;;;;3677:73;;9159:2;9144:18;;9130:147;9284:425;-1:-1;;;;;13129:54;;;3677:73;;13129:54;;9695:2;9680:18;;3677:73;9485:2;9470:18;;9456:253;9716:932;;-1:-1;;;;;13140:42;3743:5;13129:54;3684:3;3677:73;13140:42;3743:5;13129:54;10270:2;10259:9;10255:18;3677:73;;10067:3;10307:2;10296:9;10292:18;10285:48;12001:6;10067:3;10056:9;10052:19;11989;14900:6;14895:3;12029:14;10056:9;12029:14;14877:30;-1:-1;12029:14;14947:6;10056:9;14938:16;;14931:27;-1:-1;;15337:2;4926:6;15317:14;15313:28;12029:14;10483:9;15313:28;10056:9;4895:39;10473:20;;10468:2;10457:9;10453:18;10446:48;-1:-1;12029:14;15313:28;10056:9;4895:39;;11989:19;12029:14;15313:28;10056:9;4895:39;12029:14;10500:138;;;10038:610;;;;;;;"
          },
          "methodIdentifiers": {
            "newDummyEaglet(string)": "4295f16c",
            "queueFactory()": "6ca4110e",
            "registry()": "7b103999"
          }
        }
      },
      "OptimisticQueueFactory": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_aclRoot",
                "type": "address"
              },
              {
                "components": [
                  {
                    "internalType": "uint256",
                    "name": "executionDelay",
                    "type": "uint256"
                  },
                  {
                    "components": [
                      {
                        "internalType": "address",
                        "name": "token",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256",
                        "name": "amount",
                        "type": "uint256"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Collateral",
                    "name": "scheduleDeposit",
                    "type": "tuple"
                  },
                  {
                    "components": [
                      {
                        "internalType": "address",
                        "name": "token",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256",
                        "name": "amount",
                        "type": "uint256"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Collateral",
                    "name": "challengeDeposit",
                    "type": "tuple"
                  },
                  {
                    "components": [
                      {
                        "internalType": "address",
                        "name": "token",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256",
                        "name": "amount",
                        "type": "uint256"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Collateral",
                    "name": "vetoDeposit",
                    "type": "tuple"
                  },
                  {
                    "internalType": "address",
                    "name": "resolver",
                    "type": "address"
                  },
                  {
                    "internalType": "bytes",
                    "name": "rules",
                    "type": "bytes"
                  }
                ],
                "internalType": "struct ERC3000Data.Config",
                "name": "_config",
                "type": "tuple"
              }
            ],
            "name": "newQueue",
            "outputs": [
              {
                "internalType": "contract OptimisticQueue",
                "name": "queue",
                "type": "address"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34F6 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0x2E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x328867CE EQ PUSH3 0x33 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x4A PUSH3 0x44 CALLDATASIZE PUSH1 0x4 PUSH3 0x119 JUMP JUMPDEST PUSH3 0x62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x59 SWAP2 SWAP1 PUSH3 0x34E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH3 0x74 SWAP1 PUSH3 0xA8 JUMP JUMPDEST PUSH3 0x81 SWAP3 SWAP2 SWAP1 PUSH3 0x270 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x9E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3129 DUP1 PUSH3 0x398 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH3 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xED JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH3 0xF9 PUSH1 0x40 PUSH3 0x36F JUMP JUMPDEST SWAP1 POP PUSH3 0x107 DUP4 DUP4 PUSH3 0xB6 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x12C JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH3 0x138 DUP5 DUP5 PUSH3 0xB6 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP1 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH3 0x156 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP7 ADD PUSH2 0x120 DUP2 DUP10 SUB SLT ISZERO PUSH3 0x16A JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH3 0x176 PUSH1 0xC0 PUSH3 0x36F JUMP JUMPDEST SWAP3 POP DUP1 CALLDATALOAD DUP4 MSTORE PUSH3 0x18A DUP9 DUP6 DUP4 ADD PUSH3 0xDB JUMP JUMPDEST DUP5 DUP5 ADD MSTORE PUSH3 0x19D DUP9 PUSH1 0x60 DUP4 ADD PUSH3 0xDB JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE PUSH3 0x1B1 DUP9 PUSH1 0xA0 DUP4 ADD PUSH3 0xDB JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH3 0x1C5 DUP9 PUSH1 0xE0 DUP4 ADD PUSH3 0xB6 JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x100 DUP2 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH3 0x1DD JUMPI DUP6 DUP7 REVERT JUMPDEST DUP1 DUP3 ADD DUP10 PUSH1 0x1F DUP3 ADD SLT PUSH3 0x1EF JUMPI DUP7 DUP8 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP3 POP DUP4 DUP4 GT ISZERO PUSH3 0x200 JUMPI DUP7 DUP8 REVERT JUMPDEST PUSH3 0x214 DUP7 PUSH1 0x1F NOT PUSH1 0x1F DUP7 ADD AND ADD PUSH3 0x36F JUMP JUMPDEST SWAP4 POP DUP3 DUP5 MSTORE DUP10 DUP7 DUP5 DUP4 ADD ADD GT ISZERO PUSH3 0x22A JUMPI DUP7 DUP8 REVERT JUMPDEST DUP3 DUP7 DUP3 ADD DUP8 DUP7 ADD CALLDATACOPY POP POP DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP3 ADD MSTORE SWAP1 SWAP4 SWAP1 SWAP3 POP SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 MSTORE PUSH1 0x20 SWAP1 DUP2 ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND DUP4 MSTORE PUSH1 0x20 PUSH1 0x40 DUP2 DUP6 ADD MSTORE DUP5 MLOAD PUSH1 0x40 DUP6 ADD MSTORE DUP1 DUP6 ADD MLOAD PUSH3 0x2AE PUSH1 0x60 DUP7 ADD DUP3 PUSH3 0x24B JUMP JUMPDEST POP PUSH1 0x40 DUP6 ADD MLOAD PUSH3 0x2C3 PUSH1 0xA0 DUP7 ADD DUP3 PUSH3 0x24B JUMP JUMPDEST POP PUSH1 0x60 DUP6 ADD MLOAD PUSH3 0x2D8 PUSH1 0xE0 DUP7 ADD DUP3 PUSH3 0x24B JUMP JUMPDEST POP PUSH1 0x80 DUP6 ADD MLOAD PUSH2 0x120 DUP4 DUP3 AND DUP2 DUP8 ADD MSTORE PUSH1 0xA0 DUP8 ADD MLOAD SWAP4 POP DUP1 PUSH2 0x140 DUP8 ADD MSTORE POP POP DUP2 MLOAD DUP1 PUSH2 0x160 DUP7 ADD MSTORE DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x322 JUMPI DUP4 DUP2 ADD DUP4 ADD MLOAD DUP7 DUP3 ADD PUSH2 0x180 ADD MSTORE DUP3 ADD PUSH3 0x303 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH3 0x335 JUMPI DUP5 PUSH2 0x180 DUP4 DUP9 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP4 SWAP1 SWAP4 ADD PUSH2 0x180 ADD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH3 0x38F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3129 CODESIZE SUB DUP1 PUSH3 0x3129 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x2C6 JUMP JUMPDEST DUP2 PUSH3 0x51 PUSH4 0x161B7D81 PUSH1 0xE2 SHL DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH3 0x6F AND JUMP JUMPDEST POP PUSH3 0x66 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH3 0x13F AND JUMP JUMPDEST POP POP POP PUSH3 0x528 JUMP JUMPDEST PUSH3 0x83 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH3 0x1A1 AND JUMP JUMPDEST ISZERO PUSH3 0xAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA3 SWAP1 PUSH3 0x3C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 EQ ISZERO PUSH3 0xD9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA3 SWAP1 PUSH3 0x3EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD SWAP1 SWAP3 CALLER SWAP3 SWAP1 SWAP2 PUSH32 0x1C3AC05008A204AEF806FB7B0A907C496ED107CD989825BEB9DF5F8094C2EABD SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x157 DUP3 PUSH3 0x1CA PUSH1 0x20 SHL PUSH3 0x1445 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD CALLER SWAP2 SWAP1 PUSH32 0x71DADC36A9A359DE148D456696AB20ACF1980B6EAC0E727F21A9925BE8CF159 SWAP1 PUSH3 0x191 SWAP1 DUP7 SWAP1 PUSH3 0x413 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x1DF SWAP2 SWAP1 PUSH3 0x413 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x22B JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x241 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH3 0x256 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH3 0x4B5 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH3 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x281 DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD PUSH3 0x4DC JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x29A JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH3 0x2A6 PUSH1 0x40 PUSH3 0x4B5 JUMP JUMPDEST SWAP1 POP PUSH3 0x2B4 DUP4 DUP4 PUSH3 0x1FC JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP3 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2D9 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH3 0x2E6 DUP2 PUSH3 0x50F JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x303 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP6 ADD PUSH2 0x120 DUP2 DUP9 SUB SLT ISZERO PUSH3 0x317 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH3 0x323 PUSH1 0xC0 PUSH3 0x4B5 JUMP JUMPDEST SWAP3 POP DUP1 MLOAD DUP4 MSTORE PUSH3 0x338 DUP8 PUSH1 0x20 DUP4 ADD PUSH3 0x288 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE PUSH3 0x34C DUP8 PUSH1 0x60 DUP4 ADD PUSH3 0x288 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE PUSH3 0x360 DUP8 PUSH1 0xA0 DUP4 ADD PUSH3 0x288 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH3 0x374 DUP8 PUSH1 0xE0 DUP4 ADD PUSH3 0x1FC JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD DUP3 DUP2 GT ISZERO PUSH3 0x38C JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH3 0x39A DUP9 DUP3 DUP5 ADD PUSH3 0x21A JUMP JUMPDEST PUSH1 0xA0 DUP6 ADD MSTORE POP POP POP DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 SWAP1 DUP2 ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x30B1B61D10333937BD32B7 PUSH1 0xA9 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x61636C3A2062616420667265657A65 PUSH1 0x88 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH3 0x434 PUSH1 0x40 DUP5 ADD DUP3 PUSH3 0x3AD JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH3 0x449 PUSH1 0x80 DUP5 ADD DUP3 PUSH3 0x3AD JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH3 0x45E PUSH1 0xC0 DUP5 ADD DUP3 PUSH3 0x3AD JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x100 DUP4 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x120 DUP1 DUP5 ADD MSTORE DUP1 MLOAD PUSH2 0x140 DUP5 ADD DUP2 SWAP1 MSTORE PUSH2 0x160 PUSH3 0x49E DUP3 DUP3 DUP8 ADD PUSH1 0x20 DUP7 ADD PUSH3 0x4DC JUMP JUMPDEST DUP1 PUSH1 0x1F NOT PUSH1 0x1F DUP5 ADD AND DUP7 ADD ADD SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH3 0x4D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x4F9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x4DF JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x509 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x525 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2BF1 DUP1 PUSH3 0x538 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E8C7F08 GT PUSH2 0xE3 JUMPI DUP1 PUSH4 0xAFFED0E0 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xC8182AF0 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xC8182AF0 EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0xE1F1176D EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0xECB6CBA6 EQ PUSH2 0x36C JUMPI PUSH2 0x18D JUMP JUMPDEST DUP1 PUSH4 0xAFFED0E0 EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0xB9E9823F EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0xBDF9A726 EQ PUSH2 0x331 JUMPI PUSH2 0x18D JUMP JUMPDEST DUP1 PUSH4 0xA0E975CB GT PUSH2 0xBD JUMPI DUP1 PUSH4 0xA0E975CB EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0xA157A10D EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0xAA455D9F EQ PUSH2 0x303 JUMPI PUSH2 0x18D JUMP JUMPDEST DUP1 PUSH4 0x7E8C7F08 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x869CB6B5 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x96FC8ABD EQ PUSH2 0x2CA JUMPI PUSH2 0x18D JUMP JUMPDEST DUP1 PUSH4 0x3B1C5FC6 GT PUSH2 0x145 JUMPI DUP1 PUSH4 0x5C44C0A7 GT PUSH2 0x11F JUMPI DUP1 PUSH4 0x5C44C0A7 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x5DECC190 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x7C10DEA6 EQ PUSH2 0x282 JUMPI PUSH2 0x18D JUMP JUMPDEST DUP1 PUSH4 0x3B1C5FC6 EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x495A9825 EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x58849734 EQ PUSH2 0x249 JUMPI PUSH2 0x18D JUMP JUMPDEST DUP1 PUSH4 0x1C47671B GT PUSH2 0x176 JUMPI DUP1 PUSH4 0x1C47671B EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x25DDCBE0 EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x311A6C56 EQ PUSH2 0x210 JUMPI PUSH2 0x18D JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x494812A EQ PUSH2 0x1BB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A5 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x214C JUMP JUMPDEST PUSH2 0x37F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x2696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2292 JUMP JUMPDEST PUSH2 0x3C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x2605 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x1E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FFC JUMP JUMPDEST PUSH2 0x4EB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x203 PUSH2 0x1FE CALLDATASIZE PUSH1 0x4 PUSH2 0x21FE JUMP JUMPDEST PUSH2 0x637 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x26A1 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x21E CALLDATASIZE PUSH1 0x4 PUSH2 0x2378 JUMP JUMPDEST PUSH2 0x837 JUMP JUMPDEST PUSH2 0x203 PUSH2 0x231 CALLDATASIZE PUSH1 0x4 PUSH2 0x21A0 JUMP JUMPDEST PUSH2 0x8EB JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x244 CALLDATASIZE PUSH1 0x4 PUSH2 0x214C JUMP JUMPDEST PUSH2 0x908 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x257 CALLDATASIZE PUSH1 0x4 PUSH2 0x2168 JUMP JUMPDEST PUSH2 0x931 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x26A CALLDATASIZE PUSH1 0x4 PUSH2 0x21FE JUMP JUMPDEST PUSH2 0x9C6 JUMP JUMPDEST PUSH2 0x203 PUSH2 0x27D CALLDATASIZE PUSH1 0x4 PUSH2 0x2231 JUMP JUMPDEST PUSH2 0xA7C JUMP JUMPDEST PUSH2 0x295 PUSH2 0x290 CALLDATASIZE PUSH1 0x4 PUSH2 0x20CA JUMP JUMPDEST PUSH2 0xF0B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x272D JUMP JUMPDEST PUSH2 0x2AA PUSH2 0xF20 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x26AA JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x2C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x21FE JUMP JUMPDEST PUSH2 0xF2B JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x2D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2168 JUMP JUMPDEST PUSH2 0xFAE JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x2EB CALLDATASIZE PUSH1 0x4 PUSH2 0x20E2 JUMP JUMPDEST PUSH2 0xFCB JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x2FE CALLDATASIZE PUSH1 0x4 PUSH2 0x2168 JUMP JUMPDEST PUSH2 0x10F6 JUMP JUMPDEST PUSH2 0x203 PUSH2 0x311 CALLDATASIZE PUSH1 0x4 PUSH2 0x21CB JUMP JUMPDEST PUSH2 0x118B JUMP JUMPDEST PUSH2 0x203 PUSH2 0x1238 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x32C CALLDATASIZE PUSH1 0x4 PUSH2 0x22ED JUMP JUMPDEST PUSH2 0x123E JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x33F CALLDATASIZE PUSH1 0x4 PUSH2 0x214C JUMP JUMPDEST PUSH2 0x1256 JUMP JUMPDEST PUSH2 0x357 PUSH2 0x352 CALLDATASIZE PUSH1 0x4 PUSH2 0x20CA JUMP JUMPDEST PUSH2 0x12EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x25B4 JUMP JUMPDEST PUSH2 0x203 PUSH2 0x1309 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x37A CALLDATASIZE PUSH1 0x4 PUSH2 0x21FE JUMP JUMPDEST PUSH2 0x130F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0x88F3EE6900000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x3BD JUMPI POP PUSH2 0x3BD DUP3 PUSH2 0x1475 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x3D0 DUP5 PUSH2 0x14B3 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x3F1 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x45E JUMPI DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x80 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8BB04875 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42B SWAP2 SWAP1 PUSH2 0x26A1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x445 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x459 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x47F JUMPI INVALID JUMPDEST EQ SWAP1 POP DUP1 ISZERO PUSH2 0x498 JUMPI PUSH2 0x491 DUP6 PUSH2 0xF2B JUMP JUMPDEST SWAP3 POP PUSH2 0x4A1 JUMP JUMPDEST PUSH2 0x4A1 DUP6 PUSH2 0x9C6 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH32 0x27D8A5D945EB361475964ED2C71B8332B27AF2D630AB5DAF829D67AFD2584E6 DUP4 PUSH1 0x40 MLOAD PUSH2 0x4DB SWAP2 SWAP1 PUSH2 0x2696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x8DAFB0716DBDC5222F4B82FA3495E71054F736C761C542CFFF5CF37CEEF75D46 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0x161B7D81 PUSH1 0xE2 SHL SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x55A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x57F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x632 JUMPI PUSH2 0x593 PUSH2 0x1B9E JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x59F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x5B6 JUMPI INVALID JUMPDEST DUP2 MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x5C3 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x5E0 JUMPI PUSH2 0x5DB DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0x14D2 JUMP JUMPDEST PUSH2 0x629 JUMP JUMPDEST PUSH1 0x1 DUP2 MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x5EF JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x607 JUMPI PUSH2 0x5DB DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0x1588 JUMP JUMPDEST PUSH1 0x2 DUP2 MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x616 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x629 JUMPI PUSH2 0x629 DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0x1611 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x582 JUMP JUMPDEST POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x7376C9DBE282DFB2C566016189E1800FBABC0B60B4CC83FC4490AC5761CAD4A3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH32 0x25DDCBE000000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x6BF JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x6DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 DUP2 SWAP1 SSTORE DUP4 MLOAD MLOAD EQ PUSH2 0x706 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x27FF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x715 DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0x1445 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0x738 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x2791 JUMP JUMPDEST DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x0 ADD MLOAD TIMESTAMP ADD DUP5 PUSH1 0x0 ADD MLOAD PUSH1 0x20 ADD MLOAD LT ISZERO PUSH2 0x76A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x2836 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x797 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x28DB JUMP JUMPDEST PUSH2 0x7AD PUSH2 0x7A7 DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x1691 JUMP JUMPDEST DUP3 PUSH2 0x16ED JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP5 POP PUSH2 0x7D0 SWAP2 SWAP1 PUSH1 0x1 PUSH4 0xFFFFFFFF PUSH2 0x1722 AND JUMP JUMPDEST PUSH2 0x7D8 PUSH2 0x1BC0 JUMP JUMPDEST POP PUSH1 0x20 DUP1 DUP6 ADD MLOAD ADD MLOAD PUSH2 0x7F1 DUP2 CALLER PUSH4 0xFFFFFFFF PUSH2 0x1736 AND JUMP JUMPDEST DUP4 PUSH32 0x6E9C0FFD9C4371AF6A9201D5257F695EBC739BD3459E9C7D477ECA6768EEC359 DUP7 PUSH1 0x0 ADD MLOAD DUP4 PUSH1 0x40 MLOAD PUSH2 0x827 SWAP3 SWAP2 SWAP1 PUSH2 0x2ADF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x884 PUSH1 0x2 PUSH1 0x4 DUP6 EQ PUSH2 0x866 JUMPI PUSH1 0x4 PUSH2 0x869 JUMP JUMPDEST PUSH1 0x3 JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1722 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE MLOAD DUP6 SWAP2 SWAP1 PUSH32 0x56C8631A8915C0D362DBE57A61215FDDE954F73F81C8A3A1F55572FB015207B1 SWAP1 PUSH2 0x8DD SWAP1 DUP8 SWAP1 PUSH2 0x26A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x8DAFB0716DBDC5222F4B82FA3495E71054F736C761C542CFFF5CF37CEEF75D46 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0x161B7D81 PUSH1 0xE2 SHL SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x9A0 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x9BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH2 0x632 DUP4 DUP4 PUSH2 0x1588 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D1 DUP3 PUSH2 0x14B3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 SWAP2 POP PUSH2 0x9F5 SWAP1 PUSH1 0x4 PUSH1 0x5 PUSH4 0xFFFFFFFF PUSH2 0x1722 AND JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD DUP4 DUP3 ADD MLOAD SWAP1 SWAP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0xA2B SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x17D9 AND JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH2 0xA44 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x17D9 AND JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP1 SSTORE POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x5437EE176E989CB18B4ABE7EF424BFF2F7930E07CE482532FEAD6C9578D92C40 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH32 0x5DECC19000000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0xB04 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0xB20 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB2B DUP6 PUSH2 0x14B3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND CALLER OR SWAP1 SSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SWAP1 SWAP2 POP PUSH2 0xB81 SWAP1 PUSH1 0x1 PUSH1 0x2 PUSH4 0xFFFFFFFF PUSH2 0x1722 AND JUMP JUMPDEST PUSH2 0xB89 PUSH2 0x1BC0 JUMP JUMPDEST POP PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH2 0xBA3 DUP2 CALLER PUSH4 0xFFFFFFFF PUSH2 0x1736 AND JUMP JUMPDEST PUSH1 0x0 DUP7 PUSH1 0x20 ADD MLOAD PUSH1 0x80 ADD MLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7B751B9E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC02 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC26 SWAP2 SWAP1 PUSH2 0x1EF4 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP PUSH2 0xC48 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER ADDRESS DUP5 PUSH4 0xFFFFFFFF PUSH2 0x186D AND JUMP JUMPDEST PUSH2 0xC64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x28A4 JUMP JUMPDEST PUSH2 0xC7E PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP5 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x18EB AND JUMP JUMPDEST PUSH2 0xC9A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x2980 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC13517E1 PUSH1 0x2 DUP13 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCBC SWAP2 SWAP1 PUSH2 0x2AA6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE8 SWAP3 SWAP2 SWAP1 PUSH2 0x2741 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD16 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD3A SWAP2 SWAP1 PUSH2 0x22D5 JUMP JUMPDEST SWAP8 POP PUSH2 0xD57 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP5 PUSH1 0x0 PUSH4 0xFFFFFFFF PUSH2 0x18EB AND JUMP JUMPDEST PUSH2 0xD73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x286D JUMP JUMPDEST DUP10 PUSH1 0x0 ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x1988E4D59F596BA1A2D81E06874704A62502463AE6D99154F923E5EDEB98392B DUP14 PUSH1 0x0 ADD MLOAD PUSH1 0xA0 ADD MLOAD PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xDCA SWAP3 SWAP2 SWAP1 PUSH2 0x26BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x1988E4D59F596BA1A2D81E06874704A62502463AE6D99154F923E5EDEB98392B DUP13 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xE19 SWAP3 SWAP2 SWAP1 PUSH2 0x26BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x40 MLOAD PUSH32 0x7E9ADCCF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x7E9ADCCF SWAP1 PUSH2 0xE66 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x26A1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE94 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP13 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP9 SWAP1 SSTORE MLOAD CALLER SWAP2 POP DUP8 SWAP1 PUSH32 0x429DF837EB45B6713F725A0D3E57DB939FD7DD7D58BB3CD967FA37091572DB9F SWAP1 PUSH2 0xEF6 SWAP1 DUP14 SWAP1 DUP14 SWAP1 DUP12 SWAP1 PUSH2 0x2705 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH4 0x161B7D81 PUSH1 0xE2 SHL DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xF38 DUP4 PUSH2 0x14B3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP3 POP PUSH2 0xF5E SWAP2 SWAP1 PUSH1 0x6 PUSH4 0xFFFFFFFF PUSH2 0x1722 AND JUMP JUMPDEST DUP3 MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x20 DUP1 DUP6 ADD MLOAD ADD MLOAD PUSH2 0xF7B SWAP2 PUSH4 0xFFFFFFFF PUSH2 0x17D9 AND JUMP JUMPDEST DUP3 MLOAD PUSH1 0x40 SWAP1 DUP2 ADD MLOAD PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP2 ADD MLOAD PUSH2 0xF9B SWAP2 PUSH4 0xFFFFFFFF PUSH2 0x17D9 AND JUMP JUMPDEST DUP3 MLOAD PUSH2 0xFA7 SWAP1 DUP3 PUSH2 0x1966 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 DUP2 MSTORE SWAP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 MSTORE SWAP1 DUP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xCE37BBBE099FFD049703CE63E8A4278F5D5AE5A7014D70676A104BD77E95A795 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH32 0xA0E975CB00000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x1053 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x106F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1083 DUP6 PUSH2 0x107E DUP7 PUSH2 0x1445 JUMP JUMPDEST PUSH2 0x16ED JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 SWAP2 POP PUSH2 0x10A7 SWAP1 PUSH1 0x1 PUSH1 0x5 PUSH4 0xFFFFFFFF PUSH2 0x1722 AND JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH32 0xE703B40B97F0BDA26BA2D80E910EBE89254D4FE6F13B7EE83DFEA563EB73D64F DUP6 DUP8 PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x10E7 SWAP3 SWAP2 SWAP1 PUSH2 0x26E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x8DAFB0716DBDC5222F4B82FA3495E71054F736C761C542CFFF5CF37CEEF75D46 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0x161B7D81 PUSH1 0xE2 SHL SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x1165 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x1181 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH2 0x632 DUP4 DUP4 PUSH2 0x14D2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xE3ACC4F5503A4661FF3859143DAE57EB84D6EEEC076606B992576354B60A6B50 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH32 0xAA455D9F00000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x1213 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x122F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH2 0xFA7 DUP4 PUSH2 0x1A55 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x2912 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x8DAFB0716DBDC5222F4B82FA3495E71054F736C761C542CFFF5CF37CEEF75D46 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0x161B7D81 PUSH1 0xE2 SHL SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x12C5 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x12E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH2 0x12EA DUP3 PUSH2 0x1611 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x6E99E897067E581D1EFA914C0236E290A87C4B08AF2B020491EF6C4EA862AA04 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH32 0xECB6CBA600000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x139A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x13B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x20 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF TIMESTAMP AND LT ISZERO PUSH2 0x13E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x29EE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13F0 DUP5 PUSH2 0x14B3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 SWAP2 POP PUSH2 0x1414 SWAP1 PUSH1 0x1 PUSH1 0x6 PUSH4 0xFFFFFFFF PUSH2 0x1722 AND JUMP JUMPDEST DUP4 MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x20 DUP1 DUP7 ADD MLOAD ADD MLOAD PUSH2 0x1431 SWAP2 PUSH4 0xFFFFFFFF PUSH2 0x17D9 AND JUMP JUMPDEST DUP4 MLOAD PUSH2 0x143D SWAP1 DUP3 PUSH2 0x1966 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1458 SWAP2 SWAP1 PUSH2 0x2A93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0x9ABF68A800000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x3BD JUMPI POP PUSH2 0x3BD DUP3 PUSH2 0x1AA8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BD PUSH2 0x14C5 DUP4 PUSH1 0x0 ADD MLOAD PUSH2 0x1691 JUMP JUMPDEST PUSH2 0x107E DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0x1445 JUMP JUMPDEST PUSH2 0x14DB DUP3 PUSH2 0x908 JUMP JUMPDEST ISZERO PUSH2 0x14F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x2949 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 EQ ISZERO PUSH2 0x1522 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x2A5C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD SWAP1 SWAP3 CALLER SWAP3 SWAP1 SWAP2 PUSH32 0x1C3AC05008A204AEF806FB7B0A907C496ED107CD989825BEB9DF5F8094C2EABD SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x1591 DUP3 PUSH2 0x908 JUMP JUMPDEST ISZERO PUSH2 0x15AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x2949 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD SWAP1 SWAP3 CALLER SWAP3 SWAP1 SWAP2 PUSH32 0x682F2C466C1E9F6883EB72CBCED01373E1CB18B05AE5C8BC04DC73D73E29F8CD SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x161A DUP2 PUSH2 0x908 JUMP JUMPDEST ISZERO PUSH2 0x1637 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x2949 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE MLOAD CALLER SWAP3 SWAP2 PUSH32 0x49C6B8B07A879425742523FA80F8FFB25E39AD518C93A5896A0DF19518397E5 SWAP2 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD DUP4 PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x80 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x16B7 SWAP2 SWAP1 PUSH2 0x2683 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP6 PUSH1 0xA0 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1458 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x257B JUMP JUMPDEST PUSH1 0x0 ADDRESS DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1704 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x252B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x172C DUP4 DUP4 PUSH2 0x1ADA JUMP JUMPDEST PUSH2 0x632 DUP4 DUP3 PUSH2 0x1B13 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD ISZERO PUSH2 0x12EA JUMPI DUP2 MLOAD PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x1765 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP5 SWAP1 CALLER SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x186D AND JUMP JUMPDEST PUSH2 0x1781 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x2A25 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x484DECDC1E9549E1866295F6F86C889DED3F7DE410E7488A7A415978589DC8FD DUP6 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x17CC SWAP2 SWAP1 PUSH2 0x26A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD ISZERO PUSH2 0x12EA JUMPI DUP2 MLOAD PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x1806 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP5 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1B34 AND JUMP JUMPDEST PUSH2 0x1822 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x29B7 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x2D87480F50083E2B2759522A8FDDA59802650A8055E609A7772CF70C07748F52 DUP6 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x17CC SWAP2 SWAP1 PUSH2 0x26A1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x188E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25C8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE SWAP1 POP PUSH2 0x18E1 DUP7 DUP3 PUSH2 0x1B53 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x190A SWAP3 SWAP2 SWAP1 PUSH2 0x25EC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE SWAP1 POP PUSH2 0x195D DUP6 DUP3 PUSH2 0x1B53 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 DUP2 ADD MLOAD PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x40 MLOAD PUSH32 0x5C3E976000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x5C3E9760 SWAP2 PUSH2 0x19B5 SWAP2 PUSH1 0x4 ADD PUSH2 0x2683 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x19E3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1A0B SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1F36 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH32 0x1AAA46EB73FAF88E395BA771B10025A89B519744844021FF4F442B53AC6D190 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1A47 SWAP2 SWAP1 PUSH2 0x2605 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A60 DUP3 PUSH2 0x1445 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD CALLER SWAP2 SWAP1 PUSH32 0x71DADC36A9A359DE148D456696AB20ACF1980B6EAC0E727F21A9925BE8CF159 SWAP1 PUSH2 0x1A98 SWAP1 DUP7 SWAP1 PUSH2 0x2A93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x1AE6 JUMPI INVALID JUMPDEST DUP3 SLOAD PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x1AF6 JUMPI INVALID JUMPDEST EQ PUSH2 0x12EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x275A JUMP JUMPDEST DUP2 SLOAD DUP2 SWAP1 DUP4 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x1B2B JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x190A SWAP3 SWAP2 SWAP1 PUSH2 0x25EC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP6 MLOAD PUSH1 0x20 DUP8 ADD PUSH1 0x0 DUP10 GAS CALL DUP1 ISZERO PUSH2 0x1B94 JUMPI RETURNDATASIZE DUP1 ISZERO PUSH2 0x1B81 JUMPI PUSH1 0x20 DUP2 EQ PUSH2 0x1B8A JUMPI PUSH2 0x1B92 JUMP JUMPDEST PUSH1 0x1 SWAP4 POP PUSH2 0x1B92 JUMP JUMPDEST PUSH1 0x1 DUP4 MLOAD EQ SWAP4 POP JUMPDEST POP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP2 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x3BD DUP2 PUSH2 0x2B8D JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1BF2 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1C05 PUSH2 0x1C00 DUP3 PUSH2 0x2B19 JUMP JUMPDEST PUSH2 0x2AF2 JUMP JUMPDEST DUP2 DUP2 MSTORE SWAP2 POP PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP5 DUP2 ADD PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1C9C JUMPI DUP2 CALLDATALOAD DUP8 ADD PUSH1 0x60 DUP1 PUSH1 0x1F NOT DUP4 DUP13 SUB ADD SLT ISZERO PUSH2 0x1C37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C40 DUP2 PUSH2 0x2AF2 JUMP JUMPDEST DUP6 DUP4 ADD CALLDATALOAD PUSH2 0x1C4D DUP2 PUSH2 0x2B8D JUMP JUMPDEST DUP2 MSTORE PUSH1 0x40 DUP4 DUP2 ADD CALLDATALOAD DUP8 DUP4 ADD MSTORE DUP3 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C80 DUP14 DUP10 DUP4 DUP9 ADD ADD PUSH2 0x1CBF JUMP JUMPDEST SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP7 MSTORE POP POP SWAP3 DUP3 ADD SWAP3 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1C16 JUMP JUMPDEST POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1CCF JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1CDD PUSH2 0x1C00 DUP3 PUSH2 0x2B39 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1CF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH1 0x0 SWAP1 DUP3 ADD PUSH1 0x20 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D2D JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1D37 PUSH1 0x40 PUSH2 0x2AF2 JUMP JUMPDEST SWAP1 POP DUP2 CALLDATALOAD PUSH2 0x1D44 DUP2 PUSH2 0x2B8D JUMP JUMPDEST DUP1 DUP3 MSTORE POP PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D6A JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1D74 PUSH1 0xC0 PUSH2 0x2AF2 JUMP JUMPDEST SWAP1 POP DUP2 CALLDATALOAD DUP2 MSTORE PUSH2 0x1D87 DUP4 PUSH1 0x20 DUP5 ADD PUSH2 0x1D1C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1D99 DUP4 PUSH1 0x60 DUP5 ADD PUSH2 0x1D1C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1DAB DUP4 PUSH1 0xA0 DUP5 ADD PUSH2 0x1D1C JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xE0 DUP3 ADD CALLDATALOAD PUSH2 0x1DBE DUP2 PUSH2 0x2B8D JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x100 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DEA DUP5 DUP3 DUP6 ADD PUSH2 0x1CBF JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E07 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1E11 PUSH1 0x40 PUSH2 0x2AF2 JUMP JUMPDEST SWAP1 POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1E2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD PUSH1 0xC0 DUP2 DUP8 SUB SLT ISZERO PUSH2 0x1E3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E48 PUSH1 0xC0 PUSH2 0x2AF2 JUMP JUMPDEST SWAP3 POP DUP1 CALLDATALOAD DUP4 MSTORE PUSH1 0x20 DUP2 ADD CALLDATALOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1E65 DUP7 PUSH1 0x40 DUP4 ADD PUSH2 0x1BD7 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1E77 DUP7 PUSH1 0x60 DUP4 ADD PUSH2 0x1BD7 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP2 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0x1E8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E9A DUP8 DUP3 DUP5 ADD PUSH2 0x1BE2 JUMP JUMPDEST PUSH1 0x80 DUP6 ADD MSTORE POP PUSH1 0xA0 DUP2 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0x1EB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EBE DUP8 DUP3 DUP5 ADD PUSH2 0x1CBF JUMP JUMPDEST PUSH1 0xA0 DUP6 ADD MSTORE POP POP SWAP1 DUP3 MSTORE PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x1EDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EE8 DUP5 DUP3 DUP6 ADD PUSH2 0x1D58 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F08 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 MLOAD PUSH2 0x1F13 DUP2 PUSH2 0x2B8D JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH2 0x1F24 DUP2 PUSH2 0x2B8D JUMP JUMPDEST DUP1 SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F48 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F5E JUMPI DUP3 DUP4 REVERT JUMPDEST DUP1 DUP5 ADD DUP6 PUSH1 0x1F DUP3 ADD SLT PUSH2 0x1F6F JUMPI DUP4 DUP5 REVERT JUMPDEST DUP1 MLOAD SWAP2 POP PUSH2 0x1F7F PUSH2 0x1C00 DUP4 PUSH2 0x2B19 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP4 DUP2 ADD SWAP1 DUP3 DUP6 ADD DUP7 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1FEE JUMPI DUP2 MLOAD DUP6 ADD DUP11 PUSH1 0x3F DUP3 ADD SLT PUSH2 0x1FA5 JUMPI DUP9 DUP10 REVERT JUMPDEST DUP8 DUP2 ADD MLOAD PUSH2 0x1FB5 PUSH2 0x1C00 DUP3 PUSH2 0x2B39 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x40 DUP14 DUP2 DUP5 DUP7 ADD ADD GT ISZERO PUSH2 0x1FCA JUMPI DUP12 DUP13 REVERT JUMPDEST PUSH2 0x1FD9 DUP4 DUP13 DUP5 ADD DUP4 DUP8 ADD PUSH2 0x2B5D JUMP JUMPDEST POP DUP7 MSTORE POP POP SWAP3 DUP7 ADD SWAP3 SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1F8B JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x200E JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2024 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP1 DUP5 ADD DUP6 PUSH1 0x1F DUP3 ADD SLT PUSH2 0x2035 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP2 POP PUSH2 0x2045 PUSH2 0x1C00 DUP4 PUSH2 0x2B19 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP4 DUP2 ADD SWAP1 DUP3 DUP6 ADD PUSH1 0x60 DUP1 DUP7 MUL DUP6 ADD DUP8 ADD DUP11 LT ISZERO PUSH2 0x2063 JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP5 POP JUMPDEST DUP6 DUP6 LT ISZERO PUSH2 0x1FEE JUMPI DUP1 DUP3 DUP12 SUB SLT ISZERO PUSH2 0x207D JUMPI DUP8 DUP9 REVERT JUMPDEST PUSH2 0x2086 DUP2 PUSH2 0x2AF2 JUMP JUMPDEST PUSH2 0x2090 DUP12 DUP5 PUSH2 0x1D0D JUMP JUMPDEST DUP2 MSTORE PUSH2 0x209E DUP12 DUP10 DUP6 ADD PUSH2 0x1CA7 JUMP JUMPDEST DUP9 DUP3 ADD MSTORE PUSH1 0x40 PUSH2 0x20B0 DUP13 DUP3 DUP7 ADD PUSH2 0x1BD7 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE DUP5 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP3 DUP7 ADD SWAP3 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2067 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20DB JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x20F6 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2114 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x2120 DUP8 DUP4 DUP9 ADD PUSH2 0x1D58 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2135 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x2142 DUP7 DUP3 DUP8 ADD PUSH2 0x1CBF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x215D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xFA7 DUP2 PUSH2 0x2BA5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x217A JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2185 DUP2 PUSH2 0x2BA5 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2195 DUP2 PUSH2 0x2B8D JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21B2 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x21BD DUP2 PUSH2 0x2B8D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21DC JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21F2 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x143D DUP5 DUP3 DUP6 ADD PUSH2 0x1D58 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x220F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2225 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x143D DUP5 DUP3 DUP6 ADD PUSH2 0x1DF6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2243 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x225A JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x2266 DUP7 DUP4 DUP8 ADD PUSH2 0x1DF6 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x227B JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x2288 DUP6 DUP3 DUP7 ADD PUSH2 0x1CBF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22A4 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22BA JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x22C6 DUP6 DUP3 DUP7 ADD PUSH2 0x1DF6 JUMP JUMPDEST SWAP6 PUSH1 0x20 SWAP5 SWAP1 SWAP5 ADD CALLDATALOAD SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22E6 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2302 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2320 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP8 ADD DUP9 PUSH1 0x1F DUP3 ADD SLT PUSH2 0x2331 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP3 POP DUP2 DUP4 GT ISZERO PUSH2 0x2341 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP5 DUP4 ADD ADD GT ISZERO PUSH2 0x2352 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH1 0x20 ADD SWAP5 POP SWAP1 SWAP3 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x236D JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x238A JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD DUP1 DUP2 SWAP7 POP DUP3 DUP5 MUL DUP2 ADD SWAP2 POP DUP3 DUP7 ADD DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2408 JUMPI DUP3 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH1 0x60 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 MLOAD AND DUP7 MSTORE DUP7 DUP3 ADD MLOAD DUP8 DUP8 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD DUP3 DUP3 DUP10 ADD MSTORE PUSH2 0x23F2 DUP4 DUP10 ADD DUP3 PUSH2 0x2415 JUMP JUMPDEST SWAP13 DUP10 ADD SWAP13 SWAP8 POP POP POP SWAP3 DUP7 ADD SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0x23B5 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x242D DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2B5D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 SWAP1 DUP2 ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x2474 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x2441 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x2487 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x2441 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x249A PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0x2441 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x80 DUP5 ADD MLOAD AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD DUP2 PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x195D DUP3 DUP7 ADD DUP3 PUSH2 0x2415 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP4 MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x40 DUP7 ADD MSTORE DUP1 PUSH1 0x60 DUP6 ADD MLOAD AND PUSH1 0x60 DUP7 ADD MSTORE POP POP PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0xC0 PUSH1 0x80 DUP6 ADD MSTORE PUSH2 0x2512 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x2399 JUMP JUMPDEST PUSH1 0xA0 DUP5 ADD MLOAD SWAP2 POP DUP5 DUP2 SUB PUSH1 0xA0 DUP7 ADD MSTORE PUSH2 0x195D DUP2 DUP4 PUSH2 0x2415 JUMP JUMPDEST PUSH32 0x657263336B2D7631000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP4 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x8 DUP5 ADD MSTORE PUSH1 0x1C DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3C DUP3 ADD MSTORE PUSH1 0x5C ADD SWAP1 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 SWAP5 DUP6 SHL DUP2 AND PUSH1 0x20 DUP8 ADD MSTORE SWAP3 SWAP1 SWAP4 SHL SWAP1 SWAP2 AND PUSH1 0x34 DUP5 ADD MSTORE PUSH1 0x48 DUP4 ADD MSTORE PUSH1 0x68 DUP3 ADD MSTORE PUSH1 0x88 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 POP PUSH1 0x40 DUP5 DUP3 MUL DUP8 ADD ADD SWAP3 POP DUP4 DUP8 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2676 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC0 DUP9 DUP7 SUB ADD DUP5 MSTORE PUSH2 0x2664 DUP6 DUP4 MLOAD PUSH2 0x2415 JUMP JUMPDEST SWAP5 POP SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x262A JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0xFA7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2399 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 MSTORE PUSH2 0x26D2 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2415 JUMP JUMPDEST SWAP1 POP DUP3 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 MSTORE PUSH2 0x26F6 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2415 JUMP JUMPDEST SWAP1 POP PUSH2 0xFA7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2441 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 MSTORE PUSH2 0x2718 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x2415 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x143D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2441 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x7 DUP4 LT PUSH2 0x273B JUMPI INVALID JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x143D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2415 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH32 0x71756575653A2062616420737461746500000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH32 0x71756575653A2062616420636F6E666967000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x9 SWAP1 DUP3 ADD MSTORE PUSH32 0x61636C3A20617574680000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH32 0x71756575653A20626164206E6F6E636500000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH32 0x71756575653A206261642064656C617900000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH32 0x71756575653A2062616420726573657400000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH32 0x71756575653A20626164206665652070756C6C00000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH32 0x71756575653A20626164207375626D6974746572000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH32 0x71756575653A2065766964656E63650000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH32 0x61636C3A2066726F7A656E000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH32 0x71756575653A2062616420617070726F76650000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH32 0x71756575653A206261642073656E6420746F6B656E0000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH32 0x71756575653A2077616974206D6F726500000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH32 0x71756575653A206261642067657420746F6B656E000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH32 0x61636C3A2062616420667265657A650000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0xFA7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2459 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD PUSH1 0x40 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2AC2 PUSH1 0x60 DUP5 ADD DUP3 PUSH2 0x24C6 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP PUSH1 0x1F NOT DUP5 DUP3 SUB ADD PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x195D DUP2 DUP4 PUSH2 0x2459 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 MSTORE PUSH2 0x26F6 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x24C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2B11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2B2F JUMPI DUP1 DUP2 REVERT JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2B4F JUMPI DUP1 DUP2 REVERT JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2B78 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2B60 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2B87 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2BA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x2BA2 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xD7 PUSH8 0xF59EECF7443EC6DD PUSH29 0x5D6A380D4533E255A757860EDD0DFE15A53A883E64736F6C6343000608 STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E SWAP15 0x5C RETURNDATACOPY 0xEB 0x2A STATICCALL 0xFC DUP9 PUSH3 0xB70388 OR PUSH5 0xD09690ED19 RETURNDATASIZE 0xEF 0x4E PUSH25 0x2B3C24520D9D610664736F6C63430006080033000000000000 ",
            "sourceMap": "193:232:2:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;193:232:2;;;;;;;"
          },
          "deployedBytecode": {
            "immutableReferences": {},
            "linkReferences": {},
            "object": "60806040523480156200001157600080fd5b50600436106200002e5760003560e01c8063328867ce1462000033575b600080fd5b6200004a6200004436600462000119565b62000062565b6040516200005991906200034e565b60405180910390f35b600082826040516200007490620000a8565b6200008192919062000270565b604051809103906000f0801580156200009e573d6000803e3d6000fd5b5090505b92915050565b613129806200039883390190565b803573ffffffffffffffffffffffffffffffffffffffff81168114620000a257600080fd5b600060408284031215620000ed578081fd5b620000f960406200036f565b9050620001078383620000b6565b81526020820135602082015292915050565b600080604083850312156200012c578182fd5b620001388484620000b6565b915060208084013567ffffffffffffffff8082111562000156578384fd5b81860161012081890312156200016a578485fd5b6200017660c06200036f565b9250803583526200018a88858301620000db565b848401526200019d8860608301620000db565b6040840152620001b18860a08301620000db565b6060840152620001c58860e08301620000b6565b608084015261010081013582811115620001dd578586fd5b80820189601f820112620001ef578687fd5b803592508383111562000200578687fd5b6200021486601f19601f860116016200036f565b935082845289868483010111156200022a578687fd5b8286820187860137505081019092019290925260a082015290939092509050565b805173ffffffffffffffffffffffffffffffffffffffff168252602090810151910152565b600073ffffffffffffffffffffffffffffffffffffffff808516835260206040818501528451604085015280850151620002ae60608601826200024b565b506040850151620002c360a08601826200024b565b506060850151620002d860e08601826200024b565b5060808501516101208382168187015260a08701519350806101408701525050815180610160860152835b8181101562000322578381018301518682016101800152820162000303565b8181111562000335578461018083880101525b50601f01601f1916939093016101800195945050505050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b60405181810167ffffffffffffffff811182821017156200038f57600080fd5b60405291905056fe60806040523480156200001157600080fd5b5060405162003129380380620031298339810160408190526200003491620002c6565b816200005163161b7d8160e21b826001600160e01b036200006f16565b5062000066816001600160e01b036200013f16565b50505062000528565b62000083826001600160e01b03620001a116565b15620000ac5760405162461bcd60e51b8152600401620000a390620003c5565b60405180910390fd5b6001600160a01b03811660011415620000d95760405162461bcd60e51b8152600401620000a390620003ea565b6001600160e01b031982166000818152602081815260408083206001600160a01b0386168085529252808320805460ff19166001179055519092339290917f1c3ac05008a204aef806fb7b0a907c496ed107cd989825beb9df5f8094c2eabd9190a45050565b60006200015782620001ca60201b620014451760201c565b60018190556040513391907f071dadc36a9a359de148d456696ab20acf1980b6eac0e727f21a9925be8cf159906200019190869062000413565b60405180910390a3505060015490565b6001600160e01b0319166000908152602081815260408083206001845290915290205460ff1690565b600081604051602001620001df919062000413565b604051602081830303815290604052805190602001209050919050565b80516001600160a01b03811681146200021457600080fd5b92915050565b600082601f8301126200022b578081fd5b81516001600160401b0381111562000241578182fd5b62000256601f8201601f1916602001620004b5565b91508082528360208285010111156200026e57600080fd5b62000281816020840160208601620004dc565b5092915050565b6000604082840312156200029a578081fd5b620002a66040620004b5565b9050620002b48383620001fc565b81526020820151602082015292915050565b60008060408385031215620002d9578182fd5b8251620002e6816200050f565b60208401519092506001600160401b038082111562000303578283fd5b818501610120818803121562000317578384fd5b6200032360c0620004b5565b92508051835262000338876020830162000288565b60208401526200034c876060830162000288565b6040840152620003608760a0830162000288565b6060840152620003748760e08301620001fc565b6080840152610100810151828111156200038c578485fd5b6200039a888284016200021a565b60a0850152505050809150509250929050565b80516001600160a01b03168252602090810151910152565b6020808252600b908201526a30b1b61d10333937bd32b760a91b604082015260600190565b6020808252600f908201526e61636c3a2062616420667265657a6560881b604082015260600190565b600060208252825160208301526020830151620004346040840182620003ad565b506040830151620004496080840182620003ad565b5060608301516200045e60c0840182620003ad565b5060808301516001600160a01b031661010083015260a083015161012080840152805161014084018190526101606200049e8282870160208601620004dc565b80601f19601f840116860101935050505092915050565b6040518181016001600160401b0381118282101715620004d457600080fd5b604052919050565b60005b83811015620004f9578181015183820152602001620004df565b8381111562000509576000848401525b50505050565b6001600160a01b03811681146200052557600080fd5b50565b612bf180620005386000396000f3fe608060405234801561001057600080fd5b506004361061018d5760003560e01c80637e8c7f08116100e3578063affed0e01161008c578063c8182af011610066578063c8182af014610344578063e1f1176d14610364578063ecb6cba61461036c5761018d565b8063affed0e014610316578063b9e9823f1461031e578063bdf9a726146103315761018d565b8063a0e975cb116100bd578063a0e975cb146102dd578063a157a10d146102f0578063aa455d9f146103035761018d565b80637e8c7f08146102a2578063869cb6b5146102b757806396fc8abd146102ca5761018d565b80633b1c5fc6116101455780635c44c0a71161011f5780635c44c0a71461025c5780635decc1901461026f5780637c10dea6146102825761018d565b80633b1c5fc614610223578063495a98251461023657806358849734146102495761018d565b80631c47671b116101765780631c47671b146101db57806325ddcbe0146101f0578063311a6c56146102105761018d565b806301ffc9a7146101925780630494812a146101bb575b600080fd5b6101a56101a036600461214c565b61037f565b6040516101b29190612696565b60405180910390f35b6101ce6101c9366004612292565b6103c3565b6040516101b29190612605565b6101ee6101e9366004611ffc565b6104eb565b005b6102036101fe3660046121fe565b610637565b6040516101b291906126a1565b6101ee61021e366004612378565b610837565b6102036102313660046121a0565b6108eb565b6101a561024436600461214c565b610908565b6101ee610257366004612168565b610931565b6101ee61026a3660046121fe565b6109c6565b61020361027d366004612231565b610a7c565b6102956102903660046120ca565b610f0b565b6040516101b2919061272d565b6102aa610f20565b6040516101b291906126aa565b6101ce6102c53660046121fe565b610f2b565b6101a56102d8366004612168565b610fae565b6101ee6102eb3660046120e2565b610fcb565b6101ee6102fe366004612168565b6110f6565b6102036103113660046121cb565b61118b565b610203611238565b6101ee61032c3660046122ed565b61123e565b6101ee61033f36600461214c565b611256565b6103576103523660046120ca565b6112ee565b6040516101b291906125b4565b610203611309565b6101ce61037a3660046121fe565b61130f565b60006001600160e01b031982167f88f3ee690000000000000000000000000000000000000000000000000000000014806103bd57506103bd82611475565b92915050565b606060006103d0846114b3565b9050600260008281526003602052604090205460ff1660068111156103f157fe5b141561045e578360200151608001516001600160a01b0316638bb04875846040518263ffffffff1660e01b815260040161042b91906126a1565b600060405180830381600087803b15801561044557600080fd5b505af1158015610459573d6000803e3d6000fd5b505050505b6000600360008381526003602052604090205460ff16600681111561047f57fe5b14905080156104985761049185610f2b565b92506104a1565b6104a1856109c6565b336001600160a01b0316827f027d8a5d945eb361475964ed2c71b8332b27af2d630ab5daf829d67afd2584e6836040516104db9190612696565b60405180910390a3505092915050565b3360009081527f8dafb0716dbdc5222f4b82fa3495e71054f736c761c542cfff5cf37ceef75d46602052604090205463161b7d8160e21b9060ff168061055a57506001600160e01b031981166000908152602081815260408083206001600160a01b03845290915290205460ff165b61057f5760405162461bcd60e51b8152600401610576906127c8565b60405180910390fd5b60005b825181101561063257610593611b9e565b83828151811061059f57fe5b60200260200101519050600060028111156105b657fe5b815160028111156105c357fe5b14156105e0576105db816020015182604001516114d2565b610629565b6001815160028111156105ef57fe5b1415610607576105db81602001518260400151611588565b60028151600281111561061657fe5b1415610629576106298160200151611611565b50600101610582565b505050565b3360009081527f7376c9dbe282dfb2c566016189e1800fbabc0b60b4cc83fc4490ac5761cad4a360205260408120547f25ddcbe0000000000000000000000000000000000000000000000000000000009060ff16806106bf57506001600160e01b031981166000908152602081815260408083206001600160a01b03845290915290205460ff165b6106db5760405162461bcd60e51b8152600401610576906127c8565b6002805460010190819055835151146107065760405162461bcd60e51b8152600401610576906127ff565b60006107158460200151611445565b905060015481146107385760405162461bcd60e51b815260040161057690612791565b8360200151600001514201846000015160200151101561076a5760405162461bcd60e51b815260040161057690612836565b8351604001516001600160a01b031633146107975760405162461bcd60e51b8152600401610576906128db565b6107ad6107a78560000151611691565b826116ed565b60008181526003602052604081209194506107d09190600163ffffffff61172216565b6107d8611bc0565b5060208085015101516107f1813363ffffffff61173616565b837f6e9c0ffd9c4371af6a9201d5257f695ebc739bd3459e9c7d477eca6768eec359866000015183604051610827929190612adf565b60405180910390a2505050919050565b336000818152600560209081526040808320868452909152902054610884600260048514610866576004610869565b60035b6000848152600360205260409020919063ffffffff61172216565b6001600160a01b038216600081815260056020908152604080832088845290915280822091909155518591907f56c8631a8915c0d362dbe57a61215fdde954f73f81c8a3a1f55572fb015207b1906108dd9087906126a1565b60405180910390a350505050565b600560209081526000928352604080842090915290825290205481565b6001600160e01b0319166000908152602081815260408083206001845290915290205460ff1690565b3360009081527f8dafb0716dbdc5222f4b82fa3495e71054f736c761c542cfff5cf37ceef75d46602052604090205463161b7d8160e21b9060ff16806109a057506001600160e01b031981166000908152602081815260408083206001600160a01b03845290915290205460ff165b6109bc5760405162461bcd60e51b8152600401610576906127c8565b6106328383611588565b60006109d1826114b3565b60008181526003602052604090209091506109f5906004600563ffffffff61172216565b60008181526004602090815260409091205483820151909101516001600160a01b0390911690610a2b908263ffffffff6117d916565b602083015160400151610a44908263ffffffff6117d916565b50600090815260046020526040902080547fffffffffffffffffffffffff000000000000000000000000000000000000000016905550565b3360009081527f5437ee176e989cb18b4abe7ef424bff2f7930e07ce482532fead6c9578d92c4060205260408120547f5decc190000000000000000000000000000000000000000000000000000000009060ff1680610b0457506001600160e01b031981166000908152602081815260408083206001600160a01b03845290915290205460ff165b610b205760405162461bcd60e51b8152600401610576906127c8565b6000610b2b856114b3565b600081815260046020908152604080832080547fffffffffffffffffffffffff0000000000000000000000000000000000000000163317905560039091529020909150610b81906001600263ffffffff61172216565b610b89611bc0565b50602085015160400151610ba3813363ffffffff61173616565b600086602001516080015190506000806000836001600160a01b0316637b751b9e6040518163ffffffff1660e01b815260040160606040518083038186803b158015610bee57600080fd5b505afa158015610c02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c269190611ef4565b91945092509050610c486001600160a01b03831633308463ffffffff61186d16565b610c645760405162461bcd60e51b8152600401610576906128a4565b610c7e6001600160a01b038316848363ffffffff6118eb16565b610c9a5760405162461bcd60e51b815260040161057690612980565b836001600160a01b031663c13517e160028c604051602001610cbc9190612aa6565b6040516020818303038152906040526040518363ffffffff1660e01b8152600401610ce8929190612741565b602060405180830381600087803b158015610d0257600080fd5b505af1158015610d16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3a91906122d5565b9750610d576001600160a01b03831684600063ffffffff6118eb16565b610d735760405162461bcd60e51b81526004016105769061286d565b8960000151604001516001600160a01b031688856001600160a01b03167f1988e4d59f596ba1a2d81e06874704a62502463ae6d99154f923e5edeb98392b8d6000015160a001516001604051610dca9291906126bf565b60405180910390a4336001600160a01b031688856001600160a01b03167f1988e4d59f596ba1a2d81e06874704a62502463ae6d99154f923e5edeb98392b8c6001604051610e199291906126bf565b60405180910390a46040517f7e9adccf0000000000000000000000000000000000000000000000000000000081526001600160a01b03851690637e9adccf90610e66908b906004016126a1565b600060405180830381600087803b158015610e8057600080fd5b505af1158015610e94573d6000803e3d6000fd5b5050506001600160a01b03851660009081526005602090815260408083208c8452909152908190208890555133915087907f429df837eb45b6713f725a0d3e57db939fd7dd7d58bb3cd967fa37091572db9f90610ef6908d908d908b90612705565b60405180910390a35050505050505092915050565b60036020526000908152604090205460ff1681565b63161b7d8160e21b81565b60606000610f38836114b3565b6000818152600360208190526040909120919250610f5e9190600663ffffffff61172216565b8251604001516020808501510151610f7b9163ffffffff6117d916565b8251604090810151602085015190910151610f9b9163ffffffff6117d916565b8251610fa79082611966565b9392505050565b600060208181529281526040808220909352908152205460ff1681565b3360009081527fce37bbbe099ffd049703ce63e8a4278f5d5ae5a7014d70676a104bd77e95a79560205260409020547fa0e975cb000000000000000000000000000000000000000000000000000000009060ff168061105357506001600160e01b031981166000908152602081815260408083206001600160a01b03845290915290205460ff165b61106f5760405162461bcd60e51b8152600401610576906127c8565b60006110838561107e86611445565b6116ed565b60008181526003602052604090209091506110a7906001600563ffffffff61172216565b336001600160a01b0316817fe703b40b97f0bda26ba2d80e910ebe89254d4fe6f13b7ee83dfea563eb73d64f8587606001516040516110e79291906126e3565b60405180910390a35050505050565b3360009081527f8dafb0716dbdc5222f4b82fa3495e71054f736c761c542cfff5cf37ceef75d46602052604090205463161b7d8160e21b9060ff168061116557506001600160e01b031981166000908152602081815260408083206001600160a01b03845290915290205460ff165b6111815760405162461bcd60e51b8152600401610576906127c8565b61063283836114d2565b3360009081527fe3acc4f5503a4661ff3859143dae57eb84d6eeec076606b992576354b60a6b5060205260408120547faa455d9f000000000000000000000000000000000000000000000000000000009060ff168061121357506001600160e01b031981166000908152602081815260408083206001600160a01b03845290915290205460ff165b61122f5760405162461bcd60e51b8152600401610576906127c8565b610fa783611a55565b60025481565b60405162461bcd60e51b815260040161057690612912565b3360009081527f8dafb0716dbdc5222f4b82fa3495e71054f736c761c542cfff5cf37ceef75d46602052604090205463161b7d8160e21b9060ff16806112c557506001600160e01b031981166000908152602081815260408083206001600160a01b03845290915290205460ff165b6112e15760405162461bcd60e51b8152600401610576906127c8565b6112ea82611611565b5050565b6004602052600090815260409020546001600160a01b031681565b60015481565b3360009081527f6e99e897067e581d1efa914c0236e290a87c4b08af2b020491ef6c4ea862aa0460205260409020546060907fecb6cba6000000000000000000000000000000000000000000000000000000009060ff168061139a57506001600160e01b031981166000908152602081815260408083206001600160a01b03845290915290205460ff165b6113b65760405162461bcd60e51b8152600401610576906127c8565b82516020015167ffffffffffffffff421610156113e55760405162461bcd60e51b8152600401610576906129ee565b60006113f0846114b3565b6000818152600360205260409020909150611414906001600663ffffffff61172216565b83516040015160208086015101516114319163ffffffff6117d916565b835161143d9082611966565b949350505050565b6000816040516020016114589190612a93565b604051602081830303815290604052805190602001209050919050565b60006001600160e01b031982167f9abf68a80000000000000000000000000000000000000000000000000000000014806103bd57506103bd82611aa8565b60006103bd6114c58360000151611691565b61107e8460200151611445565b6114db82610908565b156114f85760405162461bcd60e51b815260040161057690612949565b6001600160a01b038116600114156115225760405162461bcd60e51b815260040161057690612a5c565b6001600160e01b031982166000818152602081815260408083206001600160a01b0386168085529252808320805460ff19166001179055519092339290917f1c3ac05008a204aef806fb7b0a907c496ed107cd989825beb9df5f8094c2eabd9190a45050565b61159182610908565b156115ae5760405162461bcd60e51b815260040161057690612949565b6001600160e01b031982166000818152602081815260408083206001600160a01b0386168085529252808320805460ff19169055519092339290917f682f2c466c1e9f6883eb72cbced01373e1cb18b05ae5c8bc04dc73d73e29f8cd9190a45050565b61161a81610908565b156116375760405162461bcd60e51b815260040161057690612949565b6001600160e01b0319811660008181526020818152604080832060018085529252808320805460ff1916909217909155513392917f049c6b8b07a879425742523fa80f8ffb25e39ad518c93a5896a0df19518397e591a350565b600081600001518260400151836060015184608001516040516020016116b79190612683565b604051602081830303815290604052805190602001208560a001518051906020012060405160200161145895949392919061257b565b60003083836040516020016117049392919061252b565b60405160208183030381529060405280519060200120905092915050565b61172c8383611ada565b6106328382611b13565b6020820151156112ea5781516020830151611765906001600160a01b038316908490339063ffffffff61186d16565b6117815760405162461bcd60e51b815260040161057690612a25565b816001600160a01b031683600001516001600160a01b03167f484decdc1e9549e1866295f6f86c889ded3f7de410e7488a7a415978589dc8fd85602001516040516117cc91906126a1565b60405180910390a3505050565b6020820151156112ea5781516020830151611806906001600160a01b03831690849063ffffffff611b3416565b6118225760405162461bcd60e51b8152600401610576906129b7565b816001600160a01b031683600001516001600160a01b03167f2d87480f50083e2b2759522a8fdda59802650a8055e609a7772cf70c07748f5285602001516040516117cc91906126a1565b600060606323b872dd60e01b85858560405160240161188e939291906125c8565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b03199093169290921790915290506118e18682611b53565b9695505050505050565b6000606063095ea7b360e01b848460405160240161190a9291906125ec565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b031990931692909217909152905061195d8582611b53565b95945050505050565b60608281015160808401516040517f5c3e97600000000000000000000000000000000000000000000000000000000081526001600160a01b0390921691635c3e9760916119b591600401612683565b600060405180830381600087803b1580156119cf57600080fd5b505af11580156119e3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611a0b9190810190611f36565b9050336001600160a01b0316827f01aaa46eb73faf88e395ba771b10025a89b519744844021ff4f442b53ac6d19083604051611a479190612605565b60405180910390a392915050565b6000611a6082611445565b60018190556040513391907f071dadc36a9a359de148d456696ab20acf1980b6eac0e727f21a9925be8cf15990611a98908690612a93565b60405180910390a3505060015490565b6001600160e01b031981167f01ffc9a70000000000000000000000000000000000000000000000000000000014919050565b806006811115611ae657fe5b825460ff166006811115611af657fe5b146112ea5760405162461bcd60e51b81526004016105769061275a565b81548190839060ff19166001836006811115611b2b57fe5b02179055505050565b6000606063a9059cbb60e01b848460405160240161190a9291906125ec565b6000806040516020818551602087016000895af18015611b94573d8015611b815760208114611b8a57611b92565b60019350611b92565b600183511493505b505b5090949350505050565b6040805160608101909152806000815260006020820181905260409091015290565b604080518082019091526000808252602082015290565b80356103bd81612b8d565b600082601f830112611bf2578081fd5b8135611c05611c0082612b19565b612af2565b818152915060208083019084810160005b84811015611c9c5781358701606080601f19838c03011215611c3757600080fd5b611c4081612af2565b85830135611c4d81612b8d565b8152604083810135878301528284013567ffffffffffffffff811115611c7257600080fd5b611c808d8983880101611cbf565b9183019190915250865250509282019290820190600101611c16565b505050505092915050565b80356001600160e01b0319811681146103bd57600080fd5b600082601f830112611ccf578081fd5b8135611cdd611c0082612b39565b9150808252836020828501011115611cf457600080fd5b8060208401602084013760009082016020015292915050565b8035600381106103bd57600080fd5b600060408284031215611d2d578081fd5b611d376040612af2565b90508135611d4481612b8d565b808252506020820135602082015292915050565b60006101208284031215611d6a578081fd5b611d7460c0612af2565b905081358152611d878360208401611d1c565b6020820152611d998360608401611d1c565b6040820152611dab8360a08401611d1c565b606082015260e0820135611dbe81612b8d565b608082015261010082013567ffffffffffffffff811115611dde57600080fd5b611dea84828501611cbf565b60a08301525092915050565b600060408284031215611e07578081fd5b611e116040612af2565b9050813567ffffffffffffffff80821115611e2b57600080fd5b81840160c08187031215611e3e57600080fd5b611e4860c0612af2565b92508035835260208101356020840152611e658660408301611bd7565b6040840152611e778660608301611bd7565b6060840152608081013582811115611e8e57600080fd5b611e9a87828401611be2565b60808501525060a081013582811115611eb257600080fd5b611ebe87828401611cbf565b60a0850152505090825260208301359080821115611edb57600080fd5b50611ee884828501611d58565b60208301525092915050565b600080600060608486031215611f08578283fd5b8351611f1381612b8d565b6020850151909350611f2481612b8d565b80925050604084015190509250925092565b60006020808385031215611f48578182fd5b825167ffffffffffffffff811115611f5e578283fd5b80840185601f820112611f6f578384fd5b80519150611f7f611c0083612b19565b82815283810190828501865b85811015611fee57815185018a603f820112611fa5578889fd5b87810151611fb5611c0082612b39565b81815260408d81848601011115611fca578b8cfd5b611fd9838c8401838701612b5d565b50865250509286019290860190600101611f8b565b509098975050505050505050565b6000602080838503121561200e578182fd5b823567ffffffffffffffff811115612024578283fd5b80840185601f820112612035578384fd5b80359150612045611c0083612b19565b828152838101908285016060808602850187018a1015612063578788fd5b8794505b85851015611fee5780828b03121561207d578788fd5b61208681612af2565b6120908b84611d0d565b815261209e8b898501611ca7565b8882015260406120b08c828601611bd7565b908201528452600194909401939286019290810190612067565b6000602082840312156120db578081fd5b5035919050565b6000806000606084860312156120f6578081fd5b83359250602084013567ffffffffffffffff80821115612114578283fd5b61212087838801611d58565b93506040860135915080821115612135578283fd5b5061214286828701611cbf565b9150509250925092565b60006020828403121561215d578081fd5b8135610fa781612ba5565b6000806040838503121561217a578182fd5b823561218581612ba5565b9150602083013561219581612b8d565b809150509250929050565b600080604083850312156121b2578182fd5b82356121bd81612b8d565b946020939093013593505050565b6000602082840312156121dc578081fd5b813567ffffffffffffffff8111156121f2578182fd5b61143d84828501611d58565b60006020828403121561220f578081fd5b813567ffffffffffffffff811115612225578182fd5b61143d84828501611df6565b60008060408385031215612243578182fd5b823567ffffffffffffffff8082111561225a578384fd5b61226686838701611df6565b9350602085013591508082111561227b578283fd5b5061228885828601611cbf565b9150509250929050565b600080604083850312156122a4578182fd5b823567ffffffffffffffff8111156122ba578283fd5b6122c685828601611df6565b95602094909401359450505050565b6000602082840312156122e6578081fd5b5051919050565b60008060008060608587031215612302578182fd5b84359350602085013567ffffffffffffffff80821115612320578384fd5b81870188601f820112612331578485fd5b8035925081831115612341578485fd5b886020848301011115612352578485fd5b6020019450909250506040850135801515811461236d578182fd5b939692955090935050565b6000806040838503121561238a578182fd5b50508035926020909101359150565b6000815180845260208085018081965082840281019150828601855b85811015612408578284038952815160606001600160a01b038251168652868201518787015260408083015182828901526123f283890182612415565b9c89019c975050509286019250506001016123b5565b5091979650505050505050565b6000815180845261242d816020860160208601612b5d565b601f01601f19169290920160200192915050565b80516001600160a01b03168252602090810151910152565b60006101208251845260208301516124746020860182612441565b5060408301516124876060860182612441565b50606083015161249a60a0860182612441565b506001600160a01b0360808401511660e085015260a08301518161010086015261195d82860182612415565b6000815183526020820151602084015260408201516001600160a01b0380821660408601528060608501511660608601525050608082015160c0608085015261251260c0850182612399565b60a0840151915084810360a086015261195d8183612415565b7f657263336b2d7631000000000000000000000000000000000000000000000000815260609390931b6bffffffffffffffffffffffff19166008840152601c830191909152603c820152605c0190565b9485526bffffffffffffffffffffffff19606094851b811660208701529290931b90911660348401526048830152606882015260880190565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6000602080830181845280855180835260408601915060408482028701019250838701855b82811015612676577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452612664858351612415565b9450928501929085019060010161262a565b5092979650505050505050565b600060208252610fa76020830184612399565b901515815260200190565b90815260200190565b6001600160e01b031991909116815260200190565b6000604082526126d26040830185612415565b905082151560208301529392505050565b6000606082526126f66060830185612415565b9050610fa76020830184612441565b6000608082526127186080830186612415565b905083602083015261143d6040830184612441565b602081016007831061273b57fe5b91905290565b60008382526040602083015261143d6040830184612415565b60208082526010908201527f71756575653a2062616420737461746500000000000000000000000000000000604082015260600190565b60208082526011908201527f71756575653a2062616420636f6e666967000000000000000000000000000000604082015260600190565b60208082526009908201527f61636c3a20617574680000000000000000000000000000000000000000000000604082015260600190565b60208082526010908201527f71756575653a20626164206e6f6e636500000000000000000000000000000000604082015260600190565b60208082526010908201527f71756575653a206261642064656c617900000000000000000000000000000000604082015260600190565b60208082526010908201527f71756575653a2062616420726573657400000000000000000000000000000000604082015260600190565b60208082526013908201527f71756575653a20626164206665652070756c6c00000000000000000000000000604082015260600190565b60208082526014908201527f71756575653a20626164207375626d6974746572000000000000000000000000604082015260600190565b6020808252600f908201527f71756575653a2065766964656e63650000000000000000000000000000000000604082015260600190565b6020808252600b908201527f61636c3a2066726f7a656e000000000000000000000000000000000000000000604082015260600190565b60208082526012908201527f71756575653a2062616420617070726f76650000000000000000000000000000604082015260600190565b60208082526015908201527f71756575653a206261642073656e6420746f6b656e0000000000000000000000604082015260600190565b60208082526010908201527f71756575653a2077616974206d6f726500000000000000000000000000000000604082015260600190565b60208082526014908201527f71756575653a206261642067657420746f6b656e000000000000000000000000604082015260600190565b6020808252600f908201527f61636c3a2062616420667265657a650000000000000000000000000000000000604082015260600190565b600060208252610fa76020830184612459565b600060208252825160406020840152612ac260608401826124c6565b60208501519150601f1984820301604085015261195d8183612459565b6000606082526126f660608301856124c6565b60405181810167ffffffffffffffff81118282101715612b1157600080fd5b604052919050565b600067ffffffffffffffff821115612b2f578081fd5b5060209081020190565b600067ffffffffffffffff821115612b4f578081fd5b50601f01601f191660200190565b60005b83811015612b78578181015183820152602001612b60565b83811115612b87576000848401525b50505050565b6001600160a01b0381168114612ba257600080fd5b50565b6001600160e01b031981168114612ba257600080fdfea2646970667358221220b4d767f59eecf7443ec6dd7c5d6a380d4533e255a757860edd0dfe15a53a883e64736f6c63430006080033a26469706673582212201e9e5c3eeb2afafc8862b703881764d09690ed193def4e782b3c24520d9d610664736f6c63430006080033",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0x2E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x328867CE EQ PUSH3 0x33 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x4A PUSH3 0x44 CALLDATASIZE PUSH1 0x4 PUSH3 0x119 JUMP JUMPDEST PUSH3 0x62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x59 SWAP2 SWAP1 PUSH3 0x34E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH3 0x74 SWAP1 PUSH3 0xA8 JUMP JUMPDEST PUSH3 0x81 SWAP3 SWAP2 SWAP1 PUSH3 0x270 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x9E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3129 DUP1 PUSH3 0x398 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH3 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xED JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH3 0xF9 PUSH1 0x40 PUSH3 0x36F JUMP JUMPDEST SWAP1 POP PUSH3 0x107 DUP4 DUP4 PUSH3 0xB6 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x12C JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH3 0x138 DUP5 DUP5 PUSH3 0xB6 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP1 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH3 0x156 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP7 ADD PUSH2 0x120 DUP2 DUP10 SUB SLT ISZERO PUSH3 0x16A JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH3 0x176 PUSH1 0xC0 PUSH3 0x36F JUMP JUMPDEST SWAP3 POP DUP1 CALLDATALOAD DUP4 MSTORE PUSH3 0x18A DUP9 DUP6 DUP4 ADD PUSH3 0xDB JUMP JUMPDEST DUP5 DUP5 ADD MSTORE PUSH3 0x19D DUP9 PUSH1 0x60 DUP4 ADD PUSH3 0xDB JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE PUSH3 0x1B1 DUP9 PUSH1 0xA0 DUP4 ADD PUSH3 0xDB JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH3 0x1C5 DUP9 PUSH1 0xE0 DUP4 ADD PUSH3 0xB6 JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x100 DUP2 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH3 0x1DD JUMPI DUP6 DUP7 REVERT JUMPDEST DUP1 DUP3 ADD DUP10 PUSH1 0x1F DUP3 ADD SLT PUSH3 0x1EF JUMPI DUP7 DUP8 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP3 POP DUP4 DUP4 GT ISZERO PUSH3 0x200 JUMPI DUP7 DUP8 REVERT JUMPDEST PUSH3 0x214 DUP7 PUSH1 0x1F NOT PUSH1 0x1F DUP7 ADD AND ADD PUSH3 0x36F JUMP JUMPDEST SWAP4 POP DUP3 DUP5 MSTORE DUP10 DUP7 DUP5 DUP4 ADD ADD GT ISZERO PUSH3 0x22A JUMPI DUP7 DUP8 REVERT JUMPDEST DUP3 DUP7 DUP3 ADD DUP8 DUP7 ADD CALLDATACOPY POP POP DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP3 ADD MSTORE SWAP1 SWAP4 SWAP1 SWAP3 POP SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 MSTORE PUSH1 0x20 SWAP1 DUP2 ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND DUP4 MSTORE PUSH1 0x20 PUSH1 0x40 DUP2 DUP6 ADD MSTORE DUP5 MLOAD PUSH1 0x40 DUP6 ADD MSTORE DUP1 DUP6 ADD MLOAD PUSH3 0x2AE PUSH1 0x60 DUP7 ADD DUP3 PUSH3 0x24B JUMP JUMPDEST POP PUSH1 0x40 DUP6 ADD MLOAD PUSH3 0x2C3 PUSH1 0xA0 DUP7 ADD DUP3 PUSH3 0x24B JUMP JUMPDEST POP PUSH1 0x60 DUP6 ADD MLOAD PUSH3 0x2D8 PUSH1 0xE0 DUP7 ADD DUP3 PUSH3 0x24B JUMP JUMPDEST POP PUSH1 0x80 DUP6 ADD MLOAD PUSH2 0x120 DUP4 DUP3 AND DUP2 DUP8 ADD MSTORE PUSH1 0xA0 DUP8 ADD MLOAD SWAP4 POP DUP1 PUSH2 0x140 DUP8 ADD MSTORE POP POP DUP2 MLOAD DUP1 PUSH2 0x160 DUP7 ADD MSTORE DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x322 JUMPI DUP4 DUP2 ADD DUP4 ADD MLOAD DUP7 DUP3 ADD PUSH2 0x180 ADD MSTORE DUP3 ADD PUSH3 0x303 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH3 0x335 JUMPI DUP5 PUSH2 0x180 DUP4 DUP9 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP4 SWAP1 SWAP4 ADD PUSH2 0x180 ADD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH3 0x38F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3129 CODESIZE SUB DUP1 PUSH3 0x3129 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x2C6 JUMP JUMPDEST DUP2 PUSH3 0x51 PUSH4 0x161B7D81 PUSH1 0xE2 SHL DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH3 0x6F AND JUMP JUMPDEST POP PUSH3 0x66 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH3 0x13F AND JUMP JUMPDEST POP POP POP PUSH3 0x528 JUMP JUMPDEST PUSH3 0x83 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH3 0x1A1 AND JUMP JUMPDEST ISZERO PUSH3 0xAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA3 SWAP1 PUSH3 0x3C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 EQ ISZERO PUSH3 0xD9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA3 SWAP1 PUSH3 0x3EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD SWAP1 SWAP3 CALLER SWAP3 SWAP1 SWAP2 PUSH32 0x1C3AC05008A204AEF806FB7B0A907C496ED107CD989825BEB9DF5F8094C2EABD SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x157 DUP3 PUSH3 0x1CA PUSH1 0x20 SHL PUSH3 0x1445 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD CALLER SWAP2 SWAP1 PUSH32 0x71DADC36A9A359DE148D456696AB20ACF1980B6EAC0E727F21A9925BE8CF159 SWAP1 PUSH3 0x191 SWAP1 DUP7 SWAP1 PUSH3 0x413 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x1DF SWAP2 SWAP1 PUSH3 0x413 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x22B JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x241 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH3 0x256 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH3 0x4B5 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH3 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x281 DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD PUSH3 0x4DC JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x29A JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH3 0x2A6 PUSH1 0x40 PUSH3 0x4B5 JUMP JUMPDEST SWAP1 POP PUSH3 0x2B4 DUP4 DUP4 PUSH3 0x1FC JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP3 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2D9 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH3 0x2E6 DUP2 PUSH3 0x50F JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x303 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP6 ADD PUSH2 0x120 DUP2 DUP9 SUB SLT ISZERO PUSH3 0x317 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH3 0x323 PUSH1 0xC0 PUSH3 0x4B5 JUMP JUMPDEST SWAP3 POP DUP1 MLOAD DUP4 MSTORE PUSH3 0x338 DUP8 PUSH1 0x20 DUP4 ADD PUSH3 0x288 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE PUSH3 0x34C DUP8 PUSH1 0x60 DUP4 ADD PUSH3 0x288 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE PUSH3 0x360 DUP8 PUSH1 0xA0 DUP4 ADD PUSH3 0x288 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH3 0x374 DUP8 PUSH1 0xE0 DUP4 ADD PUSH3 0x1FC JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD DUP3 DUP2 GT ISZERO PUSH3 0x38C JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH3 0x39A DUP9 DUP3 DUP5 ADD PUSH3 0x21A JUMP JUMPDEST PUSH1 0xA0 DUP6 ADD MSTORE POP POP POP DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 SWAP1 DUP2 ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x30B1B61D10333937BD32B7 PUSH1 0xA9 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x61636C3A2062616420667265657A65 PUSH1 0x88 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH3 0x434 PUSH1 0x40 DUP5 ADD DUP3 PUSH3 0x3AD JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH3 0x449 PUSH1 0x80 DUP5 ADD DUP3 PUSH3 0x3AD JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH3 0x45E PUSH1 0xC0 DUP5 ADD DUP3 PUSH3 0x3AD JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x100 DUP4 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x120 DUP1 DUP5 ADD MSTORE DUP1 MLOAD PUSH2 0x140 DUP5 ADD DUP2 SWAP1 MSTORE PUSH2 0x160 PUSH3 0x49E DUP3 DUP3 DUP8 ADD PUSH1 0x20 DUP7 ADD PUSH3 0x4DC JUMP JUMPDEST DUP1 PUSH1 0x1F NOT PUSH1 0x1F DUP5 ADD AND DUP7 ADD ADD SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH3 0x4D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x4F9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x4DF JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x509 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x525 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2BF1 DUP1 PUSH3 0x538 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E8C7F08 GT PUSH2 0xE3 JUMPI DUP1 PUSH4 0xAFFED0E0 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xC8182AF0 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xC8182AF0 EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0xE1F1176D EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0xECB6CBA6 EQ PUSH2 0x36C JUMPI PUSH2 0x18D JUMP JUMPDEST DUP1 PUSH4 0xAFFED0E0 EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0xB9E9823F EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0xBDF9A726 EQ PUSH2 0x331 JUMPI PUSH2 0x18D JUMP JUMPDEST DUP1 PUSH4 0xA0E975CB GT PUSH2 0xBD JUMPI DUP1 PUSH4 0xA0E975CB EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0xA157A10D EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0xAA455D9F EQ PUSH2 0x303 JUMPI PUSH2 0x18D JUMP JUMPDEST DUP1 PUSH4 0x7E8C7F08 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x869CB6B5 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x96FC8ABD EQ PUSH2 0x2CA JUMPI PUSH2 0x18D JUMP JUMPDEST DUP1 PUSH4 0x3B1C5FC6 GT PUSH2 0x145 JUMPI DUP1 PUSH4 0x5C44C0A7 GT PUSH2 0x11F JUMPI DUP1 PUSH4 0x5C44C0A7 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x5DECC190 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x7C10DEA6 EQ PUSH2 0x282 JUMPI PUSH2 0x18D JUMP JUMPDEST DUP1 PUSH4 0x3B1C5FC6 EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x495A9825 EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x58849734 EQ PUSH2 0x249 JUMPI PUSH2 0x18D JUMP JUMPDEST DUP1 PUSH4 0x1C47671B GT PUSH2 0x176 JUMPI DUP1 PUSH4 0x1C47671B EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x25DDCBE0 EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x311A6C56 EQ PUSH2 0x210 JUMPI PUSH2 0x18D JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x494812A EQ PUSH2 0x1BB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A5 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x214C JUMP JUMPDEST PUSH2 0x37F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x2696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2292 JUMP JUMPDEST PUSH2 0x3C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x2605 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x1E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FFC JUMP JUMPDEST PUSH2 0x4EB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x203 PUSH2 0x1FE CALLDATASIZE PUSH1 0x4 PUSH2 0x21FE JUMP JUMPDEST PUSH2 0x637 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x26A1 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x21E CALLDATASIZE PUSH1 0x4 PUSH2 0x2378 JUMP JUMPDEST PUSH2 0x837 JUMP JUMPDEST PUSH2 0x203 PUSH2 0x231 CALLDATASIZE PUSH1 0x4 PUSH2 0x21A0 JUMP JUMPDEST PUSH2 0x8EB JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x244 CALLDATASIZE PUSH1 0x4 PUSH2 0x214C JUMP JUMPDEST PUSH2 0x908 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x257 CALLDATASIZE PUSH1 0x4 PUSH2 0x2168 JUMP JUMPDEST PUSH2 0x931 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x26A CALLDATASIZE PUSH1 0x4 PUSH2 0x21FE JUMP JUMPDEST PUSH2 0x9C6 JUMP JUMPDEST PUSH2 0x203 PUSH2 0x27D CALLDATASIZE PUSH1 0x4 PUSH2 0x2231 JUMP JUMPDEST PUSH2 0xA7C JUMP JUMPDEST PUSH2 0x295 PUSH2 0x290 CALLDATASIZE PUSH1 0x4 PUSH2 0x20CA JUMP JUMPDEST PUSH2 0xF0B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x272D JUMP JUMPDEST PUSH2 0x2AA PUSH2 0xF20 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x26AA JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x2C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x21FE JUMP JUMPDEST PUSH2 0xF2B JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x2D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2168 JUMP JUMPDEST PUSH2 0xFAE JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x2EB CALLDATASIZE PUSH1 0x4 PUSH2 0x20E2 JUMP JUMPDEST PUSH2 0xFCB JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x2FE CALLDATASIZE PUSH1 0x4 PUSH2 0x2168 JUMP JUMPDEST PUSH2 0x10F6 JUMP JUMPDEST PUSH2 0x203 PUSH2 0x311 CALLDATASIZE PUSH1 0x4 PUSH2 0x21CB JUMP JUMPDEST PUSH2 0x118B JUMP JUMPDEST PUSH2 0x203 PUSH2 0x1238 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x32C CALLDATASIZE PUSH1 0x4 PUSH2 0x22ED JUMP JUMPDEST PUSH2 0x123E JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x33F CALLDATASIZE PUSH1 0x4 PUSH2 0x214C JUMP JUMPDEST PUSH2 0x1256 JUMP JUMPDEST PUSH2 0x357 PUSH2 0x352 CALLDATASIZE PUSH1 0x4 PUSH2 0x20CA JUMP JUMPDEST PUSH2 0x12EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x25B4 JUMP JUMPDEST PUSH2 0x203 PUSH2 0x1309 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x37A CALLDATASIZE PUSH1 0x4 PUSH2 0x21FE JUMP JUMPDEST PUSH2 0x130F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0x88F3EE6900000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x3BD JUMPI POP PUSH2 0x3BD DUP3 PUSH2 0x1475 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x3D0 DUP5 PUSH2 0x14B3 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x3F1 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x45E JUMPI DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x80 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8BB04875 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42B SWAP2 SWAP1 PUSH2 0x26A1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x445 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x459 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x47F JUMPI INVALID JUMPDEST EQ SWAP1 POP DUP1 ISZERO PUSH2 0x498 JUMPI PUSH2 0x491 DUP6 PUSH2 0xF2B JUMP JUMPDEST SWAP3 POP PUSH2 0x4A1 JUMP JUMPDEST PUSH2 0x4A1 DUP6 PUSH2 0x9C6 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH32 0x27D8A5D945EB361475964ED2C71B8332B27AF2D630AB5DAF829D67AFD2584E6 DUP4 PUSH1 0x40 MLOAD PUSH2 0x4DB SWAP2 SWAP1 PUSH2 0x2696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x8DAFB0716DBDC5222F4B82FA3495E71054F736C761C542CFFF5CF37CEEF75D46 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0x161B7D81 PUSH1 0xE2 SHL SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x55A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x57F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x632 JUMPI PUSH2 0x593 PUSH2 0x1B9E JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x59F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x5B6 JUMPI INVALID JUMPDEST DUP2 MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x5C3 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x5E0 JUMPI PUSH2 0x5DB DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0x14D2 JUMP JUMPDEST PUSH2 0x629 JUMP JUMPDEST PUSH1 0x1 DUP2 MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x5EF JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x607 JUMPI PUSH2 0x5DB DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0x1588 JUMP JUMPDEST PUSH1 0x2 DUP2 MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x616 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x629 JUMPI PUSH2 0x629 DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0x1611 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x582 JUMP JUMPDEST POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x7376C9DBE282DFB2C566016189E1800FBABC0B60B4CC83FC4490AC5761CAD4A3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH32 0x25DDCBE000000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x6BF JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x6DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 DUP2 SWAP1 SSTORE DUP4 MLOAD MLOAD EQ PUSH2 0x706 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x27FF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x715 DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0x1445 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0x738 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x2791 JUMP JUMPDEST DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x0 ADD MLOAD TIMESTAMP ADD DUP5 PUSH1 0x0 ADD MLOAD PUSH1 0x20 ADD MLOAD LT ISZERO PUSH2 0x76A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x2836 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x797 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x28DB JUMP JUMPDEST PUSH2 0x7AD PUSH2 0x7A7 DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x1691 JUMP JUMPDEST DUP3 PUSH2 0x16ED JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP5 POP PUSH2 0x7D0 SWAP2 SWAP1 PUSH1 0x1 PUSH4 0xFFFFFFFF PUSH2 0x1722 AND JUMP JUMPDEST PUSH2 0x7D8 PUSH2 0x1BC0 JUMP JUMPDEST POP PUSH1 0x20 DUP1 DUP6 ADD MLOAD ADD MLOAD PUSH2 0x7F1 DUP2 CALLER PUSH4 0xFFFFFFFF PUSH2 0x1736 AND JUMP JUMPDEST DUP4 PUSH32 0x6E9C0FFD9C4371AF6A9201D5257F695EBC739BD3459E9C7D477ECA6768EEC359 DUP7 PUSH1 0x0 ADD MLOAD DUP4 PUSH1 0x40 MLOAD PUSH2 0x827 SWAP3 SWAP2 SWAP1 PUSH2 0x2ADF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x884 PUSH1 0x2 PUSH1 0x4 DUP6 EQ PUSH2 0x866 JUMPI PUSH1 0x4 PUSH2 0x869 JUMP JUMPDEST PUSH1 0x3 JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1722 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE MLOAD DUP6 SWAP2 SWAP1 PUSH32 0x56C8631A8915C0D362DBE57A61215FDDE954F73F81C8A3A1F55572FB015207B1 SWAP1 PUSH2 0x8DD SWAP1 DUP8 SWAP1 PUSH2 0x26A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x8DAFB0716DBDC5222F4B82FA3495E71054F736C761C542CFFF5CF37CEEF75D46 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0x161B7D81 PUSH1 0xE2 SHL SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x9A0 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x9BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH2 0x632 DUP4 DUP4 PUSH2 0x1588 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D1 DUP3 PUSH2 0x14B3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 SWAP2 POP PUSH2 0x9F5 SWAP1 PUSH1 0x4 PUSH1 0x5 PUSH4 0xFFFFFFFF PUSH2 0x1722 AND JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD DUP4 DUP3 ADD MLOAD SWAP1 SWAP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0xA2B SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x17D9 AND JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH2 0xA44 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x17D9 AND JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP1 SSTORE POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x5437EE176E989CB18B4ABE7EF424BFF2F7930E07CE482532FEAD6C9578D92C40 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH32 0x5DECC19000000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0xB04 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0xB20 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB2B DUP6 PUSH2 0x14B3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND CALLER OR SWAP1 SSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SWAP1 SWAP2 POP PUSH2 0xB81 SWAP1 PUSH1 0x1 PUSH1 0x2 PUSH4 0xFFFFFFFF PUSH2 0x1722 AND JUMP JUMPDEST PUSH2 0xB89 PUSH2 0x1BC0 JUMP JUMPDEST POP PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH2 0xBA3 DUP2 CALLER PUSH4 0xFFFFFFFF PUSH2 0x1736 AND JUMP JUMPDEST PUSH1 0x0 DUP7 PUSH1 0x20 ADD MLOAD PUSH1 0x80 ADD MLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7B751B9E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC02 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC26 SWAP2 SWAP1 PUSH2 0x1EF4 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP PUSH2 0xC48 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER ADDRESS DUP5 PUSH4 0xFFFFFFFF PUSH2 0x186D AND JUMP JUMPDEST PUSH2 0xC64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x28A4 JUMP JUMPDEST PUSH2 0xC7E PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP5 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x18EB AND JUMP JUMPDEST PUSH2 0xC9A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x2980 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC13517E1 PUSH1 0x2 DUP13 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCBC SWAP2 SWAP1 PUSH2 0x2AA6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE8 SWAP3 SWAP2 SWAP1 PUSH2 0x2741 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD16 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD3A SWAP2 SWAP1 PUSH2 0x22D5 JUMP JUMPDEST SWAP8 POP PUSH2 0xD57 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP5 PUSH1 0x0 PUSH4 0xFFFFFFFF PUSH2 0x18EB AND JUMP JUMPDEST PUSH2 0xD73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x286D JUMP JUMPDEST DUP10 PUSH1 0x0 ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x1988E4D59F596BA1A2D81E06874704A62502463AE6D99154F923E5EDEB98392B DUP14 PUSH1 0x0 ADD MLOAD PUSH1 0xA0 ADD MLOAD PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xDCA SWAP3 SWAP2 SWAP1 PUSH2 0x26BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x1988E4D59F596BA1A2D81E06874704A62502463AE6D99154F923E5EDEB98392B DUP13 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xE19 SWAP3 SWAP2 SWAP1 PUSH2 0x26BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x40 MLOAD PUSH32 0x7E9ADCCF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x7E9ADCCF SWAP1 PUSH2 0xE66 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x26A1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE94 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP13 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP9 SWAP1 SSTORE MLOAD CALLER SWAP2 POP DUP8 SWAP1 PUSH32 0x429DF837EB45B6713F725A0D3E57DB939FD7DD7D58BB3CD967FA37091572DB9F SWAP1 PUSH2 0xEF6 SWAP1 DUP14 SWAP1 DUP14 SWAP1 DUP12 SWAP1 PUSH2 0x2705 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH4 0x161B7D81 PUSH1 0xE2 SHL DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xF38 DUP4 PUSH2 0x14B3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP3 POP PUSH2 0xF5E SWAP2 SWAP1 PUSH1 0x6 PUSH4 0xFFFFFFFF PUSH2 0x1722 AND JUMP JUMPDEST DUP3 MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x20 DUP1 DUP6 ADD MLOAD ADD MLOAD PUSH2 0xF7B SWAP2 PUSH4 0xFFFFFFFF PUSH2 0x17D9 AND JUMP JUMPDEST DUP3 MLOAD PUSH1 0x40 SWAP1 DUP2 ADD MLOAD PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP2 ADD MLOAD PUSH2 0xF9B SWAP2 PUSH4 0xFFFFFFFF PUSH2 0x17D9 AND JUMP JUMPDEST DUP3 MLOAD PUSH2 0xFA7 SWAP1 DUP3 PUSH2 0x1966 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 DUP2 MSTORE SWAP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 MSTORE SWAP1 DUP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xCE37BBBE099FFD049703CE63E8A4278F5D5AE5A7014D70676A104BD77E95A795 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH32 0xA0E975CB00000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x1053 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x106F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1083 DUP6 PUSH2 0x107E DUP7 PUSH2 0x1445 JUMP JUMPDEST PUSH2 0x16ED JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 SWAP2 POP PUSH2 0x10A7 SWAP1 PUSH1 0x1 PUSH1 0x5 PUSH4 0xFFFFFFFF PUSH2 0x1722 AND JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH32 0xE703B40B97F0BDA26BA2D80E910EBE89254D4FE6F13B7EE83DFEA563EB73D64F DUP6 DUP8 PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x10E7 SWAP3 SWAP2 SWAP1 PUSH2 0x26E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x8DAFB0716DBDC5222F4B82FA3495E71054F736C761C542CFFF5CF37CEEF75D46 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0x161B7D81 PUSH1 0xE2 SHL SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x1165 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x1181 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH2 0x632 DUP4 DUP4 PUSH2 0x14D2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xE3ACC4F5503A4661FF3859143DAE57EB84D6EEEC076606B992576354B60A6B50 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH32 0xAA455D9F00000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x1213 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x122F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH2 0xFA7 DUP4 PUSH2 0x1A55 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x2912 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x8DAFB0716DBDC5222F4B82FA3495E71054F736C761C542CFFF5CF37CEEF75D46 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0x161B7D81 PUSH1 0xE2 SHL SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x12C5 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x12E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH2 0x12EA DUP3 PUSH2 0x1611 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x6E99E897067E581D1EFA914C0236E290A87C4B08AF2B020491EF6C4EA862AA04 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH32 0xECB6CBA600000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x139A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x13B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x20 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF TIMESTAMP AND LT ISZERO PUSH2 0x13E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x29EE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13F0 DUP5 PUSH2 0x14B3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 SWAP2 POP PUSH2 0x1414 SWAP1 PUSH1 0x1 PUSH1 0x6 PUSH4 0xFFFFFFFF PUSH2 0x1722 AND JUMP JUMPDEST DUP4 MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x20 DUP1 DUP7 ADD MLOAD ADD MLOAD PUSH2 0x1431 SWAP2 PUSH4 0xFFFFFFFF PUSH2 0x17D9 AND JUMP JUMPDEST DUP4 MLOAD PUSH2 0x143D SWAP1 DUP3 PUSH2 0x1966 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1458 SWAP2 SWAP1 PUSH2 0x2A93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0x9ABF68A800000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x3BD JUMPI POP PUSH2 0x3BD DUP3 PUSH2 0x1AA8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BD PUSH2 0x14C5 DUP4 PUSH1 0x0 ADD MLOAD PUSH2 0x1691 JUMP JUMPDEST PUSH2 0x107E DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0x1445 JUMP JUMPDEST PUSH2 0x14DB DUP3 PUSH2 0x908 JUMP JUMPDEST ISZERO PUSH2 0x14F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x2949 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 EQ ISZERO PUSH2 0x1522 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x2A5C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD SWAP1 SWAP3 CALLER SWAP3 SWAP1 SWAP2 PUSH32 0x1C3AC05008A204AEF806FB7B0A907C496ED107CD989825BEB9DF5F8094C2EABD SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x1591 DUP3 PUSH2 0x908 JUMP JUMPDEST ISZERO PUSH2 0x15AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x2949 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD SWAP1 SWAP3 CALLER SWAP3 SWAP1 SWAP2 PUSH32 0x682F2C466C1E9F6883EB72CBCED01373E1CB18B05AE5C8BC04DC73D73E29F8CD SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x161A DUP2 PUSH2 0x908 JUMP JUMPDEST ISZERO PUSH2 0x1637 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x2949 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE MLOAD CALLER SWAP3 SWAP2 PUSH32 0x49C6B8B07A879425742523FA80F8FFB25E39AD518C93A5896A0DF19518397E5 SWAP2 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD DUP4 PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x80 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x16B7 SWAP2 SWAP1 PUSH2 0x2683 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP6 PUSH1 0xA0 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1458 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x257B JUMP JUMPDEST PUSH1 0x0 ADDRESS DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1704 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x252B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x172C DUP4 DUP4 PUSH2 0x1ADA JUMP JUMPDEST PUSH2 0x632 DUP4 DUP3 PUSH2 0x1B13 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD ISZERO PUSH2 0x12EA JUMPI DUP2 MLOAD PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x1765 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP5 SWAP1 CALLER SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x186D AND JUMP JUMPDEST PUSH2 0x1781 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x2A25 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x484DECDC1E9549E1866295F6F86C889DED3F7DE410E7488A7A415978589DC8FD DUP6 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x17CC SWAP2 SWAP1 PUSH2 0x26A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD ISZERO PUSH2 0x12EA JUMPI DUP2 MLOAD PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x1806 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP5 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1B34 AND JUMP JUMPDEST PUSH2 0x1822 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x29B7 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x2D87480F50083E2B2759522A8FDDA59802650A8055E609A7772CF70C07748F52 DUP6 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x17CC SWAP2 SWAP1 PUSH2 0x26A1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x188E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25C8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE SWAP1 POP PUSH2 0x18E1 DUP7 DUP3 PUSH2 0x1B53 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x190A SWAP3 SWAP2 SWAP1 PUSH2 0x25EC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE SWAP1 POP PUSH2 0x195D DUP6 DUP3 PUSH2 0x1B53 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 DUP2 ADD MLOAD PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x40 MLOAD PUSH32 0x5C3E976000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x5C3E9760 SWAP2 PUSH2 0x19B5 SWAP2 PUSH1 0x4 ADD PUSH2 0x2683 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x19E3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1A0B SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1F36 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH32 0x1AAA46EB73FAF88E395BA771B10025A89B519744844021FF4F442B53AC6D190 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1A47 SWAP2 SWAP1 PUSH2 0x2605 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A60 DUP3 PUSH2 0x1445 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD CALLER SWAP2 SWAP1 PUSH32 0x71DADC36A9A359DE148D456696AB20ACF1980B6EAC0E727F21A9925BE8CF159 SWAP1 PUSH2 0x1A98 SWAP1 DUP7 SWAP1 PUSH2 0x2A93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x1AE6 JUMPI INVALID JUMPDEST DUP3 SLOAD PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x1AF6 JUMPI INVALID JUMPDEST EQ PUSH2 0x12EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x275A JUMP JUMPDEST DUP2 SLOAD DUP2 SWAP1 DUP4 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x1B2B JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x190A SWAP3 SWAP2 SWAP1 PUSH2 0x25EC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP6 MLOAD PUSH1 0x20 DUP8 ADD PUSH1 0x0 DUP10 GAS CALL DUP1 ISZERO PUSH2 0x1B94 JUMPI RETURNDATASIZE DUP1 ISZERO PUSH2 0x1B81 JUMPI PUSH1 0x20 DUP2 EQ PUSH2 0x1B8A JUMPI PUSH2 0x1B92 JUMP JUMPDEST PUSH1 0x1 SWAP4 POP PUSH2 0x1B92 JUMP JUMPDEST PUSH1 0x1 DUP4 MLOAD EQ SWAP4 POP JUMPDEST POP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP2 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x3BD DUP2 PUSH2 0x2B8D JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1BF2 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1C05 PUSH2 0x1C00 DUP3 PUSH2 0x2B19 JUMP JUMPDEST PUSH2 0x2AF2 JUMP JUMPDEST DUP2 DUP2 MSTORE SWAP2 POP PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP5 DUP2 ADD PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1C9C JUMPI DUP2 CALLDATALOAD DUP8 ADD PUSH1 0x60 DUP1 PUSH1 0x1F NOT DUP4 DUP13 SUB ADD SLT ISZERO PUSH2 0x1C37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C40 DUP2 PUSH2 0x2AF2 JUMP JUMPDEST DUP6 DUP4 ADD CALLDATALOAD PUSH2 0x1C4D DUP2 PUSH2 0x2B8D JUMP JUMPDEST DUP2 MSTORE PUSH1 0x40 DUP4 DUP2 ADD CALLDATALOAD DUP8 DUP4 ADD MSTORE DUP3 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C80 DUP14 DUP10 DUP4 DUP9 ADD ADD PUSH2 0x1CBF JUMP JUMPDEST SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP7 MSTORE POP POP SWAP3 DUP3 ADD SWAP3 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1C16 JUMP JUMPDEST POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1CCF JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1CDD PUSH2 0x1C00 DUP3 PUSH2 0x2B39 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1CF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH1 0x0 SWAP1 DUP3 ADD PUSH1 0x20 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D2D JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1D37 PUSH1 0x40 PUSH2 0x2AF2 JUMP JUMPDEST SWAP1 POP DUP2 CALLDATALOAD PUSH2 0x1D44 DUP2 PUSH2 0x2B8D JUMP JUMPDEST DUP1 DUP3 MSTORE POP PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D6A JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1D74 PUSH1 0xC0 PUSH2 0x2AF2 JUMP JUMPDEST SWAP1 POP DUP2 CALLDATALOAD DUP2 MSTORE PUSH2 0x1D87 DUP4 PUSH1 0x20 DUP5 ADD PUSH2 0x1D1C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1D99 DUP4 PUSH1 0x60 DUP5 ADD PUSH2 0x1D1C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1DAB DUP4 PUSH1 0xA0 DUP5 ADD PUSH2 0x1D1C JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xE0 DUP3 ADD CALLDATALOAD PUSH2 0x1DBE DUP2 PUSH2 0x2B8D JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x100 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DEA DUP5 DUP3 DUP6 ADD PUSH2 0x1CBF JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E07 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1E11 PUSH1 0x40 PUSH2 0x2AF2 JUMP JUMPDEST SWAP1 POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1E2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD PUSH1 0xC0 DUP2 DUP8 SUB SLT ISZERO PUSH2 0x1E3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E48 PUSH1 0xC0 PUSH2 0x2AF2 JUMP JUMPDEST SWAP3 POP DUP1 CALLDATALOAD DUP4 MSTORE PUSH1 0x20 DUP2 ADD CALLDATALOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1E65 DUP7 PUSH1 0x40 DUP4 ADD PUSH2 0x1BD7 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1E77 DUP7 PUSH1 0x60 DUP4 ADD PUSH2 0x1BD7 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP2 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0x1E8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E9A DUP8 DUP3 DUP5 ADD PUSH2 0x1BE2 JUMP JUMPDEST PUSH1 0x80 DUP6 ADD MSTORE POP PUSH1 0xA0 DUP2 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0x1EB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EBE DUP8 DUP3 DUP5 ADD PUSH2 0x1CBF JUMP JUMPDEST PUSH1 0xA0 DUP6 ADD MSTORE POP POP SWAP1 DUP3 MSTORE PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x1EDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EE8 DUP5 DUP3 DUP6 ADD PUSH2 0x1D58 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F08 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 MLOAD PUSH2 0x1F13 DUP2 PUSH2 0x2B8D JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH2 0x1F24 DUP2 PUSH2 0x2B8D JUMP JUMPDEST DUP1 SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F48 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F5E JUMPI DUP3 DUP4 REVERT JUMPDEST DUP1 DUP5 ADD DUP6 PUSH1 0x1F DUP3 ADD SLT PUSH2 0x1F6F JUMPI DUP4 DUP5 REVERT JUMPDEST DUP1 MLOAD SWAP2 POP PUSH2 0x1F7F PUSH2 0x1C00 DUP4 PUSH2 0x2B19 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP4 DUP2 ADD SWAP1 DUP3 DUP6 ADD DUP7 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1FEE JUMPI DUP2 MLOAD DUP6 ADD DUP11 PUSH1 0x3F DUP3 ADD SLT PUSH2 0x1FA5 JUMPI DUP9 DUP10 REVERT JUMPDEST DUP8 DUP2 ADD MLOAD PUSH2 0x1FB5 PUSH2 0x1C00 DUP3 PUSH2 0x2B39 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x40 DUP14 DUP2 DUP5 DUP7 ADD ADD GT ISZERO PUSH2 0x1FCA JUMPI DUP12 DUP13 REVERT JUMPDEST PUSH2 0x1FD9 DUP4 DUP13 DUP5 ADD DUP4 DUP8 ADD PUSH2 0x2B5D JUMP JUMPDEST POP DUP7 MSTORE POP POP SWAP3 DUP7 ADD SWAP3 SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1F8B JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x200E JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2024 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP1 DUP5 ADD DUP6 PUSH1 0x1F DUP3 ADD SLT PUSH2 0x2035 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP2 POP PUSH2 0x2045 PUSH2 0x1C00 DUP4 PUSH2 0x2B19 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP4 DUP2 ADD SWAP1 DUP3 DUP6 ADD PUSH1 0x60 DUP1 DUP7 MUL DUP6 ADD DUP8 ADD DUP11 LT ISZERO PUSH2 0x2063 JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP5 POP JUMPDEST DUP6 DUP6 LT ISZERO PUSH2 0x1FEE JUMPI DUP1 DUP3 DUP12 SUB SLT ISZERO PUSH2 0x207D JUMPI DUP8 DUP9 REVERT JUMPDEST PUSH2 0x2086 DUP2 PUSH2 0x2AF2 JUMP JUMPDEST PUSH2 0x2090 DUP12 DUP5 PUSH2 0x1D0D JUMP JUMPDEST DUP2 MSTORE PUSH2 0x209E DUP12 DUP10 DUP6 ADD PUSH2 0x1CA7 JUMP JUMPDEST DUP9 DUP3 ADD MSTORE PUSH1 0x40 PUSH2 0x20B0 DUP13 DUP3 DUP7 ADD PUSH2 0x1BD7 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE DUP5 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP3 DUP7 ADD SWAP3 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2067 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20DB JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x20F6 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2114 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x2120 DUP8 DUP4 DUP9 ADD PUSH2 0x1D58 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2135 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x2142 DUP7 DUP3 DUP8 ADD PUSH2 0x1CBF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x215D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xFA7 DUP2 PUSH2 0x2BA5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x217A JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2185 DUP2 PUSH2 0x2BA5 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2195 DUP2 PUSH2 0x2B8D JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21B2 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x21BD DUP2 PUSH2 0x2B8D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21DC JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21F2 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x143D DUP5 DUP3 DUP6 ADD PUSH2 0x1D58 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x220F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2225 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x143D DUP5 DUP3 DUP6 ADD PUSH2 0x1DF6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2243 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x225A JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x2266 DUP7 DUP4 DUP8 ADD PUSH2 0x1DF6 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x227B JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x2288 DUP6 DUP3 DUP7 ADD PUSH2 0x1CBF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22A4 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22BA JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x22C6 DUP6 DUP3 DUP7 ADD PUSH2 0x1DF6 JUMP JUMPDEST SWAP6 PUSH1 0x20 SWAP5 SWAP1 SWAP5 ADD CALLDATALOAD SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22E6 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2302 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2320 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP8 ADD DUP9 PUSH1 0x1F DUP3 ADD SLT PUSH2 0x2331 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP3 POP DUP2 DUP4 GT ISZERO PUSH2 0x2341 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP5 DUP4 ADD ADD GT ISZERO PUSH2 0x2352 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH1 0x20 ADD SWAP5 POP SWAP1 SWAP3 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x236D JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x238A JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD DUP1 DUP2 SWAP7 POP DUP3 DUP5 MUL DUP2 ADD SWAP2 POP DUP3 DUP7 ADD DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2408 JUMPI DUP3 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH1 0x60 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 MLOAD AND DUP7 MSTORE DUP7 DUP3 ADD MLOAD DUP8 DUP8 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD DUP3 DUP3 DUP10 ADD MSTORE PUSH2 0x23F2 DUP4 DUP10 ADD DUP3 PUSH2 0x2415 JUMP JUMPDEST SWAP13 DUP10 ADD SWAP13 SWAP8 POP POP POP SWAP3 DUP7 ADD SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0x23B5 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x242D DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2B5D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 SWAP1 DUP2 ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x2474 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x2441 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x2487 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x2441 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x249A PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0x2441 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x80 DUP5 ADD MLOAD AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD DUP2 PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x195D DUP3 DUP7 ADD DUP3 PUSH2 0x2415 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP4 MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x40 DUP7 ADD MSTORE DUP1 PUSH1 0x60 DUP6 ADD MLOAD AND PUSH1 0x60 DUP7 ADD MSTORE POP POP PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0xC0 PUSH1 0x80 DUP6 ADD MSTORE PUSH2 0x2512 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x2399 JUMP JUMPDEST PUSH1 0xA0 DUP5 ADD MLOAD SWAP2 POP DUP5 DUP2 SUB PUSH1 0xA0 DUP7 ADD MSTORE PUSH2 0x195D DUP2 DUP4 PUSH2 0x2415 JUMP JUMPDEST PUSH32 0x657263336B2D7631000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP4 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x8 DUP5 ADD MSTORE PUSH1 0x1C DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3C DUP3 ADD MSTORE PUSH1 0x5C ADD SWAP1 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 SWAP5 DUP6 SHL DUP2 AND PUSH1 0x20 DUP8 ADD MSTORE SWAP3 SWAP1 SWAP4 SHL SWAP1 SWAP2 AND PUSH1 0x34 DUP5 ADD MSTORE PUSH1 0x48 DUP4 ADD MSTORE PUSH1 0x68 DUP3 ADD MSTORE PUSH1 0x88 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 POP PUSH1 0x40 DUP5 DUP3 MUL DUP8 ADD ADD SWAP3 POP DUP4 DUP8 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2676 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC0 DUP9 DUP7 SUB ADD DUP5 MSTORE PUSH2 0x2664 DUP6 DUP4 MLOAD PUSH2 0x2415 JUMP JUMPDEST SWAP5 POP SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x262A JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0xFA7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2399 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 MSTORE PUSH2 0x26D2 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2415 JUMP JUMPDEST SWAP1 POP DUP3 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 MSTORE PUSH2 0x26F6 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2415 JUMP JUMPDEST SWAP1 POP PUSH2 0xFA7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2441 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 MSTORE PUSH2 0x2718 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x2415 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x143D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2441 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x7 DUP4 LT PUSH2 0x273B JUMPI INVALID JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x143D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2415 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH32 0x71756575653A2062616420737461746500000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH32 0x71756575653A2062616420636F6E666967000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x9 SWAP1 DUP3 ADD MSTORE PUSH32 0x61636C3A20617574680000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH32 0x71756575653A20626164206E6F6E636500000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH32 0x71756575653A206261642064656C617900000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH32 0x71756575653A2062616420726573657400000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH32 0x71756575653A20626164206665652070756C6C00000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH32 0x71756575653A20626164207375626D6974746572000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH32 0x71756575653A2065766964656E63650000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH32 0x61636C3A2066726F7A656E000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH32 0x71756575653A2062616420617070726F76650000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH32 0x71756575653A206261642073656E6420746F6B656E0000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH32 0x71756575653A2077616974206D6F726500000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH32 0x71756575653A206261642067657420746F6B656E000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH32 0x61636C3A2062616420667265657A650000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0xFA7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2459 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD PUSH1 0x40 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2AC2 PUSH1 0x60 DUP5 ADD DUP3 PUSH2 0x24C6 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP PUSH1 0x1F NOT DUP5 DUP3 SUB ADD PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x195D DUP2 DUP4 PUSH2 0x2459 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 MSTORE PUSH2 0x26F6 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x24C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2B11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2B2F JUMPI DUP1 DUP2 REVERT JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2B4F JUMPI DUP1 DUP2 REVERT JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2B78 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2B60 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2B87 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2BA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x2BA2 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xD7 PUSH8 0xF59EECF7443EC6DD PUSH29 0x5D6A380D4533E255A757860EDD0DFE15A53A883E64736F6C6343000608 STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E SWAP15 0x5C RETURNDATACOPY 0xEB 0x2A STATICCALL 0xFC DUP9 PUSH3 0xB70388 OR PUSH5 0xD09690ED19 RETURNDATASIZE 0xEF 0x4E PUSH25 0x2B3C24520D9D610664736F6C63430006080033000000000000 ",
            "sourceMap": "193:232:2:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;193:232:2;;;;;;;;;;;;;;;;12:1:-1;9;2:12;231:192:2;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;334:21;398:8;408:7;378:38;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;378:38:2;371:45;;231:192;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;5:130::-;72:20;;7743:42;7732:54;;8787:35;;8777:2;;8836:1;;8826:12;627:473;;744:4;732:9;727:3;723:19;719:30;716:2;;;-1:-1;;752:12;716:2;780:20;744:4;780:20;;;771:29;;883:49;928:3;904:22;883:49;;;865:16;858:75;996:2;1054:9;1050:22;2484:20;996:2;1015:5;1011:16;1004:75;710:390;;;;;2554:500;;;2699:2;2687:9;2678:7;2674:23;2670:32;2667:2;;;-1:-1;;2705:12;2667:2;2767:53;2812:7;2788:22;2767:53;;;2757:63;;2885:2;;2874:9;2870:18;2857:32;2909:18;;2901:6;2898:30;2895:2;;;-1:-1;;2931:12;2895:2;3021:6;3010:9;3006:22;1252:6;1240:9;1235:3;1231:19;1227:32;1224:2;;;-1:-1;;1262:12;1224:2;1290:20;1305:4;1290:20;;;1281:29;;1423:22;2484:20;1384:16;1377:75;1557:77;1630:3;2885:2;1610:9;1606:22;1557:77;;;2885:2;1543:5;1539:16;1532:103;1741:77;1814:3;1708:2;1794:9;1790:22;1741:77;;;2699:2;1727:5;1723:16;1716:103;1921:77;1994:3;1887;1974:9;1970:22;1921:77;;;1708:2;1907:5;1903:16;1896:103;2098:49;2143:3;2064;2123:9;2119:22;2098:49;;;2091:4;2084:5;2080:16;2073:75;2238:3;2227:9;2223:19;2210:33;2909:18;2255:6;2252:30;2249:2;;;-1:-1;;2285:12;2249:2;2375:6;2364:9;2360:22;244:3;237:4;229:6;225:17;221:27;211:2;;-1:-1;;252:12;211:2;299:6;286:20;272:34;;2909:18;7090:6;7087:30;7084:2;;;-1:-1;;7120:12;7084:2;321:64;2885:2;-1:-1;;237:4;7178:6;7174:17;7170:33;7251:15;321:64;;;312:73;;405:6;398:5;391:21;509:3;2885:2;500:6;433;491:16;;488:25;485:2;;;-1:-1;;516:12;485:2;8274:6;2885:2;433:6;429:17;2885:2;467:5;463:16;8251:30;-1:-1;;8312:16;;;;;8305:27;;;;1887:3;2312:16;;2305:84;2661:393;;2316:5;;-1:-1;2661:393;-1:-1;2661:393;3871:475;4077:23;;7743:42;7732:54;3122:37;;4250:4;4239:16;;;4233:23;4310:14;;5882:37;3983:363;5931:477;;7743:42;;3152:5;7732:54;3129:3;3122:37;6252:2;6134;6252;6241:9;6237:18;6230:48;4647:16;4641:23;6134:2;6123:9;6119:18;5882:37;6252:2;4816:5;4812:16;4806:23;4835:119;4939:14;6123:9;4939:14;4925:12;4835:119;;;;6134:2;5038:5;5034:16;5028:23;5057:119;5161:14;6123:9;5161:14;5147:12;5057:119;;;;4939:14;5255:5;5251:16;5245:23;5274:119;5378:14;6123:9;5378:14;5364:12;5274:119;;;;5476:4;5469:5;5465:16;5459:23;4563:6;7743:42;7652:5;7732:54;4563:6;6123:9;5536:14;3122:37;5161:14;5624:5;5620:16;5614:23;5594:43;;4563:6;5657:16;6123:9;5657:16;5650:40;;;3423:5;7370:12;7516:6;4554:16;6123:9;4554:16;7504:19;-1:-1;8419:101;8433:6;8430:1;8427:13;8419:101;;;8500:11;;;;;8494:18;8481:11;;;;;8474:39;8448:10;;8419:101;;;8535:6;8532:1;8529:13;8526:2;;;-1:-1;8481:11;8591:6;6123:9;8582:16;;8575:27;8526:2;-1:-1;8711:2;8691:14;-1:-1;;8687:28;3570:39;;;;8481:11;3570:39;;6105:303;-1:-1;;;;;6105:303;6415:270;7743:42;7732:54;;;;3716:74;;6566:2;6551:18;;6537:148;6692:256;6754:2;6748:9;6780:17;;;6855:18;6840:34;;6876:22;;;6837:62;6834:2;;;6912:1;;6902:12;6834:2;6754;6921:22;6732:216;;-1:-1;6732:216"
          },
          "methodIdentifiers": {
            "newQueue(address,(uint256,(address,uint256),(address,uint256),(address,uint256),address,bytes))": "328867ce"
          }
        }
      }
    },
    "contracts/OptimisticQueue.sol": {
      "OptimisticQueue": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_aclRoot",
                "type": "address"
              },
              {
                "components": [
                  {
                    "internalType": "uint256",
                    "name": "executionDelay",
                    "type": "uint256"
                  },
                  {
                    "components": [
                      {
                        "internalType": "address",
                        "name": "token",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256",
                        "name": "amount",
                        "type": "uint256"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Collateral",
                    "name": "scheduleDeposit",
                    "type": "tuple"
                  },
                  {
                    "components": [
                      {
                        "internalType": "address",
                        "name": "token",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256",
                        "name": "amount",
                        "type": "uint256"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Collateral",
                    "name": "challengeDeposit",
                    "type": "tuple"
                  },
                  {
                    "components": [
                      {
                        "internalType": "address",
                        "name": "token",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256",
                        "name": "amount",
                        "type": "uint256"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Collateral",
                    "name": "vetoDeposit",
                    "type": "tuple"
                  },
                  {
                    "internalType": "address",
                    "name": "resolver",
                    "type": "address"
                  },
                  {
                    "internalType": "bytes",
                    "name": "rules",
                    "type": "bytes"
                  }
                ],
                "internalType": "struct ERC3000Data.Config",
                "name": "_initialConfig",
                "type": "tuple"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "containerHash",
                "type": "bytes32"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "actor",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "bytes",
                "name": "reason",
                "type": "bytes"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "resolverId",
                "type": "uint256"
              },
              {
                "components": [
                  {
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                  }
                ],
                "indexed": false,
                "internalType": "struct ERC3000Data.Collateral",
                "name": "collateral",
                "type": "tuple"
              }
            ],
            "name": "Challenged",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "containerHash",
                "type": "bytes32"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "actor",
                "type": "address"
              },
              {
                "components": [
                  {
                    "internalType": "uint256",
                    "name": "executionDelay",
                    "type": "uint256"
                  },
                  {
                    "components": [
                      {
                        "internalType": "address",
                        "name": "token",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256",
                        "name": "amount",
                        "type": "uint256"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Collateral",
                    "name": "scheduleDeposit",
                    "type": "tuple"
                  },
                  {
                    "components": [
                      {
                        "internalType": "address",
                        "name": "token",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256",
                        "name": "amount",
                        "type": "uint256"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Collateral",
                    "name": "challengeDeposit",
                    "type": "tuple"
                  },
                  {
                    "components": [
                      {
                        "internalType": "address",
                        "name": "token",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256",
                        "name": "amount",
                        "type": "uint256"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Collateral",
                    "name": "vetoDeposit",
                    "type": "tuple"
                  },
                  {
                    "internalType": "address",
                    "name": "resolver",
                    "type": "address"
                  },
                  {
                    "internalType": "bytes",
                    "name": "rules",
                    "type": "bytes"
                  }
                ],
                "indexed": false,
                "internalType": "struct ERC3000Data.Config",
                "name": "config",
                "type": "tuple"
              }
            ],
            "name": "Configured",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "contract IArbitrator",
                "name": "arbitrator",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "disputeId",
                "type": "uint256"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "submitter",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "bytes",
                "name": "evidence",
                "type": "bytes"
              },
              {
                "indexed": false,
                "internalType": "bool",
                "name": "finished",
                "type": "bool"
              }
            ],
            "name": "EvidenceSubmitted",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "containerHash",
                "type": "bytes32"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "actor",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "bytes[]",
                "name": "execResults",
                "type": "bytes[]"
              }
            ],
            "name": "Executed",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes4",
                "name": "role",
                "type": "bytes4"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "actor",
                "type": "address"
              }
            ],
            "name": "Frozen",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes4",
                "name": "role",
                "type": "bytes4"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "actor",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "who",
                "type": "address"
              }
            ],
            "name": "Granted",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "containerHash",
                "type": "bytes32"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "actor",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "bool",
                "name": "approved",
                "type": "bool"
              }
            ],
            "name": "Resolved",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes4",
                "name": "role",
                "type": "bytes4"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "actor",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "who",
                "type": "address"
              }
            ],
            "name": "Revoked",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "contract IArbitrator",
                "name": "arbitrator",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "disputeId",
                "type": "uint256"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "ruling",
                "type": "uint256"
              }
            ],
            "name": "Ruled",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "containerHash",
                "type": "bytes32"
              },
              {
                "components": [
                  {
                    "internalType": "uint256",
                    "name": "nonce",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "executionTime",
                    "type": "uint256"
                  },
                  {
                    "internalType": "address",
                    "name": "submitter",
                    "type": "address"
                  },
                  {
                    "internalType": "contract IERC3000Executor",
                    "name": "executor",
                    "type": "address"
                  },
                  {
                    "components": [
                      {
                        "internalType": "address",
                        "name": "to",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256",
                        "name": "value",
                        "type": "uint256"
                      },
                      {
                        "internalType": "bytes",
                        "name": "data",
                        "type": "bytes"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Action[]",
                    "name": "actions",
                    "type": "tuple[]"
                  },
                  {
                    "internalType": "bytes",
                    "name": "proof",
                    "type": "bytes"
                  }
                ],
                "indexed": false,
                "internalType": "struct ERC3000Data.Payload",
                "name": "payload",
                "type": "tuple"
              },
              {
                "components": [
                  {
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                  }
                ],
                "indexed": false,
                "internalType": "struct ERC3000Data.Collateral",
                "name": "collateral",
                "type": "tuple"
              }
            ],
            "name": "Scheduled",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "containerHash",
                "type": "bytes32"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "actor",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "bytes",
                "name": "reason",
                "type": "bytes"
              },
              {
                "components": [
                  {
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                  }
                ],
                "indexed": false,
                "internalType": "struct ERC3000Data.Collateral",
                "name": "collateral",
                "type": "tuple"
              }
            ],
            "name": "Vetoed",
            "type": "event"
          },
          {
            "inputs": [],
            "name": "ROOT_ROLE",
            "outputs": [
              {
                "internalType": "bytes4",
                "name": "",
                "type": "bytes4"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "components": [
                  {
                    "internalType": "enum MiniACLData.BulkOp",
                    "name": "op",
                    "type": "uint8"
                  },
                  {
                    "internalType": "bytes4",
                    "name": "role",
                    "type": "bytes4"
                  },
                  {
                    "internalType": "address",
                    "name": "who",
                    "type": "address"
                  }
                ],
                "internalType": "struct MiniACLData.BulkItem[]",
                "name": "items",
                "type": "tuple[]"
              }
            ],
            "name": "bulk",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "components": [
                  {
                    "components": [
                      {
                        "internalType": "uint256",
                        "name": "nonce",
                        "type": "uint256"
                      },
                      {
                        "internalType": "uint256",
                        "name": "executionTime",
                        "type": "uint256"
                      },
                      {
                        "internalType": "address",
                        "name": "submitter",
                        "type": "address"
                      },
                      {
                        "internalType": "contract IERC3000Executor",
                        "name": "executor",
                        "type": "address"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                          },
                          {
                            "internalType": "bytes",
                            "name": "data",
                            "type": "bytes"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Action[]",
                        "name": "actions",
                        "type": "tuple[]"
                      },
                      {
                        "internalType": "bytes",
                        "name": "proof",
                        "type": "bytes"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Payload",
                    "name": "payload",
                    "type": "tuple"
                  },
                  {
                    "components": [
                      {
                        "internalType": "uint256",
                        "name": "executionDelay",
                        "type": "uint256"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Collateral",
                        "name": "scheduleDeposit",
                        "type": "tuple"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Collateral",
                        "name": "challengeDeposit",
                        "type": "tuple"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Collateral",
                        "name": "vetoDeposit",
                        "type": "tuple"
                      },
                      {
                        "internalType": "address",
                        "name": "resolver",
                        "type": "address"
                      },
                      {
                        "internalType": "bytes",
                        "name": "rules",
                        "type": "bytes"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Config",
                    "name": "config",
                    "type": "tuple"
                  }
                ],
                "internalType": "struct ERC3000Data.Container",
                "name": "_container",
                "type": "tuple"
              },
              {
                "internalType": "bytes",
                "name": "_reason",
                "type": "bytes"
              }
            ],
            "name": "challenge",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "disputeId",
                "type": "uint256"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "",
                "type": "bytes32"
              }
            ],
            "name": "challengerCache",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "configHash",
            "outputs": [
              {
                "internalType": "bytes32",
                "name": "",
                "type": "bytes32"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "components": [
                  {
                    "internalType": "uint256",
                    "name": "executionDelay",
                    "type": "uint256"
                  },
                  {
                    "components": [
                      {
                        "internalType": "address",
                        "name": "token",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256",
                        "name": "amount",
                        "type": "uint256"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Collateral",
                    "name": "scheduleDeposit",
                    "type": "tuple"
                  },
                  {
                    "components": [
                      {
                        "internalType": "address",
                        "name": "token",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256",
                        "name": "amount",
                        "type": "uint256"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Collateral",
                    "name": "challengeDeposit",
                    "type": "tuple"
                  },
                  {
                    "components": [
                      {
                        "internalType": "address",
                        "name": "token",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256",
                        "name": "amount",
                        "type": "uint256"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Collateral",
                    "name": "vetoDeposit",
                    "type": "tuple"
                  },
                  {
                    "internalType": "address",
                    "name": "resolver",
                    "type": "address"
                  },
                  {
                    "internalType": "bytes",
                    "name": "rules",
                    "type": "bytes"
                  }
                ],
                "internalType": "struct ERC3000Data.Config",
                "name": "_config",
                "type": "tuple"
              }
            ],
            "name": "configure",
            "outputs": [
              {
                "internalType": "bytes32",
                "name": "",
                "type": "bytes32"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "contract IArbitrator",
                "name": "",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "name": "disputeItemCache",
            "outputs": [
              {
                "internalType": "bytes32",
                "name": "",
                "type": "bytes32"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "components": [
                  {
                    "components": [
                      {
                        "internalType": "uint256",
                        "name": "nonce",
                        "type": "uint256"
                      },
                      {
                        "internalType": "uint256",
                        "name": "executionTime",
                        "type": "uint256"
                      },
                      {
                        "internalType": "address",
                        "name": "submitter",
                        "type": "address"
                      },
                      {
                        "internalType": "contract IERC3000Executor",
                        "name": "executor",
                        "type": "address"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                          },
                          {
                            "internalType": "bytes",
                            "name": "data",
                            "type": "bytes"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Action[]",
                        "name": "actions",
                        "type": "tuple[]"
                      },
                      {
                        "internalType": "bytes",
                        "name": "proof",
                        "type": "bytes"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Payload",
                    "name": "payload",
                    "type": "tuple"
                  },
                  {
                    "components": [
                      {
                        "internalType": "uint256",
                        "name": "executionDelay",
                        "type": "uint256"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Collateral",
                        "name": "scheduleDeposit",
                        "type": "tuple"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Collateral",
                        "name": "challengeDeposit",
                        "type": "tuple"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Collateral",
                        "name": "vetoDeposit",
                        "type": "tuple"
                      },
                      {
                        "internalType": "address",
                        "name": "resolver",
                        "type": "address"
                      },
                      {
                        "internalType": "bytes",
                        "name": "rules",
                        "type": "bytes"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Config",
                    "name": "config",
                    "type": "tuple"
                  }
                ],
                "internalType": "struct ERC3000Data.Container",
                "name": "_container",
                "type": "tuple"
              }
            ],
            "name": "execute",
            "outputs": [
              {
                "internalType": "bytes[]",
                "name": "execResults",
                "type": "bytes[]"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "components": [
                  {
                    "components": [
                      {
                        "internalType": "uint256",
                        "name": "nonce",
                        "type": "uint256"
                      },
                      {
                        "internalType": "uint256",
                        "name": "executionTime",
                        "type": "uint256"
                      },
                      {
                        "internalType": "address",
                        "name": "submitter",
                        "type": "address"
                      },
                      {
                        "internalType": "contract IERC3000Executor",
                        "name": "executor",
                        "type": "address"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                          },
                          {
                            "internalType": "bytes",
                            "name": "data",
                            "type": "bytes"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Action[]",
                        "name": "actions",
                        "type": "tuple[]"
                      },
                      {
                        "internalType": "bytes",
                        "name": "proof",
                        "type": "bytes"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Payload",
                    "name": "payload",
                    "type": "tuple"
                  },
                  {
                    "components": [
                      {
                        "internalType": "uint256",
                        "name": "executionDelay",
                        "type": "uint256"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Collateral",
                        "name": "scheduleDeposit",
                        "type": "tuple"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Collateral",
                        "name": "challengeDeposit",
                        "type": "tuple"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Collateral",
                        "name": "vetoDeposit",
                        "type": "tuple"
                      },
                      {
                        "internalType": "address",
                        "name": "resolver",
                        "type": "address"
                      },
                      {
                        "internalType": "bytes",
                        "name": "rules",
                        "type": "bytes"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Config",
                    "name": "config",
                    "type": "tuple"
                  }
                ],
                "internalType": "struct ERC3000Data.Container",
                "name": "_container",
                "type": "tuple"
              }
            ],
            "name": "executeApproved",
            "outputs": [
              {
                "internalType": "bytes[]",
                "name": "execResults",
                "type": "bytes[]"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes4",
                "name": "_role",
                "type": "bytes4"
              }
            ],
            "name": "freeze",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes4",
                "name": "_role",
                "type": "bytes4"
              },
              {
                "internalType": "address",
                "name": "_who",
                "type": "address"
              }
            ],
            "name": "grant",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes4",
                "name": "_role",
                "type": "bytes4"
              }
            ],
            "name": "isFrozen",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "nonce",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "",
                "type": "bytes32"
              }
            ],
            "name": "queue",
            "outputs": [
              {
                "internalType": "enum OptimisticQueueStateLib.State",
                "name": "state",
                "type": "uint8"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "components": [
                  {
                    "components": [
                      {
                        "internalType": "uint256",
                        "name": "nonce",
                        "type": "uint256"
                      },
                      {
                        "internalType": "uint256",
                        "name": "executionTime",
                        "type": "uint256"
                      },
                      {
                        "internalType": "address",
                        "name": "submitter",
                        "type": "address"
                      },
                      {
                        "internalType": "contract IERC3000Executor",
                        "name": "executor",
                        "type": "address"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                          },
                          {
                            "internalType": "bytes",
                            "name": "data",
                            "type": "bytes"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Action[]",
                        "name": "actions",
                        "type": "tuple[]"
                      },
                      {
                        "internalType": "bytes",
                        "name": "proof",
                        "type": "bytes"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Payload",
                    "name": "payload",
                    "type": "tuple"
                  },
                  {
                    "components": [
                      {
                        "internalType": "uint256",
                        "name": "executionDelay",
                        "type": "uint256"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Collateral",
                        "name": "scheduleDeposit",
                        "type": "tuple"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Collateral",
                        "name": "challengeDeposit",
                        "type": "tuple"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Collateral",
                        "name": "vetoDeposit",
                        "type": "tuple"
                      },
                      {
                        "internalType": "address",
                        "name": "resolver",
                        "type": "address"
                      },
                      {
                        "internalType": "bytes",
                        "name": "rules",
                        "type": "bytes"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Config",
                    "name": "config",
                    "type": "tuple"
                  }
                ],
                "internalType": "struct ERC3000Data.Container",
                "name": "_container",
                "type": "tuple"
              },
              {
                "internalType": "uint256",
                "name": "_resolverId",
                "type": "uint256"
              }
            ],
            "name": "resolve",
            "outputs": [
              {
                "internalType": "bytes[]",
                "name": "execResults",
                "type": "bytes[]"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes4",
                "name": "_role",
                "type": "bytes4"
              },
              {
                "internalType": "address",
                "name": "_who",
                "type": "address"
              }
            ],
            "name": "revoke",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes4",
                "name": "",
                "type": "bytes4"
              },
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "name": "roles",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "_disputeId",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "_ruling",
                "type": "uint256"
              }
            ],
            "name": "rule",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "components": [
                  {
                    "components": [
                      {
                        "internalType": "uint256",
                        "name": "nonce",
                        "type": "uint256"
                      },
                      {
                        "internalType": "uint256",
                        "name": "executionTime",
                        "type": "uint256"
                      },
                      {
                        "internalType": "address",
                        "name": "submitter",
                        "type": "address"
                      },
                      {
                        "internalType": "contract IERC3000Executor",
                        "name": "executor",
                        "type": "address"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                          },
                          {
                            "internalType": "bytes",
                            "name": "data",
                            "type": "bytes"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Action[]",
                        "name": "actions",
                        "type": "tuple[]"
                      },
                      {
                        "internalType": "bytes",
                        "name": "proof",
                        "type": "bytes"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Payload",
                    "name": "payload",
                    "type": "tuple"
                  },
                  {
                    "components": [
                      {
                        "internalType": "uint256",
                        "name": "executionDelay",
                        "type": "uint256"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Collateral",
                        "name": "scheduleDeposit",
                        "type": "tuple"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Collateral",
                        "name": "challengeDeposit",
                        "type": "tuple"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Collateral",
                        "name": "vetoDeposit",
                        "type": "tuple"
                      },
                      {
                        "internalType": "address",
                        "name": "resolver",
                        "type": "address"
                      },
                      {
                        "internalType": "bytes",
                        "name": "rules",
                        "type": "bytes"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Config",
                    "name": "config",
                    "type": "tuple"
                  }
                ],
                "internalType": "struct ERC3000Data.Container",
                "name": "_container",
                "type": "tuple"
              }
            ],
            "name": "schedule",
            "outputs": [
              {
                "internalType": "bytes32",
                "name": "containerHash",
                "type": "bytes32"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "components": [
                  {
                    "components": [
                      {
                        "internalType": "uint256",
                        "name": "nonce",
                        "type": "uint256"
                      },
                      {
                        "internalType": "uint256",
                        "name": "executionTime",
                        "type": "uint256"
                      },
                      {
                        "internalType": "address",
                        "name": "submitter",
                        "type": "address"
                      },
                      {
                        "internalType": "contract IERC3000Executor",
                        "name": "executor",
                        "type": "address"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                          },
                          {
                            "internalType": "bytes",
                            "name": "data",
                            "type": "bytes"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Action[]",
                        "name": "actions",
                        "type": "tuple[]"
                      },
                      {
                        "internalType": "bytes",
                        "name": "proof",
                        "type": "bytes"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Payload",
                    "name": "payload",
                    "type": "tuple"
                  },
                  {
                    "components": [
                      {
                        "internalType": "uint256",
                        "name": "executionDelay",
                        "type": "uint256"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Collateral",
                        "name": "scheduleDeposit",
                        "type": "tuple"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Collateral",
                        "name": "challengeDeposit",
                        "type": "tuple"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Collateral",
                        "name": "vetoDeposit",
                        "type": "tuple"
                      },
                      {
                        "internalType": "address",
                        "name": "resolver",
                        "type": "address"
                      },
                      {
                        "internalType": "bytes",
                        "name": "rules",
                        "type": "bytes"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Config",
                    "name": "config",
                    "type": "tuple"
                  }
                ],
                "internalType": "struct ERC3000Data.Container",
                "name": "_container",
                "type": "tuple"
              }
            ],
            "name": "settleRejection",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              },
              {
                "internalType": "bytes",
                "name": "",
                "type": "bytes"
              },
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "name": "submitEvidence",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes4",
                "name": "_interfaceId",
                "type": "bytes4"
              }
            ],
            "name": "supportsInterface",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "pure",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "_payloadHash",
                "type": "bytes32"
              },
              {
                "components": [
                  {
                    "internalType": "uint256",
                    "name": "executionDelay",
                    "type": "uint256"
                  },
                  {
                    "components": [
                      {
                        "internalType": "address",
                        "name": "token",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256",
                        "name": "amount",
                        "type": "uint256"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Collateral",
                    "name": "scheduleDeposit",
                    "type": "tuple"
                  },
                  {
                    "components": [
                      {
                        "internalType": "address",
                        "name": "token",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256",
                        "name": "amount",
                        "type": "uint256"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Collateral",
                    "name": "challengeDeposit",
                    "type": "tuple"
                  },
                  {
                    "components": [
                      {
                        "internalType": "address",
                        "name": "token",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256",
                        "name": "amount",
                        "type": "uint256"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Collateral",
                    "name": "vetoDeposit",
                    "type": "tuple"
                  },
                  {
                    "internalType": "address",
                    "name": "resolver",
                    "type": "address"
                  },
                  {
                    "internalType": "bytes",
                    "name": "rules",
                    "type": "bytes"
                  }
                ],
                "internalType": "struct ERC3000Data.Config",
                "name": "_config",
                "type": "tuple"
              },
              {
                "internalType": "bytes",
                "name": "_reason",
                "type": "bytes"
              }
            ],
            "name": "veto",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "60806040523480156200001157600080fd5b5060405162003129380380620031298339810160408190526200003491620002c6565b816200005163161b7d8160e21b826001600160e01b036200006f16565b5062000066816001600160e01b036200013f16565b50505062000528565b62000083826001600160e01b03620001a116565b15620000ac5760405162461bcd60e51b8152600401620000a390620003c5565b60405180910390fd5b6001600160a01b03811660011415620000d95760405162461bcd60e51b8152600401620000a390620003ea565b6001600160e01b031982166000818152602081815260408083206001600160a01b0386168085529252808320805460ff19166001179055519092339290917f1c3ac05008a204aef806fb7b0a907c496ed107cd989825beb9df5f8094c2eabd9190a45050565b60006200015782620001ca60201b620014451760201c565b60018190556040513391907f071dadc36a9a359de148d456696ab20acf1980b6eac0e727f21a9925be8cf159906200019190869062000413565b60405180910390a3505060015490565b6001600160e01b0319166000908152602081815260408083206001845290915290205460ff1690565b600081604051602001620001df919062000413565b604051602081830303815290604052805190602001209050919050565b80516001600160a01b03811681146200021457600080fd5b92915050565b600082601f8301126200022b578081fd5b81516001600160401b0381111562000241578182fd5b62000256601f8201601f1916602001620004b5565b91508082528360208285010111156200026e57600080fd5b62000281816020840160208601620004dc565b5092915050565b6000604082840312156200029a578081fd5b620002a66040620004b5565b9050620002b48383620001fc565b81526020820151602082015292915050565b60008060408385031215620002d9578182fd5b8251620002e6816200050f565b60208401519092506001600160401b038082111562000303578283fd5b818501610120818803121562000317578384fd5b6200032360c0620004b5565b92508051835262000338876020830162000288565b60208401526200034c876060830162000288565b6040840152620003608760a0830162000288565b6060840152620003748760e08301620001fc565b6080840152610100810151828111156200038c578485fd5b6200039a888284016200021a565b60a0850152505050809150509250929050565b80516001600160a01b03168252602090810151910152565b6020808252600b908201526a30b1b61d10333937bd32b760a91b604082015260600190565b6020808252600f908201526e61636c3a2062616420667265657a6560881b604082015260600190565b600060208252825160208301526020830151620004346040840182620003ad565b506040830151620004496080840182620003ad565b5060608301516200045e60c0840182620003ad565b5060808301516001600160a01b031661010083015260a083015161012080840152805161014084018190526101606200049e8282870160208601620004dc565b80601f19601f840116860101935050505092915050565b6040518181016001600160401b0381118282101715620004d457600080fd5b604052919050565b60005b83811015620004f9578181015183820152602001620004df565b8381111562000509576000848401525b50505050565b6001600160a01b03811681146200052557600080fd5b50565b612bf180620005386000396000f3fe608060405234801561001057600080fd5b506004361061018d5760003560e01c80637e8c7f08116100e3578063affed0e01161008c578063c8182af011610066578063c8182af014610344578063e1f1176d14610364578063ecb6cba61461036c5761018d565b8063affed0e014610316578063b9e9823f1461031e578063bdf9a726146103315761018d565b8063a0e975cb116100bd578063a0e975cb146102dd578063a157a10d146102f0578063aa455d9f146103035761018d565b80637e8c7f08146102a2578063869cb6b5146102b757806396fc8abd146102ca5761018d565b80633b1c5fc6116101455780635c44c0a71161011f5780635c44c0a71461025c5780635decc1901461026f5780637c10dea6146102825761018d565b80633b1c5fc614610223578063495a98251461023657806358849734146102495761018d565b80631c47671b116101765780631c47671b146101db57806325ddcbe0146101f0578063311a6c56146102105761018d565b806301ffc9a7146101925780630494812a146101bb575b600080fd5b6101a56101a036600461214c565b61037f565b6040516101b29190612696565b60405180910390f35b6101ce6101c9366004612292565b6103c3565b6040516101b29190612605565b6101ee6101e9366004611ffc565b6104eb565b005b6102036101fe3660046121fe565b610637565b6040516101b291906126a1565b6101ee61021e366004612378565b610837565b6102036102313660046121a0565b6108eb565b6101a561024436600461214c565b610908565b6101ee610257366004612168565b610931565b6101ee61026a3660046121fe565b6109c6565b61020361027d366004612231565b610a7c565b6102956102903660046120ca565b610f0b565b6040516101b2919061272d565b6102aa610f20565b6040516101b291906126aa565b6101ce6102c53660046121fe565b610f2b565b6101a56102d8366004612168565b610fae565b6101ee6102eb3660046120e2565b610fcb565b6101ee6102fe366004612168565b6110f6565b6102036103113660046121cb565b61118b565b610203611238565b6101ee61032c3660046122ed565b61123e565b6101ee61033f36600461214c565b611256565b6103576103523660046120ca565b6112ee565b6040516101b291906125b4565b610203611309565b6101ce61037a3660046121fe565b61130f565b60006001600160e01b031982167f88f3ee690000000000000000000000000000000000000000000000000000000014806103bd57506103bd82611475565b92915050565b606060006103d0846114b3565b9050600260008281526003602052604090205460ff1660068111156103f157fe5b141561045e578360200151608001516001600160a01b0316638bb04875846040518263ffffffff1660e01b815260040161042b91906126a1565b600060405180830381600087803b15801561044557600080fd5b505af1158015610459573d6000803e3d6000fd5b505050505b6000600360008381526003602052604090205460ff16600681111561047f57fe5b14905080156104985761049185610f2b565b92506104a1565b6104a1856109c6565b336001600160a01b0316827f027d8a5d945eb361475964ed2c71b8332b27af2d630ab5daf829d67afd2584e6836040516104db9190612696565b60405180910390a3505092915050565b3360009081527f8dafb0716dbdc5222f4b82fa3495e71054f736c761c542cfff5cf37ceef75d46602052604090205463161b7d8160e21b9060ff168061055a57506001600160e01b031981166000908152602081815260408083206001600160a01b03845290915290205460ff165b61057f5760405162461bcd60e51b8152600401610576906127c8565b60405180910390fd5b60005b825181101561063257610593611b9e565b83828151811061059f57fe5b60200260200101519050600060028111156105b657fe5b815160028111156105c357fe5b14156105e0576105db816020015182604001516114d2565b610629565b6001815160028111156105ef57fe5b1415610607576105db81602001518260400151611588565b60028151600281111561061657fe5b1415610629576106298160200151611611565b50600101610582565b505050565b3360009081527f7376c9dbe282dfb2c566016189e1800fbabc0b60b4cc83fc4490ac5761cad4a360205260408120547f25ddcbe0000000000000000000000000000000000000000000000000000000009060ff16806106bf57506001600160e01b031981166000908152602081815260408083206001600160a01b03845290915290205460ff165b6106db5760405162461bcd60e51b8152600401610576906127c8565b6002805460010190819055835151146107065760405162461bcd60e51b8152600401610576906127ff565b60006107158460200151611445565b905060015481146107385760405162461bcd60e51b815260040161057690612791565b8360200151600001514201846000015160200151101561076a5760405162461bcd60e51b815260040161057690612836565b8351604001516001600160a01b031633146107975760405162461bcd60e51b8152600401610576906128db565b6107ad6107a78560000151611691565b826116ed565b60008181526003602052604081209194506107d09190600163ffffffff61172216565b6107d8611bc0565b5060208085015101516107f1813363ffffffff61173616565b837f6e9c0ffd9c4371af6a9201d5257f695ebc739bd3459e9c7d477eca6768eec359866000015183604051610827929190612adf565b60405180910390a2505050919050565b336000818152600560209081526040808320868452909152902054610884600260048514610866576004610869565b60035b6000848152600360205260409020919063ffffffff61172216565b6001600160a01b038216600081815260056020908152604080832088845290915280822091909155518591907f56c8631a8915c0d362dbe57a61215fdde954f73f81c8a3a1f55572fb015207b1906108dd9087906126a1565b60405180910390a350505050565b600560209081526000928352604080842090915290825290205481565b6001600160e01b0319166000908152602081815260408083206001845290915290205460ff1690565b3360009081527f8dafb0716dbdc5222f4b82fa3495e71054f736c761c542cfff5cf37ceef75d46602052604090205463161b7d8160e21b9060ff16806109a057506001600160e01b031981166000908152602081815260408083206001600160a01b03845290915290205460ff165b6109bc5760405162461bcd60e51b8152600401610576906127c8565b6106328383611588565b60006109d1826114b3565b60008181526003602052604090209091506109f5906004600563ffffffff61172216565b60008181526004602090815260409091205483820151909101516001600160a01b0390911690610a2b908263ffffffff6117d916565b602083015160400151610a44908263ffffffff6117d916565b50600090815260046020526040902080547fffffffffffffffffffffffff000000000000000000000000000000000000000016905550565b3360009081527f5437ee176e989cb18b4abe7ef424bff2f7930e07ce482532fead6c9578d92c4060205260408120547f5decc190000000000000000000000000000000000000000000000000000000009060ff1680610b0457506001600160e01b031981166000908152602081815260408083206001600160a01b03845290915290205460ff165b610b205760405162461bcd60e51b8152600401610576906127c8565b6000610b2b856114b3565b600081815260046020908152604080832080547fffffffffffffffffffffffff0000000000000000000000000000000000000000163317905560039091529020909150610b81906001600263ffffffff61172216565b610b89611bc0565b50602085015160400151610ba3813363ffffffff61173616565b600086602001516080015190506000806000836001600160a01b0316637b751b9e6040518163ffffffff1660e01b815260040160606040518083038186803b158015610bee57600080fd5b505afa158015610c02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c269190611ef4565b91945092509050610c486001600160a01b03831633308463ffffffff61186d16565b610c645760405162461bcd60e51b8152600401610576906128a4565b610c7e6001600160a01b038316848363ffffffff6118eb16565b610c9a5760405162461bcd60e51b815260040161057690612980565b836001600160a01b031663c13517e160028c604051602001610cbc9190612aa6565b6040516020818303038152906040526040518363ffffffff1660e01b8152600401610ce8929190612741565b602060405180830381600087803b158015610d0257600080fd5b505af1158015610d16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3a91906122d5565b9750610d576001600160a01b03831684600063ffffffff6118eb16565b610d735760405162461bcd60e51b81526004016105769061286d565b8960000151604001516001600160a01b031688856001600160a01b03167f1988e4d59f596ba1a2d81e06874704a62502463ae6d99154f923e5edeb98392b8d6000015160a001516001604051610dca9291906126bf565b60405180910390a4336001600160a01b031688856001600160a01b03167f1988e4d59f596ba1a2d81e06874704a62502463ae6d99154f923e5edeb98392b8c6001604051610e199291906126bf565b60405180910390a46040517f7e9adccf0000000000000000000000000000000000000000000000000000000081526001600160a01b03851690637e9adccf90610e66908b906004016126a1565b600060405180830381600087803b158015610e8057600080fd5b505af1158015610e94573d6000803e3d6000fd5b5050506001600160a01b03851660009081526005602090815260408083208c8452909152908190208890555133915087907f429df837eb45b6713f725a0d3e57db939fd7dd7d58bb3cd967fa37091572db9f90610ef6908d908d908b90612705565b60405180910390a35050505050505092915050565b60036020526000908152604090205460ff1681565b63161b7d8160e21b81565b60606000610f38836114b3565b6000818152600360208190526040909120919250610f5e9190600663ffffffff61172216565b8251604001516020808501510151610f7b9163ffffffff6117d916565b8251604090810151602085015190910151610f9b9163ffffffff6117d916565b8251610fa79082611966565b9392505050565b600060208181529281526040808220909352908152205460ff1681565b3360009081527fce37bbbe099ffd049703ce63e8a4278f5d5ae5a7014d70676a104bd77e95a79560205260409020547fa0e975cb000000000000000000000000000000000000000000000000000000009060ff168061105357506001600160e01b031981166000908152602081815260408083206001600160a01b03845290915290205460ff165b61106f5760405162461bcd60e51b8152600401610576906127c8565b60006110838561107e86611445565b6116ed565b60008181526003602052604090209091506110a7906001600563ffffffff61172216565b336001600160a01b0316817fe703b40b97f0bda26ba2d80e910ebe89254d4fe6f13b7ee83dfea563eb73d64f8587606001516040516110e79291906126e3565b60405180910390a35050505050565b3360009081527f8dafb0716dbdc5222f4b82fa3495e71054f736c761c542cfff5cf37ceef75d46602052604090205463161b7d8160e21b9060ff168061116557506001600160e01b031981166000908152602081815260408083206001600160a01b03845290915290205460ff165b6111815760405162461bcd60e51b8152600401610576906127c8565b61063283836114d2565b3360009081527fe3acc4f5503a4661ff3859143dae57eb84d6eeec076606b992576354b60a6b5060205260408120547faa455d9f000000000000000000000000000000000000000000000000000000009060ff168061121357506001600160e01b031981166000908152602081815260408083206001600160a01b03845290915290205460ff165b61122f5760405162461bcd60e51b8152600401610576906127c8565b610fa783611a55565b60025481565b60405162461bcd60e51b815260040161057690612912565b3360009081527f8dafb0716dbdc5222f4b82fa3495e71054f736c761c542cfff5cf37ceef75d46602052604090205463161b7d8160e21b9060ff16806112c557506001600160e01b031981166000908152602081815260408083206001600160a01b03845290915290205460ff165b6112e15760405162461bcd60e51b8152600401610576906127c8565b6112ea82611611565b5050565b6004602052600090815260409020546001600160a01b031681565b60015481565b3360009081527f6e99e897067e581d1efa914c0236e290a87c4b08af2b020491ef6c4ea862aa0460205260409020546060907fecb6cba6000000000000000000000000000000000000000000000000000000009060ff168061139a57506001600160e01b031981166000908152602081815260408083206001600160a01b03845290915290205460ff165b6113b65760405162461bcd60e51b8152600401610576906127c8565b82516020015167ffffffffffffffff421610156113e55760405162461bcd60e51b8152600401610576906129ee565b60006113f0846114b3565b6000818152600360205260409020909150611414906001600663ffffffff61172216565b83516040015160208086015101516114319163ffffffff6117d916565b835161143d9082611966565b949350505050565b6000816040516020016114589190612a93565b604051602081830303815290604052805190602001209050919050565b60006001600160e01b031982167f9abf68a80000000000000000000000000000000000000000000000000000000014806103bd57506103bd82611aa8565b60006103bd6114c58360000151611691565b61107e8460200151611445565b6114db82610908565b156114f85760405162461bcd60e51b815260040161057690612949565b6001600160a01b038116600114156115225760405162461bcd60e51b815260040161057690612a5c565b6001600160e01b031982166000818152602081815260408083206001600160a01b0386168085529252808320805460ff19166001179055519092339290917f1c3ac05008a204aef806fb7b0a907c496ed107cd989825beb9df5f8094c2eabd9190a45050565b61159182610908565b156115ae5760405162461bcd60e51b815260040161057690612949565b6001600160e01b031982166000818152602081815260408083206001600160a01b0386168085529252808320805460ff19169055519092339290917f682f2c466c1e9f6883eb72cbced01373e1cb18b05ae5c8bc04dc73d73e29f8cd9190a45050565b61161a81610908565b156116375760405162461bcd60e51b815260040161057690612949565b6001600160e01b0319811660008181526020818152604080832060018085529252808320805460ff1916909217909155513392917f049c6b8b07a879425742523fa80f8ffb25e39ad518c93a5896a0df19518397e591a350565b600081600001518260400151836060015184608001516040516020016116b79190612683565b604051602081830303815290604052805190602001208560a001518051906020012060405160200161145895949392919061257b565b60003083836040516020016117049392919061252b565b60405160208183030381529060405280519060200120905092915050565b61172c8383611ada565b6106328382611b13565b6020820151156112ea5781516020830151611765906001600160a01b038316908490339063ffffffff61186d16565b6117815760405162461bcd60e51b815260040161057690612a25565b816001600160a01b031683600001516001600160a01b03167f484decdc1e9549e1866295f6f86c889ded3f7de410e7488a7a415978589dc8fd85602001516040516117cc91906126a1565b60405180910390a3505050565b6020820151156112ea5781516020830151611806906001600160a01b03831690849063ffffffff611b3416565b6118225760405162461bcd60e51b8152600401610576906129b7565b816001600160a01b031683600001516001600160a01b03167f2d87480f50083e2b2759522a8fdda59802650a8055e609a7772cf70c07748f5285602001516040516117cc91906126a1565b600060606323b872dd60e01b85858560405160240161188e939291906125c8565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b03199093169290921790915290506118e18682611b53565b9695505050505050565b6000606063095ea7b360e01b848460405160240161190a9291906125ec565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b031990931692909217909152905061195d8582611b53565b95945050505050565b60608281015160808401516040517f5c3e97600000000000000000000000000000000000000000000000000000000081526001600160a01b0390921691635c3e9760916119b591600401612683565b600060405180830381600087803b1580156119cf57600080fd5b505af11580156119e3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611a0b9190810190611f36565b9050336001600160a01b0316827f01aaa46eb73faf88e395ba771b10025a89b519744844021ff4f442b53ac6d19083604051611a479190612605565b60405180910390a392915050565b6000611a6082611445565b60018190556040513391907f071dadc36a9a359de148d456696ab20acf1980b6eac0e727f21a9925be8cf15990611a98908690612a93565b60405180910390a3505060015490565b6001600160e01b031981167f01ffc9a70000000000000000000000000000000000000000000000000000000014919050565b806006811115611ae657fe5b825460ff166006811115611af657fe5b146112ea5760405162461bcd60e51b81526004016105769061275a565b81548190839060ff19166001836006811115611b2b57fe5b02179055505050565b6000606063a9059cbb60e01b848460405160240161190a9291906125ec565b6000806040516020818551602087016000895af18015611b94573d8015611b815760208114611b8a57611b92565b60019350611b92565b600183511493505b505b5090949350505050565b6040805160608101909152806000815260006020820181905260409091015290565b604080518082019091526000808252602082015290565b80356103bd81612b8d565b600082601f830112611bf2578081fd5b8135611c05611c0082612b19565b612af2565b818152915060208083019084810160005b84811015611c9c5781358701606080601f19838c03011215611c3757600080fd5b611c4081612af2565b85830135611c4d81612b8d565b8152604083810135878301528284013567ffffffffffffffff811115611c7257600080fd5b611c808d8983880101611cbf565b9183019190915250865250509282019290820190600101611c16565b505050505092915050565b80356001600160e01b0319811681146103bd57600080fd5b600082601f830112611ccf578081fd5b8135611cdd611c0082612b39565b9150808252836020828501011115611cf457600080fd5b8060208401602084013760009082016020015292915050565b8035600381106103bd57600080fd5b600060408284031215611d2d578081fd5b611d376040612af2565b90508135611d4481612b8d565b808252506020820135602082015292915050565b60006101208284031215611d6a578081fd5b611d7460c0612af2565b905081358152611d878360208401611d1c565b6020820152611d998360608401611d1c565b6040820152611dab8360a08401611d1c565b606082015260e0820135611dbe81612b8d565b608082015261010082013567ffffffffffffffff811115611dde57600080fd5b611dea84828501611cbf565b60a08301525092915050565b600060408284031215611e07578081fd5b611e116040612af2565b9050813567ffffffffffffffff80821115611e2b57600080fd5b81840160c08187031215611e3e57600080fd5b611e4860c0612af2565b92508035835260208101356020840152611e658660408301611bd7565b6040840152611e778660608301611bd7565b6060840152608081013582811115611e8e57600080fd5b611e9a87828401611be2565b60808501525060a081013582811115611eb257600080fd5b611ebe87828401611cbf565b60a0850152505090825260208301359080821115611edb57600080fd5b50611ee884828501611d58565b60208301525092915050565b600080600060608486031215611f08578283fd5b8351611f1381612b8d565b6020850151909350611f2481612b8d565b80925050604084015190509250925092565b60006020808385031215611f48578182fd5b825167ffffffffffffffff811115611f5e578283fd5b80840185601f820112611f6f578384fd5b80519150611f7f611c0083612b19565b82815283810190828501865b85811015611fee57815185018a603f820112611fa5578889fd5b87810151611fb5611c0082612b39565b81815260408d81848601011115611fca578b8cfd5b611fd9838c8401838701612b5d565b50865250509286019290860190600101611f8b565b509098975050505050505050565b6000602080838503121561200e578182fd5b823567ffffffffffffffff811115612024578283fd5b80840185601f820112612035578384fd5b80359150612045611c0083612b19565b828152838101908285016060808602850187018a1015612063578788fd5b8794505b85851015611fee5780828b03121561207d578788fd5b61208681612af2565b6120908b84611d0d565b815261209e8b898501611ca7565b8882015260406120b08c828601611bd7565b908201528452600194909401939286019290810190612067565b6000602082840312156120db578081fd5b5035919050565b6000806000606084860312156120f6578081fd5b83359250602084013567ffffffffffffffff80821115612114578283fd5b61212087838801611d58565b93506040860135915080821115612135578283fd5b5061214286828701611cbf565b9150509250925092565b60006020828403121561215d578081fd5b8135610fa781612ba5565b6000806040838503121561217a578182fd5b823561218581612ba5565b9150602083013561219581612b8d565b809150509250929050565b600080604083850312156121b2578182fd5b82356121bd81612b8d565b946020939093013593505050565b6000602082840312156121dc578081fd5b813567ffffffffffffffff8111156121f2578182fd5b61143d84828501611d58565b60006020828403121561220f578081fd5b813567ffffffffffffffff811115612225578182fd5b61143d84828501611df6565b60008060408385031215612243578182fd5b823567ffffffffffffffff8082111561225a578384fd5b61226686838701611df6565b9350602085013591508082111561227b578283fd5b5061228885828601611cbf565b9150509250929050565b600080604083850312156122a4578182fd5b823567ffffffffffffffff8111156122ba578283fd5b6122c685828601611df6565b95602094909401359450505050565b6000602082840312156122e6578081fd5b5051919050565b60008060008060608587031215612302578182fd5b84359350602085013567ffffffffffffffff80821115612320578384fd5b81870188601f820112612331578485fd5b8035925081831115612341578485fd5b886020848301011115612352578485fd5b6020019450909250506040850135801515811461236d578182fd5b939692955090935050565b6000806040838503121561238a578182fd5b50508035926020909101359150565b6000815180845260208085018081965082840281019150828601855b85811015612408578284038952815160606001600160a01b038251168652868201518787015260408083015182828901526123f283890182612415565b9c89019c975050509286019250506001016123b5565b5091979650505050505050565b6000815180845261242d816020860160208601612b5d565b601f01601f19169290920160200192915050565b80516001600160a01b03168252602090810151910152565b60006101208251845260208301516124746020860182612441565b5060408301516124876060860182612441565b50606083015161249a60a0860182612441565b506001600160a01b0360808401511660e085015260a08301518161010086015261195d82860182612415565b6000815183526020820151602084015260408201516001600160a01b0380821660408601528060608501511660608601525050608082015160c0608085015261251260c0850182612399565b60a0840151915084810360a086015261195d8183612415565b7f657263336b2d7631000000000000000000000000000000000000000000000000815260609390931b6bffffffffffffffffffffffff19166008840152601c830191909152603c820152605c0190565b9485526bffffffffffffffffffffffff19606094851b811660208701529290931b90911660348401526048830152606882015260880190565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6000602080830181845280855180835260408601915060408482028701019250838701855b82811015612676577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452612664858351612415565b9450928501929085019060010161262a565b5092979650505050505050565b600060208252610fa76020830184612399565b901515815260200190565b90815260200190565b6001600160e01b031991909116815260200190565b6000604082526126d26040830185612415565b905082151560208301529392505050565b6000606082526126f66060830185612415565b9050610fa76020830184612441565b6000608082526127186080830186612415565b905083602083015261143d6040830184612441565b602081016007831061273b57fe5b91905290565b60008382526040602083015261143d6040830184612415565b60208082526010908201527f71756575653a2062616420737461746500000000000000000000000000000000604082015260600190565b60208082526011908201527f71756575653a2062616420636f6e666967000000000000000000000000000000604082015260600190565b60208082526009908201527f61636c3a20617574680000000000000000000000000000000000000000000000604082015260600190565b60208082526010908201527f71756575653a20626164206e6f6e636500000000000000000000000000000000604082015260600190565b60208082526010908201527f71756575653a206261642064656c617900000000000000000000000000000000604082015260600190565b60208082526010908201527f71756575653a2062616420726573657400000000000000000000000000000000604082015260600190565b60208082526013908201527f71756575653a20626164206665652070756c6c00000000000000000000000000604082015260600190565b60208082526014908201527f71756575653a20626164207375626d6974746572000000000000000000000000604082015260600190565b6020808252600f908201527f71756575653a2065766964656e63650000000000000000000000000000000000604082015260600190565b6020808252600b908201527f61636c3a2066726f7a656e000000000000000000000000000000000000000000604082015260600190565b60208082526012908201527f71756575653a2062616420617070726f76650000000000000000000000000000604082015260600190565b60208082526015908201527f71756575653a206261642073656e6420746f6b656e0000000000000000000000604082015260600190565b60208082526010908201527f71756575653a2077616974206d6f726500000000000000000000000000000000604082015260600190565b60208082526014908201527f71756575653a206261642067657420746f6b656e000000000000000000000000604082015260600190565b6020808252600f908201527f61636c3a2062616420667265657a650000000000000000000000000000000000604082015260600190565b600060208252610fa76020830184612459565b600060208252825160406020840152612ac260608401826124c6565b60208501519150601f1984820301604085015261195d8183612459565b6000606082526126f660608301856124c6565b60405181810167ffffffffffffffff81118282101715612b1157600080fd5b604052919050565b600067ffffffffffffffff821115612b2f578081fd5b5060209081020190565b600067ffffffffffffffff821115612b4f578081fd5b50601f01601f191660200190565b60005b83811015612b78578181015183820152602001612b60565b83811115612b87576000848401525b50505050565b6001600160a01b0381168114612ba257600080fd5b50565b6001600160e01b031981168114612ba257600080fdfea2646970667358221220b4d767f59eecf7443ec6dd7c5d6a380d4533e255a757860edd0dfe15a53a883e64736f6c63430006080033",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3129 CODESIZE SUB DUP1 PUSH3 0x3129 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x2C6 JUMP JUMPDEST DUP2 PUSH3 0x51 PUSH4 0x161B7D81 PUSH1 0xE2 SHL DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH3 0x6F AND JUMP JUMPDEST POP PUSH3 0x66 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH3 0x13F AND JUMP JUMPDEST POP POP POP PUSH3 0x528 JUMP JUMPDEST PUSH3 0x83 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH3 0x1A1 AND JUMP JUMPDEST ISZERO PUSH3 0xAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA3 SWAP1 PUSH3 0x3C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 EQ ISZERO PUSH3 0xD9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA3 SWAP1 PUSH3 0x3EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD SWAP1 SWAP3 CALLER SWAP3 SWAP1 SWAP2 PUSH32 0x1C3AC05008A204AEF806FB7B0A907C496ED107CD989825BEB9DF5F8094C2EABD SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x157 DUP3 PUSH3 0x1CA PUSH1 0x20 SHL PUSH3 0x1445 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD CALLER SWAP2 SWAP1 PUSH32 0x71DADC36A9A359DE148D456696AB20ACF1980B6EAC0E727F21A9925BE8CF159 SWAP1 PUSH3 0x191 SWAP1 DUP7 SWAP1 PUSH3 0x413 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x1DF SWAP2 SWAP1 PUSH3 0x413 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x22B JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x241 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH3 0x256 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH3 0x4B5 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH3 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x281 DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD PUSH3 0x4DC JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x29A JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH3 0x2A6 PUSH1 0x40 PUSH3 0x4B5 JUMP JUMPDEST SWAP1 POP PUSH3 0x2B4 DUP4 DUP4 PUSH3 0x1FC JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP3 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2D9 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH3 0x2E6 DUP2 PUSH3 0x50F JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x303 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP6 ADD PUSH2 0x120 DUP2 DUP9 SUB SLT ISZERO PUSH3 0x317 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH3 0x323 PUSH1 0xC0 PUSH3 0x4B5 JUMP JUMPDEST SWAP3 POP DUP1 MLOAD DUP4 MSTORE PUSH3 0x338 DUP8 PUSH1 0x20 DUP4 ADD PUSH3 0x288 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE PUSH3 0x34C DUP8 PUSH1 0x60 DUP4 ADD PUSH3 0x288 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE PUSH3 0x360 DUP8 PUSH1 0xA0 DUP4 ADD PUSH3 0x288 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH3 0x374 DUP8 PUSH1 0xE0 DUP4 ADD PUSH3 0x1FC JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD DUP3 DUP2 GT ISZERO PUSH3 0x38C JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH3 0x39A DUP9 DUP3 DUP5 ADD PUSH3 0x21A JUMP JUMPDEST PUSH1 0xA0 DUP6 ADD MSTORE POP POP POP DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 SWAP1 DUP2 ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x30B1B61D10333937BD32B7 PUSH1 0xA9 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x61636C3A2062616420667265657A65 PUSH1 0x88 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH3 0x434 PUSH1 0x40 DUP5 ADD DUP3 PUSH3 0x3AD JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH3 0x449 PUSH1 0x80 DUP5 ADD DUP3 PUSH3 0x3AD JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH3 0x45E PUSH1 0xC0 DUP5 ADD DUP3 PUSH3 0x3AD JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x100 DUP4 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x120 DUP1 DUP5 ADD MSTORE DUP1 MLOAD PUSH2 0x140 DUP5 ADD DUP2 SWAP1 MSTORE PUSH2 0x160 PUSH3 0x49E DUP3 DUP3 DUP8 ADD PUSH1 0x20 DUP7 ADD PUSH3 0x4DC JUMP JUMPDEST DUP1 PUSH1 0x1F NOT PUSH1 0x1F DUP5 ADD AND DUP7 ADD ADD SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH3 0x4D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x4F9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x4DF JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x509 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x525 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2BF1 DUP1 PUSH3 0x538 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E8C7F08 GT PUSH2 0xE3 JUMPI DUP1 PUSH4 0xAFFED0E0 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xC8182AF0 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xC8182AF0 EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0xE1F1176D EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0xECB6CBA6 EQ PUSH2 0x36C JUMPI PUSH2 0x18D JUMP JUMPDEST DUP1 PUSH4 0xAFFED0E0 EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0xB9E9823F EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0xBDF9A726 EQ PUSH2 0x331 JUMPI PUSH2 0x18D JUMP JUMPDEST DUP1 PUSH4 0xA0E975CB GT PUSH2 0xBD JUMPI DUP1 PUSH4 0xA0E975CB EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0xA157A10D EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0xAA455D9F EQ PUSH2 0x303 JUMPI PUSH2 0x18D JUMP JUMPDEST DUP1 PUSH4 0x7E8C7F08 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x869CB6B5 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x96FC8ABD EQ PUSH2 0x2CA JUMPI PUSH2 0x18D JUMP JUMPDEST DUP1 PUSH4 0x3B1C5FC6 GT PUSH2 0x145 JUMPI DUP1 PUSH4 0x5C44C0A7 GT PUSH2 0x11F JUMPI DUP1 PUSH4 0x5C44C0A7 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x5DECC190 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x7C10DEA6 EQ PUSH2 0x282 JUMPI PUSH2 0x18D JUMP JUMPDEST DUP1 PUSH4 0x3B1C5FC6 EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x495A9825 EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x58849734 EQ PUSH2 0x249 JUMPI PUSH2 0x18D JUMP JUMPDEST DUP1 PUSH4 0x1C47671B GT PUSH2 0x176 JUMPI DUP1 PUSH4 0x1C47671B EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x25DDCBE0 EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x311A6C56 EQ PUSH2 0x210 JUMPI PUSH2 0x18D JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x494812A EQ PUSH2 0x1BB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A5 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x214C JUMP JUMPDEST PUSH2 0x37F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x2696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2292 JUMP JUMPDEST PUSH2 0x3C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x2605 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x1E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FFC JUMP JUMPDEST PUSH2 0x4EB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x203 PUSH2 0x1FE CALLDATASIZE PUSH1 0x4 PUSH2 0x21FE JUMP JUMPDEST PUSH2 0x637 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x26A1 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x21E CALLDATASIZE PUSH1 0x4 PUSH2 0x2378 JUMP JUMPDEST PUSH2 0x837 JUMP JUMPDEST PUSH2 0x203 PUSH2 0x231 CALLDATASIZE PUSH1 0x4 PUSH2 0x21A0 JUMP JUMPDEST PUSH2 0x8EB JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x244 CALLDATASIZE PUSH1 0x4 PUSH2 0x214C JUMP JUMPDEST PUSH2 0x908 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x257 CALLDATASIZE PUSH1 0x4 PUSH2 0x2168 JUMP JUMPDEST PUSH2 0x931 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x26A CALLDATASIZE PUSH1 0x4 PUSH2 0x21FE JUMP JUMPDEST PUSH2 0x9C6 JUMP JUMPDEST PUSH2 0x203 PUSH2 0x27D CALLDATASIZE PUSH1 0x4 PUSH2 0x2231 JUMP JUMPDEST PUSH2 0xA7C JUMP JUMPDEST PUSH2 0x295 PUSH2 0x290 CALLDATASIZE PUSH1 0x4 PUSH2 0x20CA JUMP JUMPDEST PUSH2 0xF0B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x272D JUMP JUMPDEST PUSH2 0x2AA PUSH2 0xF20 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x26AA JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x2C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x21FE JUMP JUMPDEST PUSH2 0xF2B JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x2D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2168 JUMP JUMPDEST PUSH2 0xFAE JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x2EB CALLDATASIZE PUSH1 0x4 PUSH2 0x20E2 JUMP JUMPDEST PUSH2 0xFCB JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x2FE CALLDATASIZE PUSH1 0x4 PUSH2 0x2168 JUMP JUMPDEST PUSH2 0x10F6 JUMP JUMPDEST PUSH2 0x203 PUSH2 0x311 CALLDATASIZE PUSH1 0x4 PUSH2 0x21CB JUMP JUMPDEST PUSH2 0x118B JUMP JUMPDEST PUSH2 0x203 PUSH2 0x1238 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x32C CALLDATASIZE PUSH1 0x4 PUSH2 0x22ED JUMP JUMPDEST PUSH2 0x123E JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x33F CALLDATASIZE PUSH1 0x4 PUSH2 0x214C JUMP JUMPDEST PUSH2 0x1256 JUMP JUMPDEST PUSH2 0x357 PUSH2 0x352 CALLDATASIZE PUSH1 0x4 PUSH2 0x20CA JUMP JUMPDEST PUSH2 0x12EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x25B4 JUMP JUMPDEST PUSH2 0x203 PUSH2 0x1309 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x37A CALLDATASIZE PUSH1 0x4 PUSH2 0x21FE JUMP JUMPDEST PUSH2 0x130F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0x88F3EE6900000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x3BD JUMPI POP PUSH2 0x3BD DUP3 PUSH2 0x1475 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x3D0 DUP5 PUSH2 0x14B3 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x3F1 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x45E JUMPI DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x80 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8BB04875 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42B SWAP2 SWAP1 PUSH2 0x26A1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x445 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x459 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x47F JUMPI INVALID JUMPDEST EQ SWAP1 POP DUP1 ISZERO PUSH2 0x498 JUMPI PUSH2 0x491 DUP6 PUSH2 0xF2B JUMP JUMPDEST SWAP3 POP PUSH2 0x4A1 JUMP JUMPDEST PUSH2 0x4A1 DUP6 PUSH2 0x9C6 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH32 0x27D8A5D945EB361475964ED2C71B8332B27AF2D630AB5DAF829D67AFD2584E6 DUP4 PUSH1 0x40 MLOAD PUSH2 0x4DB SWAP2 SWAP1 PUSH2 0x2696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x8DAFB0716DBDC5222F4B82FA3495E71054F736C761C542CFFF5CF37CEEF75D46 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0x161B7D81 PUSH1 0xE2 SHL SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x55A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x57F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x632 JUMPI PUSH2 0x593 PUSH2 0x1B9E JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x59F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x5B6 JUMPI INVALID JUMPDEST DUP2 MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x5C3 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x5E0 JUMPI PUSH2 0x5DB DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0x14D2 JUMP JUMPDEST PUSH2 0x629 JUMP JUMPDEST PUSH1 0x1 DUP2 MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x5EF JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x607 JUMPI PUSH2 0x5DB DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0x1588 JUMP JUMPDEST PUSH1 0x2 DUP2 MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x616 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x629 JUMPI PUSH2 0x629 DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0x1611 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x582 JUMP JUMPDEST POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x7376C9DBE282DFB2C566016189E1800FBABC0B60B4CC83FC4490AC5761CAD4A3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH32 0x25DDCBE000000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x6BF JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x6DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 DUP2 SWAP1 SSTORE DUP4 MLOAD MLOAD EQ PUSH2 0x706 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x27FF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x715 DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0x1445 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0x738 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x2791 JUMP JUMPDEST DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x0 ADD MLOAD TIMESTAMP ADD DUP5 PUSH1 0x0 ADD MLOAD PUSH1 0x20 ADD MLOAD LT ISZERO PUSH2 0x76A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x2836 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x797 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x28DB JUMP JUMPDEST PUSH2 0x7AD PUSH2 0x7A7 DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x1691 JUMP JUMPDEST DUP3 PUSH2 0x16ED JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP5 POP PUSH2 0x7D0 SWAP2 SWAP1 PUSH1 0x1 PUSH4 0xFFFFFFFF PUSH2 0x1722 AND JUMP JUMPDEST PUSH2 0x7D8 PUSH2 0x1BC0 JUMP JUMPDEST POP PUSH1 0x20 DUP1 DUP6 ADD MLOAD ADD MLOAD PUSH2 0x7F1 DUP2 CALLER PUSH4 0xFFFFFFFF PUSH2 0x1736 AND JUMP JUMPDEST DUP4 PUSH32 0x6E9C0FFD9C4371AF6A9201D5257F695EBC739BD3459E9C7D477ECA6768EEC359 DUP7 PUSH1 0x0 ADD MLOAD DUP4 PUSH1 0x40 MLOAD PUSH2 0x827 SWAP3 SWAP2 SWAP1 PUSH2 0x2ADF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x884 PUSH1 0x2 PUSH1 0x4 DUP6 EQ PUSH2 0x866 JUMPI PUSH1 0x4 PUSH2 0x869 JUMP JUMPDEST PUSH1 0x3 JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1722 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE MLOAD DUP6 SWAP2 SWAP1 PUSH32 0x56C8631A8915C0D362DBE57A61215FDDE954F73F81C8A3A1F55572FB015207B1 SWAP1 PUSH2 0x8DD SWAP1 DUP8 SWAP1 PUSH2 0x26A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x8DAFB0716DBDC5222F4B82FA3495E71054F736C761C542CFFF5CF37CEEF75D46 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0x161B7D81 PUSH1 0xE2 SHL SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x9A0 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x9BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH2 0x632 DUP4 DUP4 PUSH2 0x1588 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D1 DUP3 PUSH2 0x14B3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 SWAP2 POP PUSH2 0x9F5 SWAP1 PUSH1 0x4 PUSH1 0x5 PUSH4 0xFFFFFFFF PUSH2 0x1722 AND JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD DUP4 DUP3 ADD MLOAD SWAP1 SWAP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0xA2B SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x17D9 AND JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH2 0xA44 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x17D9 AND JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP1 SSTORE POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x5437EE176E989CB18B4ABE7EF424BFF2F7930E07CE482532FEAD6C9578D92C40 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH32 0x5DECC19000000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0xB04 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0xB20 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB2B DUP6 PUSH2 0x14B3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND CALLER OR SWAP1 SSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SWAP1 SWAP2 POP PUSH2 0xB81 SWAP1 PUSH1 0x1 PUSH1 0x2 PUSH4 0xFFFFFFFF PUSH2 0x1722 AND JUMP JUMPDEST PUSH2 0xB89 PUSH2 0x1BC0 JUMP JUMPDEST POP PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH2 0xBA3 DUP2 CALLER PUSH4 0xFFFFFFFF PUSH2 0x1736 AND JUMP JUMPDEST PUSH1 0x0 DUP7 PUSH1 0x20 ADD MLOAD PUSH1 0x80 ADD MLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7B751B9E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC02 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC26 SWAP2 SWAP1 PUSH2 0x1EF4 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP PUSH2 0xC48 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER ADDRESS DUP5 PUSH4 0xFFFFFFFF PUSH2 0x186D AND JUMP JUMPDEST PUSH2 0xC64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x28A4 JUMP JUMPDEST PUSH2 0xC7E PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP5 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x18EB AND JUMP JUMPDEST PUSH2 0xC9A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x2980 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC13517E1 PUSH1 0x2 DUP13 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCBC SWAP2 SWAP1 PUSH2 0x2AA6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE8 SWAP3 SWAP2 SWAP1 PUSH2 0x2741 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD16 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD3A SWAP2 SWAP1 PUSH2 0x22D5 JUMP JUMPDEST SWAP8 POP PUSH2 0xD57 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP5 PUSH1 0x0 PUSH4 0xFFFFFFFF PUSH2 0x18EB AND JUMP JUMPDEST PUSH2 0xD73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x286D JUMP JUMPDEST DUP10 PUSH1 0x0 ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x1988E4D59F596BA1A2D81E06874704A62502463AE6D99154F923E5EDEB98392B DUP14 PUSH1 0x0 ADD MLOAD PUSH1 0xA0 ADD MLOAD PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xDCA SWAP3 SWAP2 SWAP1 PUSH2 0x26BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x1988E4D59F596BA1A2D81E06874704A62502463AE6D99154F923E5EDEB98392B DUP13 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xE19 SWAP3 SWAP2 SWAP1 PUSH2 0x26BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x40 MLOAD PUSH32 0x7E9ADCCF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x7E9ADCCF SWAP1 PUSH2 0xE66 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x26A1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE94 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP13 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP9 SWAP1 SSTORE MLOAD CALLER SWAP2 POP DUP8 SWAP1 PUSH32 0x429DF837EB45B6713F725A0D3E57DB939FD7DD7D58BB3CD967FA37091572DB9F SWAP1 PUSH2 0xEF6 SWAP1 DUP14 SWAP1 DUP14 SWAP1 DUP12 SWAP1 PUSH2 0x2705 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH4 0x161B7D81 PUSH1 0xE2 SHL DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xF38 DUP4 PUSH2 0x14B3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP3 POP PUSH2 0xF5E SWAP2 SWAP1 PUSH1 0x6 PUSH4 0xFFFFFFFF PUSH2 0x1722 AND JUMP JUMPDEST DUP3 MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x20 DUP1 DUP6 ADD MLOAD ADD MLOAD PUSH2 0xF7B SWAP2 PUSH4 0xFFFFFFFF PUSH2 0x17D9 AND JUMP JUMPDEST DUP3 MLOAD PUSH1 0x40 SWAP1 DUP2 ADD MLOAD PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP2 ADD MLOAD PUSH2 0xF9B SWAP2 PUSH4 0xFFFFFFFF PUSH2 0x17D9 AND JUMP JUMPDEST DUP3 MLOAD PUSH2 0xFA7 SWAP1 DUP3 PUSH2 0x1966 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 DUP2 MSTORE SWAP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 MSTORE SWAP1 DUP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xCE37BBBE099FFD049703CE63E8A4278F5D5AE5A7014D70676A104BD77E95A795 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH32 0xA0E975CB00000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x1053 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x106F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1083 DUP6 PUSH2 0x107E DUP7 PUSH2 0x1445 JUMP JUMPDEST PUSH2 0x16ED JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 SWAP2 POP PUSH2 0x10A7 SWAP1 PUSH1 0x1 PUSH1 0x5 PUSH4 0xFFFFFFFF PUSH2 0x1722 AND JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH32 0xE703B40B97F0BDA26BA2D80E910EBE89254D4FE6F13B7EE83DFEA563EB73D64F DUP6 DUP8 PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x10E7 SWAP3 SWAP2 SWAP1 PUSH2 0x26E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x8DAFB0716DBDC5222F4B82FA3495E71054F736C761C542CFFF5CF37CEEF75D46 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0x161B7D81 PUSH1 0xE2 SHL SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x1165 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x1181 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH2 0x632 DUP4 DUP4 PUSH2 0x14D2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xE3ACC4F5503A4661FF3859143DAE57EB84D6EEEC076606B992576354B60A6B50 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH32 0xAA455D9F00000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x1213 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x122F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH2 0xFA7 DUP4 PUSH2 0x1A55 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x2912 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x8DAFB0716DBDC5222F4B82FA3495E71054F736C761C542CFFF5CF37CEEF75D46 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0x161B7D81 PUSH1 0xE2 SHL SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x12C5 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x12E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH2 0x12EA DUP3 PUSH2 0x1611 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x6E99E897067E581D1EFA914C0236E290A87C4B08AF2B020491EF6C4EA862AA04 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH32 0xECB6CBA600000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x139A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x13B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x20 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF TIMESTAMP AND LT ISZERO PUSH2 0x13E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x29EE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13F0 DUP5 PUSH2 0x14B3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 SWAP2 POP PUSH2 0x1414 SWAP1 PUSH1 0x1 PUSH1 0x6 PUSH4 0xFFFFFFFF PUSH2 0x1722 AND JUMP JUMPDEST DUP4 MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x20 DUP1 DUP7 ADD MLOAD ADD MLOAD PUSH2 0x1431 SWAP2 PUSH4 0xFFFFFFFF PUSH2 0x17D9 AND JUMP JUMPDEST DUP4 MLOAD PUSH2 0x143D SWAP1 DUP3 PUSH2 0x1966 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1458 SWAP2 SWAP1 PUSH2 0x2A93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0x9ABF68A800000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x3BD JUMPI POP PUSH2 0x3BD DUP3 PUSH2 0x1AA8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BD PUSH2 0x14C5 DUP4 PUSH1 0x0 ADD MLOAD PUSH2 0x1691 JUMP JUMPDEST PUSH2 0x107E DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0x1445 JUMP JUMPDEST PUSH2 0x14DB DUP3 PUSH2 0x908 JUMP JUMPDEST ISZERO PUSH2 0x14F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x2949 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 EQ ISZERO PUSH2 0x1522 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x2A5C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD SWAP1 SWAP3 CALLER SWAP3 SWAP1 SWAP2 PUSH32 0x1C3AC05008A204AEF806FB7B0A907C496ED107CD989825BEB9DF5F8094C2EABD SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x1591 DUP3 PUSH2 0x908 JUMP JUMPDEST ISZERO PUSH2 0x15AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x2949 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD SWAP1 SWAP3 CALLER SWAP3 SWAP1 SWAP2 PUSH32 0x682F2C466C1E9F6883EB72CBCED01373E1CB18B05AE5C8BC04DC73D73E29F8CD SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x161A DUP2 PUSH2 0x908 JUMP JUMPDEST ISZERO PUSH2 0x1637 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x2949 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE MLOAD CALLER SWAP3 SWAP2 PUSH32 0x49C6B8B07A879425742523FA80F8FFB25E39AD518C93A5896A0DF19518397E5 SWAP2 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD DUP4 PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x80 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x16B7 SWAP2 SWAP1 PUSH2 0x2683 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP6 PUSH1 0xA0 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1458 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x257B JUMP JUMPDEST PUSH1 0x0 ADDRESS DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1704 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x252B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x172C DUP4 DUP4 PUSH2 0x1ADA JUMP JUMPDEST PUSH2 0x632 DUP4 DUP3 PUSH2 0x1B13 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD ISZERO PUSH2 0x12EA JUMPI DUP2 MLOAD PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x1765 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP5 SWAP1 CALLER SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x186D AND JUMP JUMPDEST PUSH2 0x1781 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x2A25 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x484DECDC1E9549E1866295F6F86C889DED3F7DE410E7488A7A415978589DC8FD DUP6 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x17CC SWAP2 SWAP1 PUSH2 0x26A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD ISZERO PUSH2 0x12EA JUMPI DUP2 MLOAD PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x1806 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP5 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1B34 AND JUMP JUMPDEST PUSH2 0x1822 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x29B7 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x2D87480F50083E2B2759522A8FDDA59802650A8055E609A7772CF70C07748F52 DUP6 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x17CC SWAP2 SWAP1 PUSH2 0x26A1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x188E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25C8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE SWAP1 POP PUSH2 0x18E1 DUP7 DUP3 PUSH2 0x1B53 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x190A SWAP3 SWAP2 SWAP1 PUSH2 0x25EC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE SWAP1 POP PUSH2 0x195D DUP6 DUP3 PUSH2 0x1B53 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 DUP2 ADD MLOAD PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x40 MLOAD PUSH32 0x5C3E976000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x5C3E9760 SWAP2 PUSH2 0x19B5 SWAP2 PUSH1 0x4 ADD PUSH2 0x2683 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x19E3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1A0B SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1F36 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH32 0x1AAA46EB73FAF88E395BA771B10025A89B519744844021FF4F442B53AC6D190 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1A47 SWAP2 SWAP1 PUSH2 0x2605 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A60 DUP3 PUSH2 0x1445 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD CALLER SWAP2 SWAP1 PUSH32 0x71DADC36A9A359DE148D456696AB20ACF1980B6EAC0E727F21A9925BE8CF159 SWAP1 PUSH2 0x1A98 SWAP1 DUP7 SWAP1 PUSH2 0x2A93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x1AE6 JUMPI INVALID JUMPDEST DUP3 SLOAD PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x1AF6 JUMPI INVALID JUMPDEST EQ PUSH2 0x12EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x275A JUMP JUMPDEST DUP2 SLOAD DUP2 SWAP1 DUP4 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x1B2B JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x190A SWAP3 SWAP2 SWAP1 PUSH2 0x25EC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP6 MLOAD PUSH1 0x20 DUP8 ADD PUSH1 0x0 DUP10 GAS CALL DUP1 ISZERO PUSH2 0x1B94 JUMPI RETURNDATASIZE DUP1 ISZERO PUSH2 0x1B81 JUMPI PUSH1 0x20 DUP2 EQ PUSH2 0x1B8A JUMPI PUSH2 0x1B92 JUMP JUMPDEST PUSH1 0x1 SWAP4 POP PUSH2 0x1B92 JUMP JUMPDEST PUSH1 0x1 DUP4 MLOAD EQ SWAP4 POP JUMPDEST POP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP2 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x3BD DUP2 PUSH2 0x2B8D JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1BF2 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1C05 PUSH2 0x1C00 DUP3 PUSH2 0x2B19 JUMP JUMPDEST PUSH2 0x2AF2 JUMP JUMPDEST DUP2 DUP2 MSTORE SWAP2 POP PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP5 DUP2 ADD PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1C9C JUMPI DUP2 CALLDATALOAD DUP8 ADD PUSH1 0x60 DUP1 PUSH1 0x1F NOT DUP4 DUP13 SUB ADD SLT ISZERO PUSH2 0x1C37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C40 DUP2 PUSH2 0x2AF2 JUMP JUMPDEST DUP6 DUP4 ADD CALLDATALOAD PUSH2 0x1C4D DUP2 PUSH2 0x2B8D JUMP JUMPDEST DUP2 MSTORE PUSH1 0x40 DUP4 DUP2 ADD CALLDATALOAD DUP8 DUP4 ADD MSTORE DUP3 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C80 DUP14 DUP10 DUP4 DUP9 ADD ADD PUSH2 0x1CBF JUMP JUMPDEST SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP7 MSTORE POP POP SWAP3 DUP3 ADD SWAP3 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1C16 JUMP JUMPDEST POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1CCF JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1CDD PUSH2 0x1C00 DUP3 PUSH2 0x2B39 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1CF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH1 0x0 SWAP1 DUP3 ADD PUSH1 0x20 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D2D JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1D37 PUSH1 0x40 PUSH2 0x2AF2 JUMP JUMPDEST SWAP1 POP DUP2 CALLDATALOAD PUSH2 0x1D44 DUP2 PUSH2 0x2B8D JUMP JUMPDEST DUP1 DUP3 MSTORE POP PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D6A JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1D74 PUSH1 0xC0 PUSH2 0x2AF2 JUMP JUMPDEST SWAP1 POP DUP2 CALLDATALOAD DUP2 MSTORE PUSH2 0x1D87 DUP4 PUSH1 0x20 DUP5 ADD PUSH2 0x1D1C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1D99 DUP4 PUSH1 0x60 DUP5 ADD PUSH2 0x1D1C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1DAB DUP4 PUSH1 0xA0 DUP5 ADD PUSH2 0x1D1C JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xE0 DUP3 ADD CALLDATALOAD PUSH2 0x1DBE DUP2 PUSH2 0x2B8D JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x100 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DEA DUP5 DUP3 DUP6 ADD PUSH2 0x1CBF JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E07 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1E11 PUSH1 0x40 PUSH2 0x2AF2 JUMP JUMPDEST SWAP1 POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1E2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD PUSH1 0xC0 DUP2 DUP8 SUB SLT ISZERO PUSH2 0x1E3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E48 PUSH1 0xC0 PUSH2 0x2AF2 JUMP JUMPDEST SWAP3 POP DUP1 CALLDATALOAD DUP4 MSTORE PUSH1 0x20 DUP2 ADD CALLDATALOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1E65 DUP7 PUSH1 0x40 DUP4 ADD PUSH2 0x1BD7 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1E77 DUP7 PUSH1 0x60 DUP4 ADD PUSH2 0x1BD7 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP2 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0x1E8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E9A DUP8 DUP3 DUP5 ADD PUSH2 0x1BE2 JUMP JUMPDEST PUSH1 0x80 DUP6 ADD MSTORE POP PUSH1 0xA0 DUP2 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0x1EB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EBE DUP8 DUP3 DUP5 ADD PUSH2 0x1CBF JUMP JUMPDEST PUSH1 0xA0 DUP6 ADD MSTORE POP POP SWAP1 DUP3 MSTORE PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x1EDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EE8 DUP5 DUP3 DUP6 ADD PUSH2 0x1D58 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F08 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 MLOAD PUSH2 0x1F13 DUP2 PUSH2 0x2B8D JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH2 0x1F24 DUP2 PUSH2 0x2B8D JUMP JUMPDEST DUP1 SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F48 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F5E JUMPI DUP3 DUP4 REVERT JUMPDEST DUP1 DUP5 ADD DUP6 PUSH1 0x1F DUP3 ADD SLT PUSH2 0x1F6F JUMPI DUP4 DUP5 REVERT JUMPDEST DUP1 MLOAD SWAP2 POP PUSH2 0x1F7F PUSH2 0x1C00 DUP4 PUSH2 0x2B19 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP4 DUP2 ADD SWAP1 DUP3 DUP6 ADD DUP7 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1FEE JUMPI DUP2 MLOAD DUP6 ADD DUP11 PUSH1 0x3F DUP3 ADD SLT PUSH2 0x1FA5 JUMPI DUP9 DUP10 REVERT JUMPDEST DUP8 DUP2 ADD MLOAD PUSH2 0x1FB5 PUSH2 0x1C00 DUP3 PUSH2 0x2B39 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x40 DUP14 DUP2 DUP5 DUP7 ADD ADD GT ISZERO PUSH2 0x1FCA JUMPI DUP12 DUP13 REVERT JUMPDEST PUSH2 0x1FD9 DUP4 DUP13 DUP5 ADD DUP4 DUP8 ADD PUSH2 0x2B5D JUMP JUMPDEST POP DUP7 MSTORE POP POP SWAP3 DUP7 ADD SWAP3 SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1F8B JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x200E JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2024 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP1 DUP5 ADD DUP6 PUSH1 0x1F DUP3 ADD SLT PUSH2 0x2035 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP2 POP PUSH2 0x2045 PUSH2 0x1C00 DUP4 PUSH2 0x2B19 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP4 DUP2 ADD SWAP1 DUP3 DUP6 ADD PUSH1 0x60 DUP1 DUP7 MUL DUP6 ADD DUP8 ADD DUP11 LT ISZERO PUSH2 0x2063 JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP5 POP JUMPDEST DUP6 DUP6 LT ISZERO PUSH2 0x1FEE JUMPI DUP1 DUP3 DUP12 SUB SLT ISZERO PUSH2 0x207D JUMPI DUP8 DUP9 REVERT JUMPDEST PUSH2 0x2086 DUP2 PUSH2 0x2AF2 JUMP JUMPDEST PUSH2 0x2090 DUP12 DUP5 PUSH2 0x1D0D JUMP JUMPDEST DUP2 MSTORE PUSH2 0x209E DUP12 DUP10 DUP6 ADD PUSH2 0x1CA7 JUMP JUMPDEST DUP9 DUP3 ADD MSTORE PUSH1 0x40 PUSH2 0x20B0 DUP13 DUP3 DUP7 ADD PUSH2 0x1BD7 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE DUP5 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP3 DUP7 ADD SWAP3 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2067 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20DB JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x20F6 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2114 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x2120 DUP8 DUP4 DUP9 ADD PUSH2 0x1D58 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2135 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x2142 DUP7 DUP3 DUP8 ADD PUSH2 0x1CBF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x215D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xFA7 DUP2 PUSH2 0x2BA5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x217A JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2185 DUP2 PUSH2 0x2BA5 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2195 DUP2 PUSH2 0x2B8D JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21B2 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x21BD DUP2 PUSH2 0x2B8D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21DC JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21F2 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x143D DUP5 DUP3 DUP6 ADD PUSH2 0x1D58 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x220F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2225 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x143D DUP5 DUP3 DUP6 ADD PUSH2 0x1DF6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2243 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x225A JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x2266 DUP7 DUP4 DUP8 ADD PUSH2 0x1DF6 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x227B JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x2288 DUP6 DUP3 DUP7 ADD PUSH2 0x1CBF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22A4 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22BA JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x22C6 DUP6 DUP3 DUP7 ADD PUSH2 0x1DF6 JUMP JUMPDEST SWAP6 PUSH1 0x20 SWAP5 SWAP1 SWAP5 ADD CALLDATALOAD SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22E6 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2302 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2320 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP8 ADD DUP9 PUSH1 0x1F DUP3 ADD SLT PUSH2 0x2331 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP3 POP DUP2 DUP4 GT ISZERO PUSH2 0x2341 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP5 DUP4 ADD ADD GT ISZERO PUSH2 0x2352 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH1 0x20 ADD SWAP5 POP SWAP1 SWAP3 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x236D JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x238A JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD DUP1 DUP2 SWAP7 POP DUP3 DUP5 MUL DUP2 ADD SWAP2 POP DUP3 DUP7 ADD DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2408 JUMPI DUP3 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH1 0x60 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 MLOAD AND DUP7 MSTORE DUP7 DUP3 ADD MLOAD DUP8 DUP8 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD DUP3 DUP3 DUP10 ADD MSTORE PUSH2 0x23F2 DUP4 DUP10 ADD DUP3 PUSH2 0x2415 JUMP JUMPDEST SWAP13 DUP10 ADD SWAP13 SWAP8 POP POP POP SWAP3 DUP7 ADD SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0x23B5 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x242D DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2B5D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 SWAP1 DUP2 ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x2474 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x2441 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x2487 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x2441 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x249A PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0x2441 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x80 DUP5 ADD MLOAD AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD DUP2 PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x195D DUP3 DUP7 ADD DUP3 PUSH2 0x2415 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP4 MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x40 DUP7 ADD MSTORE DUP1 PUSH1 0x60 DUP6 ADD MLOAD AND PUSH1 0x60 DUP7 ADD MSTORE POP POP PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0xC0 PUSH1 0x80 DUP6 ADD MSTORE PUSH2 0x2512 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x2399 JUMP JUMPDEST PUSH1 0xA0 DUP5 ADD MLOAD SWAP2 POP DUP5 DUP2 SUB PUSH1 0xA0 DUP7 ADD MSTORE PUSH2 0x195D DUP2 DUP4 PUSH2 0x2415 JUMP JUMPDEST PUSH32 0x657263336B2D7631000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP4 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x8 DUP5 ADD MSTORE PUSH1 0x1C DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3C DUP3 ADD MSTORE PUSH1 0x5C ADD SWAP1 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 SWAP5 DUP6 SHL DUP2 AND PUSH1 0x20 DUP8 ADD MSTORE SWAP3 SWAP1 SWAP4 SHL SWAP1 SWAP2 AND PUSH1 0x34 DUP5 ADD MSTORE PUSH1 0x48 DUP4 ADD MSTORE PUSH1 0x68 DUP3 ADD MSTORE PUSH1 0x88 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 POP PUSH1 0x40 DUP5 DUP3 MUL DUP8 ADD ADD SWAP3 POP DUP4 DUP8 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2676 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC0 DUP9 DUP7 SUB ADD DUP5 MSTORE PUSH2 0x2664 DUP6 DUP4 MLOAD PUSH2 0x2415 JUMP JUMPDEST SWAP5 POP SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x262A JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0xFA7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2399 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 MSTORE PUSH2 0x26D2 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2415 JUMP JUMPDEST SWAP1 POP DUP3 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 MSTORE PUSH2 0x26F6 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2415 JUMP JUMPDEST SWAP1 POP PUSH2 0xFA7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2441 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 MSTORE PUSH2 0x2718 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x2415 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x143D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2441 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x7 DUP4 LT PUSH2 0x273B JUMPI INVALID JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x143D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2415 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH32 0x71756575653A2062616420737461746500000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH32 0x71756575653A2062616420636F6E666967000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x9 SWAP1 DUP3 ADD MSTORE PUSH32 0x61636C3A20617574680000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH32 0x71756575653A20626164206E6F6E636500000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH32 0x71756575653A206261642064656C617900000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH32 0x71756575653A2062616420726573657400000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH32 0x71756575653A20626164206665652070756C6C00000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH32 0x71756575653A20626164207375626D6974746572000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH32 0x71756575653A2065766964656E63650000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH32 0x61636C3A2066726F7A656E000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH32 0x71756575653A2062616420617070726F76650000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH32 0x71756575653A206261642073656E6420746F6B656E0000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH32 0x71756575653A2077616974206D6F726500000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH32 0x71756575653A206261642067657420746F6B656E000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH32 0x61636C3A2062616420667265657A650000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0xFA7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2459 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD PUSH1 0x40 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2AC2 PUSH1 0x60 DUP5 ADD DUP3 PUSH2 0x24C6 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP PUSH1 0x1F NOT DUP5 DUP3 SUB ADD PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x195D DUP2 DUP4 PUSH2 0x2459 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 MSTORE PUSH2 0x26F6 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x24C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2B11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2B2F JUMPI DUP1 DUP2 REVERT JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2B4F JUMPI DUP1 DUP2 REVERT JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2B78 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2B60 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2B87 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2BA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x2BA2 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xD7 PUSH8 0xF59EECF7443EC6DD PUSH29 0x5D6A380D4533E255A757860EDD0DFE15A53A883E64736F6C6343000608 STOP CALLER ",
            "sourceMap": "310:8290:3:-:0;;;865:160;5:9:-1;2:2;;;27:1;24;17:12;2:2;865:160:3;;;;;;;;;;;;;;;;;;;;;968:8;1144:31:7;-1:-1:-1;968:8:3;1144:6:7;:31::i;:::-;-1:-1:-1;992:26:3::1;1003:14:::0;992:10:::1;:26::i;:::-;;865:160:::0;;310:8290;;1960:258:7;2032:15;2041:5;2032:8;:15::i;:::-;2031:16;2023:40;;;;-1:-1:-1;2023:40:7;;;;;;;;;;;;;;;;;-1:-1:-1;2081:19:7;;-1:-1:-1;2081:19:7;;2073:47;;;;-1:-1:-1;2073:47:7;;;;;;;;;-1:-1:-1;2139:12:7;;:5;:12;;;;;;;;;;;-1:-1:-1;2139:18:7;;;;;;;;;;:25;;-1:-1:-1;2139:25:7;-1:-1:-1;2139:25:7;;;2179:32;2139:18;;2194:10;;2139:12;;2179:32;;2139:5;2179:32;1960:258;;:::o;8365:233:3:-;8454:7;8490:14;:7;:12;;;;;:14;;:::i;:::-;8477:10;:27;;;8520:43;;8543:10;;8477:27;8520:43;;;;8555:7;;8520:43;;;;;;;;;;-1:-1:-1;;8581:10:3;;;8365:233::o;2612:108:7:-;-1:-1:-1;2688:12:7;2665:4;2688:12;;;;;;;;;;;-1:-1:-1;2688:25:7;;;;;;;;;;;2612:108::o;1577:121:11:-;1636:7;1683:6;1672:18;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1672:18:11;;;1662:29;;;;;;1655:36;;1577:121;;;:::o;5:134:-1:-;83:13;;-1:-1;8844:54;;9430:35;;9420:2;;9479:1;;9469:12;9420:2;68:71;;;;;147:442;;259:3;252:4;244:6;240:17;236:27;226:2;;-1:-1;;267:12;226:2;301:13;;-1:-1;8027:30;;8024:2;;;-1:-1;;8060:12;8024:2;329:64;8201:4;-1:-1;8133:9;8114:17;;8110:33;8191:15;329:64;;;320:73;;413:6;406:5;399:21;517:3;8201:4;508:6;441;499:16;;496:25;493:2;;;534:1;;524:12;493:2;544:39;576:6;8201:4;475:5;471:16;8201:4;441:6;437:17;544:39;;;;219:370;;;;;633:506;;761:4;749:9;744:3;740:19;736:30;733:2;;;-1:-1;;769:12;733:2;797:20;761:4;797:20;;;788:29;;900:60;956:3;932:22;900:60;;;882:16;875:86;1024:2;1093:9;1089:22;2604:13;1024:2;1043:5;1039:16;1032:86;727:412;;;;;2667:526;;;2823:2;2811:9;2802:7;2798:23;2794:32;2791:2;;;-1:-1;;2829:12;2791:2;89:6;83:13;101:33;128:5;101:33;;;3013:2;2998:18;;2992:25;2881:74;;-1:-1;;3026:30;;;3023:2;;;-1:-1;;3059:12;3023:2;3160:6;3149:9;3145:22;1302:6;1290:9;1285:3;1281:19;1277:32;1274:2;;;-1:-1;;1312:12;1274:2;1340:20;1355:4;1340:20;;;1331:29;;1484:22;2604:13;1434:16;1427:86;1618:88;1702:3;3013:2;1682:9;1678:22;1618:88;;;3013:2;1604:5;1600:16;1593:114;1813:88;1897:3;1780:2;1877:9;1873:22;1813:88;;;2823:2;1799:5;1795:16;1788:114;2004:88;2088:3;1970;2068:9;2064:22;2004:88;;;1780:2;1990:5;1986:16;1979:114;2192:60;2248:3;2158;2228:9;2224:22;2192:60;;;2185:4;2178:5;2174:16;2167:86;2336:3;2325:9;2321:19;2315:26;3037:18;2353:6;2350:30;2347:2;;;-1:-1;;2383:12;2347:2;2428:69;2493:3;2484:6;2473:9;2469:22;2428:69;;;1970:3;2414:5;2410:16;2403:95;;;;3079:98;;;;2785:408;;;;;;4353:475;4559:23;;-1:-1;8844:54;3261:37;;4732:4;4721:16;;;4715:23;4792:14;;6364:37;4465:363;6413:416;6613:2;6627:47;;;3865:2;6598:18;;;8444:19;-1:-1;8484:14;;;3881:34;3934:12;;;6584:245;6836:416;7036:2;7050:47;;;4185:2;7021:18;;;8444:19;-1:-1;8484:14;;;4201:38;4258:12;;;7007:245;7259:366;;7434:2;7455:17;7448:47;5129:16;5123:23;7434:2;7423:9;7419:18;6364:37;7434:2;5298:5;5294:16;5288:23;5317:119;5421:14;7423:9;5421:14;5407:12;5317:119;;;;5421:14;5520:5;5516:16;5510:23;5539:119;5643:14;7423:9;5643:14;5629:12;5539:119;;;;5652:4;5737:5;5733:16;5727:23;5756:119;5860:14;7423:9;5860:14;5846:12;5756:119;;;-1:-1;5643:14;5947:16;;5941:23;-1:-1;8844:54;6018:14;;;3261:37;-1:-1;6102:16;;6096:23;5045:6;6139:16;;;6132:40;8310:12;;5036:16;;;8444:19;;;8484:14;3525:52;8310:12;8484:14;;;7434:2;3547:16;;3525:52;;;8484:14;8133:9;;9354:2;3620:6;9334:14;9330:28;7423:9;3589:39;;7501:114;;;;;7405:220;;;;;7632:256;7694:2;7688:9;7720:17;;;7816:22;;;-1:-1;7780:34;;7777:62;7774:2;;;7852:1;;7842:12;7774:2;7694;7861:22;7672:216;;-1:-1;7672:216;8990:268;9055:1;9062:101;9076:6;9073:1;9070:13;9062:101;;;9143:11;;;9137:18;9124:11;;;9117:39;9098:2;9091:10;9062:101;;;9178:6;9175:1;9172:13;9169:2;;;9055:1;9234:6;9229:3;9225:16;9218:27;9169:2;;9039:219;;;;9371:117;-1:-1;8844:54;;9430:35;;9420:2;;9479:1;;9469:12;9420:2;9414:74;;;310:8290:3;;;;;;"
          },
          "deployedBytecode": {
            "immutableReferences": {},
            "linkReferences": {},
            "object": "608060405234801561001057600080fd5b506004361061018d5760003560e01c80637e8c7f08116100e3578063affed0e01161008c578063c8182af011610066578063c8182af014610344578063e1f1176d14610364578063ecb6cba61461036c5761018d565b8063affed0e014610316578063b9e9823f1461031e578063bdf9a726146103315761018d565b8063a0e975cb116100bd578063a0e975cb146102dd578063a157a10d146102f0578063aa455d9f146103035761018d565b80637e8c7f08146102a2578063869cb6b5146102b757806396fc8abd146102ca5761018d565b80633b1c5fc6116101455780635c44c0a71161011f5780635c44c0a71461025c5780635decc1901461026f5780637c10dea6146102825761018d565b80633b1c5fc614610223578063495a98251461023657806358849734146102495761018d565b80631c47671b116101765780631c47671b146101db57806325ddcbe0146101f0578063311a6c56146102105761018d565b806301ffc9a7146101925780630494812a146101bb575b600080fd5b6101a56101a036600461214c565b61037f565b6040516101b29190612696565b60405180910390f35b6101ce6101c9366004612292565b6103c3565b6040516101b29190612605565b6101ee6101e9366004611ffc565b6104eb565b005b6102036101fe3660046121fe565b610637565b6040516101b291906126a1565b6101ee61021e366004612378565b610837565b6102036102313660046121a0565b6108eb565b6101a561024436600461214c565b610908565b6101ee610257366004612168565b610931565b6101ee61026a3660046121fe565b6109c6565b61020361027d366004612231565b610a7c565b6102956102903660046120ca565b610f0b565b6040516101b2919061272d565b6102aa610f20565b6040516101b291906126aa565b6101ce6102c53660046121fe565b610f2b565b6101a56102d8366004612168565b610fae565b6101ee6102eb3660046120e2565b610fcb565b6101ee6102fe366004612168565b6110f6565b6102036103113660046121cb565b61118b565b610203611238565b6101ee61032c3660046122ed565b61123e565b6101ee61033f36600461214c565b611256565b6103576103523660046120ca565b6112ee565b6040516101b291906125b4565b610203611309565b6101ce61037a3660046121fe565b61130f565b60006001600160e01b031982167f88f3ee690000000000000000000000000000000000000000000000000000000014806103bd57506103bd82611475565b92915050565b606060006103d0846114b3565b9050600260008281526003602052604090205460ff1660068111156103f157fe5b141561045e578360200151608001516001600160a01b0316638bb04875846040518263ffffffff1660e01b815260040161042b91906126a1565b600060405180830381600087803b15801561044557600080fd5b505af1158015610459573d6000803e3d6000fd5b505050505b6000600360008381526003602052604090205460ff16600681111561047f57fe5b14905080156104985761049185610f2b565b92506104a1565b6104a1856109c6565b336001600160a01b0316827f027d8a5d945eb361475964ed2c71b8332b27af2d630ab5daf829d67afd2584e6836040516104db9190612696565b60405180910390a3505092915050565b3360009081527f8dafb0716dbdc5222f4b82fa3495e71054f736c761c542cfff5cf37ceef75d46602052604090205463161b7d8160e21b9060ff168061055a57506001600160e01b031981166000908152602081815260408083206001600160a01b03845290915290205460ff165b61057f5760405162461bcd60e51b8152600401610576906127c8565b60405180910390fd5b60005b825181101561063257610593611b9e565b83828151811061059f57fe5b60200260200101519050600060028111156105b657fe5b815160028111156105c357fe5b14156105e0576105db816020015182604001516114d2565b610629565b6001815160028111156105ef57fe5b1415610607576105db81602001518260400151611588565b60028151600281111561061657fe5b1415610629576106298160200151611611565b50600101610582565b505050565b3360009081527f7376c9dbe282dfb2c566016189e1800fbabc0b60b4cc83fc4490ac5761cad4a360205260408120547f25ddcbe0000000000000000000000000000000000000000000000000000000009060ff16806106bf57506001600160e01b031981166000908152602081815260408083206001600160a01b03845290915290205460ff165b6106db5760405162461bcd60e51b8152600401610576906127c8565b6002805460010190819055835151146107065760405162461bcd60e51b8152600401610576906127ff565b60006107158460200151611445565b905060015481146107385760405162461bcd60e51b815260040161057690612791565b8360200151600001514201846000015160200151101561076a5760405162461bcd60e51b815260040161057690612836565b8351604001516001600160a01b031633146107975760405162461bcd60e51b8152600401610576906128db565b6107ad6107a78560000151611691565b826116ed565b60008181526003602052604081209194506107d09190600163ffffffff61172216565b6107d8611bc0565b5060208085015101516107f1813363ffffffff61173616565b837f6e9c0ffd9c4371af6a9201d5257f695ebc739bd3459e9c7d477eca6768eec359866000015183604051610827929190612adf565b60405180910390a2505050919050565b336000818152600560209081526040808320868452909152902054610884600260048514610866576004610869565b60035b6000848152600360205260409020919063ffffffff61172216565b6001600160a01b038216600081815260056020908152604080832088845290915280822091909155518591907f56c8631a8915c0d362dbe57a61215fdde954f73f81c8a3a1f55572fb015207b1906108dd9087906126a1565b60405180910390a350505050565b600560209081526000928352604080842090915290825290205481565b6001600160e01b0319166000908152602081815260408083206001845290915290205460ff1690565b3360009081527f8dafb0716dbdc5222f4b82fa3495e71054f736c761c542cfff5cf37ceef75d46602052604090205463161b7d8160e21b9060ff16806109a057506001600160e01b031981166000908152602081815260408083206001600160a01b03845290915290205460ff165b6109bc5760405162461bcd60e51b8152600401610576906127c8565b6106328383611588565b60006109d1826114b3565b60008181526003602052604090209091506109f5906004600563ffffffff61172216565b60008181526004602090815260409091205483820151909101516001600160a01b0390911690610a2b908263ffffffff6117d916565b602083015160400151610a44908263ffffffff6117d916565b50600090815260046020526040902080547fffffffffffffffffffffffff000000000000000000000000000000000000000016905550565b3360009081527f5437ee176e989cb18b4abe7ef424bff2f7930e07ce482532fead6c9578d92c4060205260408120547f5decc190000000000000000000000000000000000000000000000000000000009060ff1680610b0457506001600160e01b031981166000908152602081815260408083206001600160a01b03845290915290205460ff165b610b205760405162461bcd60e51b8152600401610576906127c8565b6000610b2b856114b3565b600081815260046020908152604080832080547fffffffffffffffffffffffff0000000000000000000000000000000000000000163317905560039091529020909150610b81906001600263ffffffff61172216565b610b89611bc0565b50602085015160400151610ba3813363ffffffff61173616565b600086602001516080015190506000806000836001600160a01b0316637b751b9e6040518163ffffffff1660e01b815260040160606040518083038186803b158015610bee57600080fd5b505afa158015610c02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c269190611ef4565b91945092509050610c486001600160a01b03831633308463ffffffff61186d16565b610c645760405162461bcd60e51b8152600401610576906128a4565b610c7e6001600160a01b038316848363ffffffff6118eb16565b610c9a5760405162461bcd60e51b815260040161057690612980565b836001600160a01b031663c13517e160028c604051602001610cbc9190612aa6565b6040516020818303038152906040526040518363ffffffff1660e01b8152600401610ce8929190612741565b602060405180830381600087803b158015610d0257600080fd5b505af1158015610d16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3a91906122d5565b9750610d576001600160a01b03831684600063ffffffff6118eb16565b610d735760405162461bcd60e51b81526004016105769061286d565b8960000151604001516001600160a01b031688856001600160a01b03167f1988e4d59f596ba1a2d81e06874704a62502463ae6d99154f923e5edeb98392b8d6000015160a001516001604051610dca9291906126bf565b60405180910390a4336001600160a01b031688856001600160a01b03167f1988e4d59f596ba1a2d81e06874704a62502463ae6d99154f923e5edeb98392b8c6001604051610e199291906126bf565b60405180910390a46040517f7e9adccf0000000000000000000000000000000000000000000000000000000081526001600160a01b03851690637e9adccf90610e66908b906004016126a1565b600060405180830381600087803b158015610e8057600080fd5b505af1158015610e94573d6000803e3d6000fd5b5050506001600160a01b03851660009081526005602090815260408083208c8452909152908190208890555133915087907f429df837eb45b6713f725a0d3e57db939fd7dd7d58bb3cd967fa37091572db9f90610ef6908d908d908b90612705565b60405180910390a35050505050505092915050565b60036020526000908152604090205460ff1681565b63161b7d8160e21b81565b60606000610f38836114b3565b6000818152600360208190526040909120919250610f5e9190600663ffffffff61172216565b8251604001516020808501510151610f7b9163ffffffff6117d916565b8251604090810151602085015190910151610f9b9163ffffffff6117d916565b8251610fa79082611966565b9392505050565b600060208181529281526040808220909352908152205460ff1681565b3360009081527fce37bbbe099ffd049703ce63e8a4278f5d5ae5a7014d70676a104bd77e95a79560205260409020547fa0e975cb000000000000000000000000000000000000000000000000000000009060ff168061105357506001600160e01b031981166000908152602081815260408083206001600160a01b03845290915290205460ff165b61106f5760405162461bcd60e51b8152600401610576906127c8565b60006110838561107e86611445565b6116ed565b60008181526003602052604090209091506110a7906001600563ffffffff61172216565b336001600160a01b0316817fe703b40b97f0bda26ba2d80e910ebe89254d4fe6f13b7ee83dfea563eb73d64f8587606001516040516110e79291906126e3565b60405180910390a35050505050565b3360009081527f8dafb0716dbdc5222f4b82fa3495e71054f736c761c542cfff5cf37ceef75d46602052604090205463161b7d8160e21b9060ff168061116557506001600160e01b031981166000908152602081815260408083206001600160a01b03845290915290205460ff165b6111815760405162461bcd60e51b8152600401610576906127c8565b61063283836114d2565b3360009081527fe3acc4f5503a4661ff3859143dae57eb84d6eeec076606b992576354b60a6b5060205260408120547faa455d9f000000000000000000000000000000000000000000000000000000009060ff168061121357506001600160e01b031981166000908152602081815260408083206001600160a01b03845290915290205460ff165b61122f5760405162461bcd60e51b8152600401610576906127c8565b610fa783611a55565b60025481565b60405162461bcd60e51b815260040161057690612912565b3360009081527f8dafb0716dbdc5222f4b82fa3495e71054f736c761c542cfff5cf37ceef75d46602052604090205463161b7d8160e21b9060ff16806112c557506001600160e01b031981166000908152602081815260408083206001600160a01b03845290915290205460ff165b6112e15760405162461bcd60e51b8152600401610576906127c8565b6112ea82611611565b5050565b6004602052600090815260409020546001600160a01b031681565b60015481565b3360009081527f6e99e897067e581d1efa914c0236e290a87c4b08af2b020491ef6c4ea862aa0460205260409020546060907fecb6cba6000000000000000000000000000000000000000000000000000000009060ff168061139a57506001600160e01b031981166000908152602081815260408083206001600160a01b03845290915290205460ff165b6113b65760405162461bcd60e51b8152600401610576906127c8565b82516020015167ffffffffffffffff421610156113e55760405162461bcd60e51b8152600401610576906129ee565b60006113f0846114b3565b6000818152600360205260409020909150611414906001600663ffffffff61172216565b83516040015160208086015101516114319163ffffffff6117d916565b835161143d9082611966565b949350505050565b6000816040516020016114589190612a93565b604051602081830303815290604052805190602001209050919050565b60006001600160e01b031982167f9abf68a80000000000000000000000000000000000000000000000000000000014806103bd57506103bd82611aa8565b60006103bd6114c58360000151611691565b61107e8460200151611445565b6114db82610908565b156114f85760405162461bcd60e51b815260040161057690612949565b6001600160a01b038116600114156115225760405162461bcd60e51b815260040161057690612a5c565b6001600160e01b031982166000818152602081815260408083206001600160a01b0386168085529252808320805460ff19166001179055519092339290917f1c3ac05008a204aef806fb7b0a907c496ed107cd989825beb9df5f8094c2eabd9190a45050565b61159182610908565b156115ae5760405162461bcd60e51b815260040161057690612949565b6001600160e01b031982166000818152602081815260408083206001600160a01b0386168085529252808320805460ff19169055519092339290917f682f2c466c1e9f6883eb72cbced01373e1cb18b05ae5c8bc04dc73d73e29f8cd9190a45050565b61161a81610908565b156116375760405162461bcd60e51b815260040161057690612949565b6001600160e01b0319811660008181526020818152604080832060018085529252808320805460ff1916909217909155513392917f049c6b8b07a879425742523fa80f8ffb25e39ad518c93a5896a0df19518397e591a350565b600081600001518260400151836060015184608001516040516020016116b79190612683565b604051602081830303815290604052805190602001208560a001518051906020012060405160200161145895949392919061257b565b60003083836040516020016117049392919061252b565b60405160208183030381529060405280519060200120905092915050565b61172c8383611ada565b6106328382611b13565b6020820151156112ea5781516020830151611765906001600160a01b038316908490339063ffffffff61186d16565b6117815760405162461bcd60e51b815260040161057690612a25565b816001600160a01b031683600001516001600160a01b03167f484decdc1e9549e1866295f6f86c889ded3f7de410e7488a7a415978589dc8fd85602001516040516117cc91906126a1565b60405180910390a3505050565b6020820151156112ea5781516020830151611806906001600160a01b03831690849063ffffffff611b3416565b6118225760405162461bcd60e51b8152600401610576906129b7565b816001600160a01b031683600001516001600160a01b03167f2d87480f50083e2b2759522a8fdda59802650a8055e609a7772cf70c07748f5285602001516040516117cc91906126a1565b600060606323b872dd60e01b85858560405160240161188e939291906125c8565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b03199093169290921790915290506118e18682611b53565b9695505050505050565b6000606063095ea7b360e01b848460405160240161190a9291906125ec565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b031990931692909217909152905061195d8582611b53565b95945050505050565b60608281015160808401516040517f5c3e97600000000000000000000000000000000000000000000000000000000081526001600160a01b0390921691635c3e9760916119b591600401612683565b600060405180830381600087803b1580156119cf57600080fd5b505af11580156119e3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611a0b9190810190611f36565b9050336001600160a01b0316827f01aaa46eb73faf88e395ba771b10025a89b519744844021ff4f442b53ac6d19083604051611a479190612605565b60405180910390a392915050565b6000611a6082611445565b60018190556040513391907f071dadc36a9a359de148d456696ab20acf1980b6eac0e727f21a9925be8cf15990611a98908690612a93565b60405180910390a3505060015490565b6001600160e01b031981167f01ffc9a70000000000000000000000000000000000000000000000000000000014919050565b806006811115611ae657fe5b825460ff166006811115611af657fe5b146112ea5760405162461bcd60e51b81526004016105769061275a565b81548190839060ff19166001836006811115611b2b57fe5b02179055505050565b6000606063a9059cbb60e01b848460405160240161190a9291906125ec565b6000806040516020818551602087016000895af18015611b94573d8015611b815760208114611b8a57611b92565b60019350611b92565b600183511493505b505b5090949350505050565b6040805160608101909152806000815260006020820181905260409091015290565b604080518082019091526000808252602082015290565b80356103bd81612b8d565b600082601f830112611bf2578081fd5b8135611c05611c0082612b19565b612af2565b818152915060208083019084810160005b84811015611c9c5781358701606080601f19838c03011215611c3757600080fd5b611c4081612af2565b85830135611c4d81612b8d565b8152604083810135878301528284013567ffffffffffffffff811115611c7257600080fd5b611c808d8983880101611cbf565b9183019190915250865250509282019290820190600101611c16565b505050505092915050565b80356001600160e01b0319811681146103bd57600080fd5b600082601f830112611ccf578081fd5b8135611cdd611c0082612b39565b9150808252836020828501011115611cf457600080fd5b8060208401602084013760009082016020015292915050565b8035600381106103bd57600080fd5b600060408284031215611d2d578081fd5b611d376040612af2565b90508135611d4481612b8d565b808252506020820135602082015292915050565b60006101208284031215611d6a578081fd5b611d7460c0612af2565b905081358152611d878360208401611d1c565b6020820152611d998360608401611d1c565b6040820152611dab8360a08401611d1c565b606082015260e0820135611dbe81612b8d565b608082015261010082013567ffffffffffffffff811115611dde57600080fd5b611dea84828501611cbf565b60a08301525092915050565b600060408284031215611e07578081fd5b611e116040612af2565b9050813567ffffffffffffffff80821115611e2b57600080fd5b81840160c08187031215611e3e57600080fd5b611e4860c0612af2565b92508035835260208101356020840152611e658660408301611bd7565b6040840152611e778660608301611bd7565b6060840152608081013582811115611e8e57600080fd5b611e9a87828401611be2565b60808501525060a081013582811115611eb257600080fd5b611ebe87828401611cbf565b60a0850152505090825260208301359080821115611edb57600080fd5b50611ee884828501611d58565b60208301525092915050565b600080600060608486031215611f08578283fd5b8351611f1381612b8d565b6020850151909350611f2481612b8d565b80925050604084015190509250925092565b60006020808385031215611f48578182fd5b825167ffffffffffffffff811115611f5e578283fd5b80840185601f820112611f6f578384fd5b80519150611f7f611c0083612b19565b82815283810190828501865b85811015611fee57815185018a603f820112611fa5578889fd5b87810151611fb5611c0082612b39565b81815260408d81848601011115611fca578b8cfd5b611fd9838c8401838701612b5d565b50865250509286019290860190600101611f8b565b509098975050505050505050565b6000602080838503121561200e578182fd5b823567ffffffffffffffff811115612024578283fd5b80840185601f820112612035578384fd5b80359150612045611c0083612b19565b828152838101908285016060808602850187018a1015612063578788fd5b8794505b85851015611fee5780828b03121561207d578788fd5b61208681612af2565b6120908b84611d0d565b815261209e8b898501611ca7565b8882015260406120b08c828601611bd7565b908201528452600194909401939286019290810190612067565b6000602082840312156120db578081fd5b5035919050565b6000806000606084860312156120f6578081fd5b83359250602084013567ffffffffffffffff80821115612114578283fd5b61212087838801611d58565b93506040860135915080821115612135578283fd5b5061214286828701611cbf565b9150509250925092565b60006020828403121561215d578081fd5b8135610fa781612ba5565b6000806040838503121561217a578182fd5b823561218581612ba5565b9150602083013561219581612b8d565b809150509250929050565b600080604083850312156121b2578182fd5b82356121bd81612b8d565b946020939093013593505050565b6000602082840312156121dc578081fd5b813567ffffffffffffffff8111156121f2578182fd5b61143d84828501611d58565b60006020828403121561220f578081fd5b813567ffffffffffffffff811115612225578182fd5b61143d84828501611df6565b60008060408385031215612243578182fd5b823567ffffffffffffffff8082111561225a578384fd5b61226686838701611df6565b9350602085013591508082111561227b578283fd5b5061228885828601611cbf565b9150509250929050565b600080604083850312156122a4578182fd5b823567ffffffffffffffff8111156122ba578283fd5b6122c685828601611df6565b95602094909401359450505050565b6000602082840312156122e6578081fd5b5051919050565b60008060008060608587031215612302578182fd5b84359350602085013567ffffffffffffffff80821115612320578384fd5b81870188601f820112612331578485fd5b8035925081831115612341578485fd5b886020848301011115612352578485fd5b6020019450909250506040850135801515811461236d578182fd5b939692955090935050565b6000806040838503121561238a578182fd5b50508035926020909101359150565b6000815180845260208085018081965082840281019150828601855b85811015612408578284038952815160606001600160a01b038251168652868201518787015260408083015182828901526123f283890182612415565b9c89019c975050509286019250506001016123b5565b5091979650505050505050565b6000815180845261242d816020860160208601612b5d565b601f01601f19169290920160200192915050565b80516001600160a01b03168252602090810151910152565b60006101208251845260208301516124746020860182612441565b5060408301516124876060860182612441565b50606083015161249a60a0860182612441565b506001600160a01b0360808401511660e085015260a08301518161010086015261195d82860182612415565b6000815183526020820151602084015260408201516001600160a01b0380821660408601528060608501511660608601525050608082015160c0608085015261251260c0850182612399565b60a0840151915084810360a086015261195d8183612415565b7f657263336b2d7631000000000000000000000000000000000000000000000000815260609390931b6bffffffffffffffffffffffff19166008840152601c830191909152603c820152605c0190565b9485526bffffffffffffffffffffffff19606094851b811660208701529290931b90911660348401526048830152606882015260880190565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6000602080830181845280855180835260408601915060408482028701019250838701855b82811015612676577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452612664858351612415565b9450928501929085019060010161262a565b5092979650505050505050565b600060208252610fa76020830184612399565b901515815260200190565b90815260200190565b6001600160e01b031991909116815260200190565b6000604082526126d26040830185612415565b905082151560208301529392505050565b6000606082526126f66060830185612415565b9050610fa76020830184612441565b6000608082526127186080830186612415565b905083602083015261143d6040830184612441565b602081016007831061273b57fe5b91905290565b60008382526040602083015261143d6040830184612415565b60208082526010908201527f71756575653a2062616420737461746500000000000000000000000000000000604082015260600190565b60208082526011908201527f71756575653a2062616420636f6e666967000000000000000000000000000000604082015260600190565b60208082526009908201527f61636c3a20617574680000000000000000000000000000000000000000000000604082015260600190565b60208082526010908201527f71756575653a20626164206e6f6e636500000000000000000000000000000000604082015260600190565b60208082526010908201527f71756575653a206261642064656c617900000000000000000000000000000000604082015260600190565b60208082526010908201527f71756575653a2062616420726573657400000000000000000000000000000000604082015260600190565b60208082526013908201527f71756575653a20626164206665652070756c6c00000000000000000000000000604082015260600190565b60208082526014908201527f71756575653a20626164207375626d6974746572000000000000000000000000604082015260600190565b6020808252600f908201527f71756575653a2065766964656e63650000000000000000000000000000000000604082015260600190565b6020808252600b908201527f61636c3a2066726f7a656e000000000000000000000000000000000000000000604082015260600190565b60208082526012908201527f71756575653a2062616420617070726f76650000000000000000000000000000604082015260600190565b60208082526015908201527f71756575653a206261642073656e6420746f6b656e0000000000000000000000604082015260600190565b60208082526010908201527f71756575653a2077616974206d6f726500000000000000000000000000000000604082015260600190565b60208082526014908201527f71756575653a206261642067657420746f6b656e000000000000000000000000604082015260600190565b6020808252600f908201527f61636c3a2062616420667265657a650000000000000000000000000000000000604082015260600190565b600060208252610fa76020830184612459565b600060208252825160406020840152612ac260608401826124c6565b60208501519150601f1984820301604085015261195d8183612459565b6000606082526126f660608301856124c6565b60405181810167ffffffffffffffff81118282101715612b1157600080fd5b604052919050565b600067ffffffffffffffff821115612b2f578081fd5b5060209081020190565b600067ffffffffffffffff821115612b4f578081fd5b50601f01601f191660200190565b60005b83811015612b78578181015183820152602001612b60565b83811115612b87576000848401525b50505050565b6001600160a01b0381168114612ba257600080fd5b50565b6001600160e01b031981168114612ba257600080fdfea2646970667358221220b4d767f59eecf7443ec6dd7c5d6a380d4533e255a757860edd0dfe15a53a883e64736f6c63430006080033",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E8C7F08 GT PUSH2 0xE3 JUMPI DUP1 PUSH4 0xAFFED0E0 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xC8182AF0 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xC8182AF0 EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0xE1F1176D EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0xECB6CBA6 EQ PUSH2 0x36C JUMPI PUSH2 0x18D JUMP JUMPDEST DUP1 PUSH4 0xAFFED0E0 EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0xB9E9823F EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0xBDF9A726 EQ PUSH2 0x331 JUMPI PUSH2 0x18D JUMP JUMPDEST DUP1 PUSH4 0xA0E975CB GT PUSH2 0xBD JUMPI DUP1 PUSH4 0xA0E975CB EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0xA157A10D EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0xAA455D9F EQ PUSH2 0x303 JUMPI PUSH2 0x18D JUMP JUMPDEST DUP1 PUSH4 0x7E8C7F08 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x869CB6B5 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x96FC8ABD EQ PUSH2 0x2CA JUMPI PUSH2 0x18D JUMP JUMPDEST DUP1 PUSH4 0x3B1C5FC6 GT PUSH2 0x145 JUMPI DUP1 PUSH4 0x5C44C0A7 GT PUSH2 0x11F JUMPI DUP1 PUSH4 0x5C44C0A7 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x5DECC190 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x7C10DEA6 EQ PUSH2 0x282 JUMPI PUSH2 0x18D JUMP JUMPDEST DUP1 PUSH4 0x3B1C5FC6 EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x495A9825 EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x58849734 EQ PUSH2 0x249 JUMPI PUSH2 0x18D JUMP JUMPDEST DUP1 PUSH4 0x1C47671B GT PUSH2 0x176 JUMPI DUP1 PUSH4 0x1C47671B EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x25DDCBE0 EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x311A6C56 EQ PUSH2 0x210 JUMPI PUSH2 0x18D JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x494812A EQ PUSH2 0x1BB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A5 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x214C JUMP JUMPDEST PUSH2 0x37F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x2696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2292 JUMP JUMPDEST PUSH2 0x3C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x2605 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x1E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FFC JUMP JUMPDEST PUSH2 0x4EB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x203 PUSH2 0x1FE CALLDATASIZE PUSH1 0x4 PUSH2 0x21FE JUMP JUMPDEST PUSH2 0x637 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x26A1 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x21E CALLDATASIZE PUSH1 0x4 PUSH2 0x2378 JUMP JUMPDEST PUSH2 0x837 JUMP JUMPDEST PUSH2 0x203 PUSH2 0x231 CALLDATASIZE PUSH1 0x4 PUSH2 0x21A0 JUMP JUMPDEST PUSH2 0x8EB JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x244 CALLDATASIZE PUSH1 0x4 PUSH2 0x214C JUMP JUMPDEST PUSH2 0x908 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x257 CALLDATASIZE PUSH1 0x4 PUSH2 0x2168 JUMP JUMPDEST PUSH2 0x931 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x26A CALLDATASIZE PUSH1 0x4 PUSH2 0x21FE JUMP JUMPDEST PUSH2 0x9C6 JUMP JUMPDEST PUSH2 0x203 PUSH2 0x27D CALLDATASIZE PUSH1 0x4 PUSH2 0x2231 JUMP JUMPDEST PUSH2 0xA7C JUMP JUMPDEST PUSH2 0x295 PUSH2 0x290 CALLDATASIZE PUSH1 0x4 PUSH2 0x20CA JUMP JUMPDEST PUSH2 0xF0B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x272D JUMP JUMPDEST PUSH2 0x2AA PUSH2 0xF20 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x26AA JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x2C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x21FE JUMP JUMPDEST PUSH2 0xF2B JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x2D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2168 JUMP JUMPDEST PUSH2 0xFAE JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x2EB CALLDATASIZE PUSH1 0x4 PUSH2 0x20E2 JUMP JUMPDEST PUSH2 0xFCB JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x2FE CALLDATASIZE PUSH1 0x4 PUSH2 0x2168 JUMP JUMPDEST PUSH2 0x10F6 JUMP JUMPDEST PUSH2 0x203 PUSH2 0x311 CALLDATASIZE PUSH1 0x4 PUSH2 0x21CB JUMP JUMPDEST PUSH2 0x118B JUMP JUMPDEST PUSH2 0x203 PUSH2 0x1238 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x32C CALLDATASIZE PUSH1 0x4 PUSH2 0x22ED JUMP JUMPDEST PUSH2 0x123E JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x33F CALLDATASIZE PUSH1 0x4 PUSH2 0x214C JUMP JUMPDEST PUSH2 0x1256 JUMP JUMPDEST PUSH2 0x357 PUSH2 0x352 CALLDATASIZE PUSH1 0x4 PUSH2 0x20CA JUMP JUMPDEST PUSH2 0x12EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x25B4 JUMP JUMPDEST PUSH2 0x203 PUSH2 0x1309 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x37A CALLDATASIZE PUSH1 0x4 PUSH2 0x21FE JUMP JUMPDEST PUSH2 0x130F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0x88F3EE6900000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x3BD JUMPI POP PUSH2 0x3BD DUP3 PUSH2 0x1475 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x3D0 DUP5 PUSH2 0x14B3 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x3F1 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x45E JUMPI DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x80 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8BB04875 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42B SWAP2 SWAP1 PUSH2 0x26A1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x445 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x459 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x47F JUMPI INVALID JUMPDEST EQ SWAP1 POP DUP1 ISZERO PUSH2 0x498 JUMPI PUSH2 0x491 DUP6 PUSH2 0xF2B JUMP JUMPDEST SWAP3 POP PUSH2 0x4A1 JUMP JUMPDEST PUSH2 0x4A1 DUP6 PUSH2 0x9C6 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH32 0x27D8A5D945EB361475964ED2C71B8332B27AF2D630AB5DAF829D67AFD2584E6 DUP4 PUSH1 0x40 MLOAD PUSH2 0x4DB SWAP2 SWAP1 PUSH2 0x2696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x8DAFB0716DBDC5222F4B82FA3495E71054F736C761C542CFFF5CF37CEEF75D46 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0x161B7D81 PUSH1 0xE2 SHL SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x55A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x57F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x632 JUMPI PUSH2 0x593 PUSH2 0x1B9E JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x59F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x5B6 JUMPI INVALID JUMPDEST DUP2 MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x5C3 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x5E0 JUMPI PUSH2 0x5DB DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0x14D2 JUMP JUMPDEST PUSH2 0x629 JUMP JUMPDEST PUSH1 0x1 DUP2 MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x5EF JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x607 JUMPI PUSH2 0x5DB DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0x1588 JUMP JUMPDEST PUSH1 0x2 DUP2 MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x616 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x629 JUMPI PUSH2 0x629 DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0x1611 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x582 JUMP JUMPDEST POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x7376C9DBE282DFB2C566016189E1800FBABC0B60B4CC83FC4490AC5761CAD4A3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH32 0x25DDCBE000000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x6BF JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x6DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 DUP2 SWAP1 SSTORE DUP4 MLOAD MLOAD EQ PUSH2 0x706 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x27FF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x715 DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0x1445 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0x738 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x2791 JUMP JUMPDEST DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x0 ADD MLOAD TIMESTAMP ADD DUP5 PUSH1 0x0 ADD MLOAD PUSH1 0x20 ADD MLOAD LT ISZERO PUSH2 0x76A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x2836 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x797 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x28DB JUMP JUMPDEST PUSH2 0x7AD PUSH2 0x7A7 DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x1691 JUMP JUMPDEST DUP3 PUSH2 0x16ED JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP5 POP PUSH2 0x7D0 SWAP2 SWAP1 PUSH1 0x1 PUSH4 0xFFFFFFFF PUSH2 0x1722 AND JUMP JUMPDEST PUSH2 0x7D8 PUSH2 0x1BC0 JUMP JUMPDEST POP PUSH1 0x20 DUP1 DUP6 ADD MLOAD ADD MLOAD PUSH2 0x7F1 DUP2 CALLER PUSH4 0xFFFFFFFF PUSH2 0x1736 AND JUMP JUMPDEST DUP4 PUSH32 0x6E9C0FFD9C4371AF6A9201D5257F695EBC739BD3459E9C7D477ECA6768EEC359 DUP7 PUSH1 0x0 ADD MLOAD DUP4 PUSH1 0x40 MLOAD PUSH2 0x827 SWAP3 SWAP2 SWAP1 PUSH2 0x2ADF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x884 PUSH1 0x2 PUSH1 0x4 DUP6 EQ PUSH2 0x866 JUMPI PUSH1 0x4 PUSH2 0x869 JUMP JUMPDEST PUSH1 0x3 JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1722 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE MLOAD DUP6 SWAP2 SWAP1 PUSH32 0x56C8631A8915C0D362DBE57A61215FDDE954F73F81C8A3A1F55572FB015207B1 SWAP1 PUSH2 0x8DD SWAP1 DUP8 SWAP1 PUSH2 0x26A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x8DAFB0716DBDC5222F4B82FA3495E71054F736C761C542CFFF5CF37CEEF75D46 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0x161B7D81 PUSH1 0xE2 SHL SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x9A0 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x9BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH2 0x632 DUP4 DUP4 PUSH2 0x1588 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D1 DUP3 PUSH2 0x14B3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 SWAP2 POP PUSH2 0x9F5 SWAP1 PUSH1 0x4 PUSH1 0x5 PUSH4 0xFFFFFFFF PUSH2 0x1722 AND JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD DUP4 DUP3 ADD MLOAD SWAP1 SWAP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0xA2B SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x17D9 AND JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH2 0xA44 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x17D9 AND JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP1 SSTORE POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x5437EE176E989CB18B4ABE7EF424BFF2F7930E07CE482532FEAD6C9578D92C40 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH32 0x5DECC19000000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0xB04 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0xB20 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB2B DUP6 PUSH2 0x14B3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND CALLER OR SWAP1 SSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SWAP1 SWAP2 POP PUSH2 0xB81 SWAP1 PUSH1 0x1 PUSH1 0x2 PUSH4 0xFFFFFFFF PUSH2 0x1722 AND JUMP JUMPDEST PUSH2 0xB89 PUSH2 0x1BC0 JUMP JUMPDEST POP PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH2 0xBA3 DUP2 CALLER PUSH4 0xFFFFFFFF PUSH2 0x1736 AND JUMP JUMPDEST PUSH1 0x0 DUP7 PUSH1 0x20 ADD MLOAD PUSH1 0x80 ADD MLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7B751B9E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC02 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC26 SWAP2 SWAP1 PUSH2 0x1EF4 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP PUSH2 0xC48 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER ADDRESS DUP5 PUSH4 0xFFFFFFFF PUSH2 0x186D AND JUMP JUMPDEST PUSH2 0xC64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x28A4 JUMP JUMPDEST PUSH2 0xC7E PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP5 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x18EB AND JUMP JUMPDEST PUSH2 0xC9A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x2980 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC13517E1 PUSH1 0x2 DUP13 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCBC SWAP2 SWAP1 PUSH2 0x2AA6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE8 SWAP3 SWAP2 SWAP1 PUSH2 0x2741 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD16 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD3A SWAP2 SWAP1 PUSH2 0x22D5 JUMP JUMPDEST SWAP8 POP PUSH2 0xD57 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP5 PUSH1 0x0 PUSH4 0xFFFFFFFF PUSH2 0x18EB AND JUMP JUMPDEST PUSH2 0xD73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x286D JUMP JUMPDEST DUP10 PUSH1 0x0 ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x1988E4D59F596BA1A2D81E06874704A62502463AE6D99154F923E5EDEB98392B DUP14 PUSH1 0x0 ADD MLOAD PUSH1 0xA0 ADD MLOAD PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xDCA SWAP3 SWAP2 SWAP1 PUSH2 0x26BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x1988E4D59F596BA1A2D81E06874704A62502463AE6D99154F923E5EDEB98392B DUP13 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xE19 SWAP3 SWAP2 SWAP1 PUSH2 0x26BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x40 MLOAD PUSH32 0x7E9ADCCF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x7E9ADCCF SWAP1 PUSH2 0xE66 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x26A1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE94 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP13 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP9 SWAP1 SSTORE MLOAD CALLER SWAP2 POP DUP8 SWAP1 PUSH32 0x429DF837EB45B6713F725A0D3E57DB939FD7DD7D58BB3CD967FA37091572DB9F SWAP1 PUSH2 0xEF6 SWAP1 DUP14 SWAP1 DUP14 SWAP1 DUP12 SWAP1 PUSH2 0x2705 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH4 0x161B7D81 PUSH1 0xE2 SHL DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xF38 DUP4 PUSH2 0x14B3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP3 POP PUSH2 0xF5E SWAP2 SWAP1 PUSH1 0x6 PUSH4 0xFFFFFFFF PUSH2 0x1722 AND JUMP JUMPDEST DUP3 MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x20 DUP1 DUP6 ADD MLOAD ADD MLOAD PUSH2 0xF7B SWAP2 PUSH4 0xFFFFFFFF PUSH2 0x17D9 AND JUMP JUMPDEST DUP3 MLOAD PUSH1 0x40 SWAP1 DUP2 ADD MLOAD PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP2 ADD MLOAD PUSH2 0xF9B SWAP2 PUSH4 0xFFFFFFFF PUSH2 0x17D9 AND JUMP JUMPDEST DUP3 MLOAD PUSH2 0xFA7 SWAP1 DUP3 PUSH2 0x1966 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 DUP2 MSTORE SWAP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 MSTORE SWAP1 DUP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xCE37BBBE099FFD049703CE63E8A4278F5D5AE5A7014D70676A104BD77E95A795 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH32 0xA0E975CB00000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x1053 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x106F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1083 DUP6 PUSH2 0x107E DUP7 PUSH2 0x1445 JUMP JUMPDEST PUSH2 0x16ED JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 SWAP2 POP PUSH2 0x10A7 SWAP1 PUSH1 0x1 PUSH1 0x5 PUSH4 0xFFFFFFFF PUSH2 0x1722 AND JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH32 0xE703B40B97F0BDA26BA2D80E910EBE89254D4FE6F13B7EE83DFEA563EB73D64F DUP6 DUP8 PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x10E7 SWAP3 SWAP2 SWAP1 PUSH2 0x26E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x8DAFB0716DBDC5222F4B82FA3495E71054F736C761C542CFFF5CF37CEEF75D46 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0x161B7D81 PUSH1 0xE2 SHL SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x1165 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x1181 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH2 0x632 DUP4 DUP4 PUSH2 0x14D2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xE3ACC4F5503A4661FF3859143DAE57EB84D6EEEC076606B992576354B60A6B50 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH32 0xAA455D9F00000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x1213 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x122F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH2 0xFA7 DUP4 PUSH2 0x1A55 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x2912 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x8DAFB0716DBDC5222F4B82FA3495E71054F736C761C542CFFF5CF37CEEF75D46 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0x161B7D81 PUSH1 0xE2 SHL SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x12C5 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x12E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH2 0x12EA DUP3 PUSH2 0x1611 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x6E99E897067E581D1EFA914C0236E290A87C4B08AF2B020491EF6C4EA862AA04 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH32 0xECB6CBA600000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x139A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x13B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x20 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF TIMESTAMP AND LT ISZERO PUSH2 0x13E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x29EE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13F0 DUP5 PUSH2 0x14B3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 SWAP2 POP PUSH2 0x1414 SWAP1 PUSH1 0x1 PUSH1 0x6 PUSH4 0xFFFFFFFF PUSH2 0x1722 AND JUMP JUMPDEST DUP4 MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x20 DUP1 DUP7 ADD MLOAD ADD MLOAD PUSH2 0x1431 SWAP2 PUSH4 0xFFFFFFFF PUSH2 0x17D9 AND JUMP JUMPDEST DUP4 MLOAD PUSH2 0x143D SWAP1 DUP3 PUSH2 0x1966 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1458 SWAP2 SWAP1 PUSH2 0x2A93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0x9ABF68A800000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x3BD JUMPI POP PUSH2 0x3BD DUP3 PUSH2 0x1AA8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BD PUSH2 0x14C5 DUP4 PUSH1 0x0 ADD MLOAD PUSH2 0x1691 JUMP JUMPDEST PUSH2 0x107E DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0x1445 JUMP JUMPDEST PUSH2 0x14DB DUP3 PUSH2 0x908 JUMP JUMPDEST ISZERO PUSH2 0x14F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x2949 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 EQ ISZERO PUSH2 0x1522 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x2A5C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD SWAP1 SWAP3 CALLER SWAP3 SWAP1 SWAP2 PUSH32 0x1C3AC05008A204AEF806FB7B0A907C496ED107CD989825BEB9DF5F8094C2EABD SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x1591 DUP3 PUSH2 0x908 JUMP JUMPDEST ISZERO PUSH2 0x15AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x2949 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD SWAP1 SWAP3 CALLER SWAP3 SWAP1 SWAP2 PUSH32 0x682F2C466C1E9F6883EB72CBCED01373E1CB18B05AE5C8BC04DC73D73E29F8CD SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x161A DUP2 PUSH2 0x908 JUMP JUMPDEST ISZERO PUSH2 0x1637 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x2949 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE MLOAD CALLER SWAP3 SWAP2 PUSH32 0x49C6B8B07A879425742523FA80F8FFB25E39AD518C93A5896A0DF19518397E5 SWAP2 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD DUP4 PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x80 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x16B7 SWAP2 SWAP1 PUSH2 0x2683 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP6 PUSH1 0xA0 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1458 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x257B JUMP JUMPDEST PUSH1 0x0 ADDRESS DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1704 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x252B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x172C DUP4 DUP4 PUSH2 0x1ADA JUMP JUMPDEST PUSH2 0x632 DUP4 DUP3 PUSH2 0x1B13 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD ISZERO PUSH2 0x12EA JUMPI DUP2 MLOAD PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x1765 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP5 SWAP1 CALLER SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x186D AND JUMP JUMPDEST PUSH2 0x1781 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x2A25 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x484DECDC1E9549E1866295F6F86C889DED3F7DE410E7488A7A415978589DC8FD DUP6 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x17CC SWAP2 SWAP1 PUSH2 0x26A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD ISZERO PUSH2 0x12EA JUMPI DUP2 MLOAD PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x1806 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP5 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1B34 AND JUMP JUMPDEST PUSH2 0x1822 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x29B7 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x2D87480F50083E2B2759522A8FDDA59802650A8055E609A7772CF70C07748F52 DUP6 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x17CC SWAP2 SWAP1 PUSH2 0x26A1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x188E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25C8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE SWAP1 POP PUSH2 0x18E1 DUP7 DUP3 PUSH2 0x1B53 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x190A SWAP3 SWAP2 SWAP1 PUSH2 0x25EC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE SWAP1 POP PUSH2 0x195D DUP6 DUP3 PUSH2 0x1B53 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 DUP2 ADD MLOAD PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x40 MLOAD PUSH32 0x5C3E976000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x5C3E9760 SWAP2 PUSH2 0x19B5 SWAP2 PUSH1 0x4 ADD PUSH2 0x2683 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x19E3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1A0B SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1F36 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH32 0x1AAA46EB73FAF88E395BA771B10025A89B519744844021FF4F442B53AC6D190 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1A47 SWAP2 SWAP1 PUSH2 0x2605 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A60 DUP3 PUSH2 0x1445 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD CALLER SWAP2 SWAP1 PUSH32 0x71DADC36A9A359DE148D456696AB20ACF1980B6EAC0E727F21A9925BE8CF159 SWAP1 PUSH2 0x1A98 SWAP1 DUP7 SWAP1 PUSH2 0x2A93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x1AE6 JUMPI INVALID JUMPDEST DUP3 SLOAD PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x1AF6 JUMPI INVALID JUMPDEST EQ PUSH2 0x12EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x275A JUMP JUMPDEST DUP2 SLOAD DUP2 SWAP1 DUP4 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x1B2B JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x190A SWAP3 SWAP2 SWAP1 PUSH2 0x25EC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP6 MLOAD PUSH1 0x20 DUP8 ADD PUSH1 0x0 DUP10 GAS CALL DUP1 ISZERO PUSH2 0x1B94 JUMPI RETURNDATASIZE DUP1 ISZERO PUSH2 0x1B81 JUMPI PUSH1 0x20 DUP2 EQ PUSH2 0x1B8A JUMPI PUSH2 0x1B92 JUMP JUMPDEST PUSH1 0x1 SWAP4 POP PUSH2 0x1B92 JUMP JUMPDEST PUSH1 0x1 DUP4 MLOAD EQ SWAP4 POP JUMPDEST POP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP2 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x3BD DUP2 PUSH2 0x2B8D JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1BF2 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1C05 PUSH2 0x1C00 DUP3 PUSH2 0x2B19 JUMP JUMPDEST PUSH2 0x2AF2 JUMP JUMPDEST DUP2 DUP2 MSTORE SWAP2 POP PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP5 DUP2 ADD PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1C9C JUMPI DUP2 CALLDATALOAD DUP8 ADD PUSH1 0x60 DUP1 PUSH1 0x1F NOT DUP4 DUP13 SUB ADD SLT ISZERO PUSH2 0x1C37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C40 DUP2 PUSH2 0x2AF2 JUMP JUMPDEST DUP6 DUP4 ADD CALLDATALOAD PUSH2 0x1C4D DUP2 PUSH2 0x2B8D JUMP JUMPDEST DUP2 MSTORE PUSH1 0x40 DUP4 DUP2 ADD CALLDATALOAD DUP8 DUP4 ADD MSTORE DUP3 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C80 DUP14 DUP10 DUP4 DUP9 ADD ADD PUSH2 0x1CBF JUMP JUMPDEST SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP7 MSTORE POP POP SWAP3 DUP3 ADD SWAP3 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1C16 JUMP JUMPDEST POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1CCF JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1CDD PUSH2 0x1C00 DUP3 PUSH2 0x2B39 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1CF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH1 0x0 SWAP1 DUP3 ADD PUSH1 0x20 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D2D JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1D37 PUSH1 0x40 PUSH2 0x2AF2 JUMP JUMPDEST SWAP1 POP DUP2 CALLDATALOAD PUSH2 0x1D44 DUP2 PUSH2 0x2B8D JUMP JUMPDEST DUP1 DUP3 MSTORE POP PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D6A JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1D74 PUSH1 0xC0 PUSH2 0x2AF2 JUMP JUMPDEST SWAP1 POP DUP2 CALLDATALOAD DUP2 MSTORE PUSH2 0x1D87 DUP4 PUSH1 0x20 DUP5 ADD PUSH2 0x1D1C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1D99 DUP4 PUSH1 0x60 DUP5 ADD PUSH2 0x1D1C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1DAB DUP4 PUSH1 0xA0 DUP5 ADD PUSH2 0x1D1C JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xE0 DUP3 ADD CALLDATALOAD PUSH2 0x1DBE DUP2 PUSH2 0x2B8D JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x100 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DEA DUP5 DUP3 DUP6 ADD PUSH2 0x1CBF JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E07 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1E11 PUSH1 0x40 PUSH2 0x2AF2 JUMP JUMPDEST SWAP1 POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1E2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD PUSH1 0xC0 DUP2 DUP8 SUB SLT ISZERO PUSH2 0x1E3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E48 PUSH1 0xC0 PUSH2 0x2AF2 JUMP JUMPDEST SWAP3 POP DUP1 CALLDATALOAD DUP4 MSTORE PUSH1 0x20 DUP2 ADD CALLDATALOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1E65 DUP7 PUSH1 0x40 DUP4 ADD PUSH2 0x1BD7 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1E77 DUP7 PUSH1 0x60 DUP4 ADD PUSH2 0x1BD7 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP2 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0x1E8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E9A DUP8 DUP3 DUP5 ADD PUSH2 0x1BE2 JUMP JUMPDEST PUSH1 0x80 DUP6 ADD MSTORE POP PUSH1 0xA0 DUP2 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0x1EB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EBE DUP8 DUP3 DUP5 ADD PUSH2 0x1CBF JUMP JUMPDEST PUSH1 0xA0 DUP6 ADD MSTORE POP POP SWAP1 DUP3 MSTORE PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x1EDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EE8 DUP5 DUP3 DUP6 ADD PUSH2 0x1D58 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F08 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 MLOAD PUSH2 0x1F13 DUP2 PUSH2 0x2B8D JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH2 0x1F24 DUP2 PUSH2 0x2B8D JUMP JUMPDEST DUP1 SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F48 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F5E JUMPI DUP3 DUP4 REVERT JUMPDEST DUP1 DUP5 ADD DUP6 PUSH1 0x1F DUP3 ADD SLT PUSH2 0x1F6F JUMPI DUP4 DUP5 REVERT JUMPDEST DUP1 MLOAD SWAP2 POP PUSH2 0x1F7F PUSH2 0x1C00 DUP4 PUSH2 0x2B19 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP4 DUP2 ADD SWAP1 DUP3 DUP6 ADD DUP7 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1FEE JUMPI DUP2 MLOAD DUP6 ADD DUP11 PUSH1 0x3F DUP3 ADD SLT PUSH2 0x1FA5 JUMPI DUP9 DUP10 REVERT JUMPDEST DUP8 DUP2 ADD MLOAD PUSH2 0x1FB5 PUSH2 0x1C00 DUP3 PUSH2 0x2B39 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x40 DUP14 DUP2 DUP5 DUP7 ADD ADD GT ISZERO PUSH2 0x1FCA JUMPI DUP12 DUP13 REVERT JUMPDEST PUSH2 0x1FD9 DUP4 DUP13 DUP5 ADD DUP4 DUP8 ADD PUSH2 0x2B5D JUMP JUMPDEST POP DUP7 MSTORE POP POP SWAP3 DUP7 ADD SWAP3 SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1F8B JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x200E JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2024 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP1 DUP5 ADD DUP6 PUSH1 0x1F DUP3 ADD SLT PUSH2 0x2035 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP2 POP PUSH2 0x2045 PUSH2 0x1C00 DUP4 PUSH2 0x2B19 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP4 DUP2 ADD SWAP1 DUP3 DUP6 ADD PUSH1 0x60 DUP1 DUP7 MUL DUP6 ADD DUP8 ADD DUP11 LT ISZERO PUSH2 0x2063 JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP5 POP JUMPDEST DUP6 DUP6 LT ISZERO PUSH2 0x1FEE JUMPI DUP1 DUP3 DUP12 SUB SLT ISZERO PUSH2 0x207D JUMPI DUP8 DUP9 REVERT JUMPDEST PUSH2 0x2086 DUP2 PUSH2 0x2AF2 JUMP JUMPDEST PUSH2 0x2090 DUP12 DUP5 PUSH2 0x1D0D JUMP JUMPDEST DUP2 MSTORE PUSH2 0x209E DUP12 DUP10 DUP6 ADD PUSH2 0x1CA7 JUMP JUMPDEST DUP9 DUP3 ADD MSTORE PUSH1 0x40 PUSH2 0x20B0 DUP13 DUP3 DUP7 ADD PUSH2 0x1BD7 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE DUP5 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP3 DUP7 ADD SWAP3 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2067 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20DB JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x20F6 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2114 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x2120 DUP8 DUP4 DUP9 ADD PUSH2 0x1D58 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2135 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x2142 DUP7 DUP3 DUP8 ADD PUSH2 0x1CBF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x215D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xFA7 DUP2 PUSH2 0x2BA5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x217A JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2185 DUP2 PUSH2 0x2BA5 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2195 DUP2 PUSH2 0x2B8D JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21B2 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x21BD DUP2 PUSH2 0x2B8D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21DC JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21F2 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x143D DUP5 DUP3 DUP6 ADD PUSH2 0x1D58 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x220F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2225 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x143D DUP5 DUP3 DUP6 ADD PUSH2 0x1DF6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2243 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x225A JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x2266 DUP7 DUP4 DUP8 ADD PUSH2 0x1DF6 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x227B JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x2288 DUP6 DUP3 DUP7 ADD PUSH2 0x1CBF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22A4 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22BA JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x22C6 DUP6 DUP3 DUP7 ADD PUSH2 0x1DF6 JUMP JUMPDEST SWAP6 PUSH1 0x20 SWAP5 SWAP1 SWAP5 ADD CALLDATALOAD SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22E6 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2302 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2320 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP8 ADD DUP9 PUSH1 0x1F DUP3 ADD SLT PUSH2 0x2331 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP3 POP DUP2 DUP4 GT ISZERO PUSH2 0x2341 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP5 DUP4 ADD ADD GT ISZERO PUSH2 0x2352 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH1 0x20 ADD SWAP5 POP SWAP1 SWAP3 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x236D JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x238A JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD DUP1 DUP2 SWAP7 POP DUP3 DUP5 MUL DUP2 ADD SWAP2 POP DUP3 DUP7 ADD DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2408 JUMPI DUP3 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH1 0x60 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 MLOAD AND DUP7 MSTORE DUP7 DUP3 ADD MLOAD DUP8 DUP8 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD DUP3 DUP3 DUP10 ADD MSTORE PUSH2 0x23F2 DUP4 DUP10 ADD DUP3 PUSH2 0x2415 JUMP JUMPDEST SWAP13 DUP10 ADD SWAP13 SWAP8 POP POP POP SWAP3 DUP7 ADD SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0x23B5 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x242D DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2B5D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 SWAP1 DUP2 ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x2474 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x2441 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x2487 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x2441 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x249A PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0x2441 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x80 DUP5 ADD MLOAD AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD DUP2 PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x195D DUP3 DUP7 ADD DUP3 PUSH2 0x2415 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP4 MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x40 DUP7 ADD MSTORE DUP1 PUSH1 0x60 DUP6 ADD MLOAD AND PUSH1 0x60 DUP7 ADD MSTORE POP POP PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0xC0 PUSH1 0x80 DUP6 ADD MSTORE PUSH2 0x2512 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x2399 JUMP JUMPDEST PUSH1 0xA0 DUP5 ADD MLOAD SWAP2 POP DUP5 DUP2 SUB PUSH1 0xA0 DUP7 ADD MSTORE PUSH2 0x195D DUP2 DUP4 PUSH2 0x2415 JUMP JUMPDEST PUSH32 0x657263336B2D7631000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP4 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x8 DUP5 ADD MSTORE PUSH1 0x1C DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3C DUP3 ADD MSTORE PUSH1 0x5C ADD SWAP1 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 SWAP5 DUP6 SHL DUP2 AND PUSH1 0x20 DUP8 ADD MSTORE SWAP3 SWAP1 SWAP4 SHL SWAP1 SWAP2 AND PUSH1 0x34 DUP5 ADD MSTORE PUSH1 0x48 DUP4 ADD MSTORE PUSH1 0x68 DUP3 ADD MSTORE PUSH1 0x88 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 POP PUSH1 0x40 DUP5 DUP3 MUL DUP8 ADD ADD SWAP3 POP DUP4 DUP8 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2676 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC0 DUP9 DUP7 SUB ADD DUP5 MSTORE PUSH2 0x2664 DUP6 DUP4 MLOAD PUSH2 0x2415 JUMP JUMPDEST SWAP5 POP SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x262A JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0xFA7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2399 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 MSTORE PUSH2 0x26D2 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2415 JUMP JUMPDEST SWAP1 POP DUP3 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 MSTORE PUSH2 0x26F6 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2415 JUMP JUMPDEST SWAP1 POP PUSH2 0xFA7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2441 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 MSTORE PUSH2 0x2718 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x2415 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x143D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2441 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x7 DUP4 LT PUSH2 0x273B JUMPI INVALID JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x143D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2415 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH32 0x71756575653A2062616420737461746500000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH32 0x71756575653A2062616420636F6E666967000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x9 SWAP1 DUP3 ADD MSTORE PUSH32 0x61636C3A20617574680000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH32 0x71756575653A20626164206E6F6E636500000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH32 0x71756575653A206261642064656C617900000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH32 0x71756575653A2062616420726573657400000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH32 0x71756575653A20626164206665652070756C6C00000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH32 0x71756575653A20626164207375626D6974746572000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH32 0x71756575653A2065766964656E63650000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH32 0x61636C3A2066726F7A656E000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH32 0x71756575653A2062616420617070726F76650000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH32 0x71756575653A206261642073656E6420746F6B656E0000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH32 0x71756575653A2077616974206D6F726500000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH32 0x71756575653A206261642067657420746F6B656E000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH32 0x61636C3A2062616420667265657A650000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0xFA7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2459 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD PUSH1 0x40 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2AC2 PUSH1 0x60 DUP5 ADD DUP3 PUSH2 0x24C6 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP PUSH1 0x1F NOT DUP5 DUP3 SUB ADD PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x195D DUP2 DUP4 PUSH2 0x2459 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 MSTORE PUSH2 0x26F6 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x24C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2B11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2B2F JUMPI DUP1 DUP2 REVERT JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2B4F JUMPI DUP1 DUP2 REVERT JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2B78 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2B60 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2B87 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2BA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x2BA2 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xD7 PUSH8 0xF59EECF7443EC6DD PUSH29 0x5D6A380D4533E255A757860EDD0DFE15A53A883E64736F6C6343000608 STOP CALLER ",
            "sourceMap": "310:8290:3:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;310:8290:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;7888:188:3;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4378:766;;;;;;;;;:::i;:::-;;;;;;;;1502:452:7;;;;;;;;;:::i;:::-;;1031:1134:3;;;;;;;;;:::i;:::-;;;;;;;;7119:596;;;;;;;;;:::i;781:77::-;;;;;;;;;:::i;2612:108:7:-;;;;;;;;;:::i;1298:106::-;;;;;;;;;:::i;6515:580:3:-;;;;;;;;;:::i;2816:1556::-;;;;;;;;;:::i;632:62::-;;;;;;;;;:::i;:::-;;;;;;;;285:153:7;;;:::i;:::-;;;;;;;;5951:558:3;;;;;;;;;:::i;565:58:7:-;;;;;;;;;:::i;5150:472:3:-;;;;;;;;;:::i;1188:104:7:-;;;;;;;;;:::i;5628:197:3:-;;;;;;;;;:::i;606:20::-;;;:::i;7721:145::-;;;;;;;;;:::i;1410:86:7:-;;;;;;;;;:::i;724:51:3:-;;;;;;;;;:::i;:::-;;;;;;;;575:25;;;:::i;2171:639::-;;;;;;;;;:::i;7888:188::-;7966:4;282:18:5;-1:-1:-1;;;;;;7989:39:3;;;;:80;;;8032:37;8056:12;8032:23;:37::i;:::-;7982:87;7888:188;-1:-1:-1;;7888:188:3:o;4378:766::-;4482:26;4520:21;4544:17;:10;:15;:17::i;:::-;4520:41;-1:-1:-1;4605:40:3;4575:20;;;;:5;:20;;;;;:26;;;:70;;;;;;;;;4571:264;;;4770:17;;;;:26;;;4758:66;;;;;-1:-1:-1;;;;;4758:53:3;;;;;;:66;;4812:11;;4758:66;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;4758:66:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4758:66:3;;;;4571:264;4845:13;4891:38;4861:20;;;;:5;:20;;;;;:26;;;:68;;;;;;;;;4845:84;;4943:8;4939:138;;;4981:27;4997:10;4981:15;:27::i;:::-;4967:41;;4939:138;;;5039:27;5055:10;5039:15;:27::i;:::-;5092:45;;5116:10;;5101:13;;5092:45;;;;5128:8;;5092:45;;;;;;;;;;4378:766;;;;;;:::o;1502:452:7:-;933:10;920:5;:24;;;:12;;:24;:12;:24;;;-1:-1:-1;;;;920:24:7;;;:84;;-1:-1:-1;;;;;;;982:12:7;;:5;:12;;;;;;;;;;;-1:-1:-1;;;;;982:22:7;;;;;;;;;;920:84;899:166;;;;-1:-1:-1;;;899:166:7;;;;;;;;;;;;;;;;;1591:9:::1;1586:362;1610:5;:12;1606:1;:16;1586:362;;;1643:32;;:::i;:::-;1678:5;1684:1;1678:8;;;;;;;;;;;;;;1643:43;;1716:24;1705:35;;;;;;;;:7:::0;;:35:::1;::::0;::::1;;;;;;;1701:236;;;1742:27;1749:4;:9;;;1760:4;:8;;;1742:6;:27::i;:::-;1701:236;;;1803:25;1792:7:::0;;:36:::1;::::0;::::1;;;;;;;1788:149;;;1830:28;1838:4;:9;;;1849:4;:8;;;1830:7;:28::i;1788:149::-;1892:25;1881:7:::0;;:36:::1;::::0;::::1;;;;;;;1877:60;;;1919:18;1927:4;:9;;;1919:7;:18::i;:::-;-1:-1:-1::0;1624:3:7::1;;1586:362;;;;1502:452:::0;;:::o;1031:1134:3:-;933:10:7;1176:21:3;920:24:7;;;:12;;:24;:12;:24;;;1135:22:3;;920:24:7;;;:84;;-1:-1:-1;;;;;;;982:12:7;;:5;:12;;;;;;;;;;;-1:-1:-1;;;;;982:22:7;;;;;;;;;;920:84;899:166;;;;-1:-1:-1;;;899:166:7;;;;;;;;;1251:5:3::1;1249:7:::0;;::::1;;::::0;;;;1221:18;;:24;:35:::1;1213:64;;;::::0;-1:-1:-1;;;1213:64:3;;::::1;::::0;::::1;;;;;1324:19;1346:24;:10;:17;;;:22;:24::i;:::-;1324:46;;1403:10;;1388:11;:25;1380:55;;;::::0;-1:-1:-1;;;1380:55:3;;::::1;::::0;::::1;;;;;1507:10;:17;;;:32;;;1489:15;:50;1453:10;:18;;;:32;;;:86;;1445:115;;;::::0;-1:-1:-1;;;1445:115:3;;::::1;::::0;::::1;;;;;1578:18:::0;;:28:::1;;::::0;-1:-1:-1;;;;;1578:42:3::1;1610:10;1578:42;1570:75;;;::::0;-1:-1:-1;;;1570:75:3;;::::1;::::0;::::1;;;;;1672:65;1698:25;:10;:18;;;:23;:25::i;:::-;1725:11;1672:25;:65::i;:::-;1798:34;1747:20:::0;;;:5:::1;:20;::::0;;;;1656:81;;-1:-1:-1;1747:148:3::1;::::0;:20;1846:39:::1;1747:148;:37;:148;:::i;:::-;1906:40;;:::i;:::-;-1:-1:-1::0;1949:30:3::1;::::0;;::::1;::::0;:59:::1;::::0;2018:34:::1;1949:59:::0;2041:10:::1;2018:34;:22;:34;:::i;:::-;2112:13;2102:56;2127:10;:18;;;2147:10;2102:56;;;;;;;;;;;;;;;;1075:1:7;;1031:1134:3::0;;;;:::o;7119:596::-;7235:10;7198:22;7280:28;;;:16;:28;;;;;;;;:40;;;;;;;;;7330:220;7381:40;347:1:5;7435:23:3;;:105;;7502:38;7435:105;;;7461:38;7435:105;7330:20;;;;:5;:20;;;;;;:220;;:37;:220;:::i;:::-;-1:-1:-1;;;;;7560:28:3;;7611:1;7560:28;;;:16;:28;;;;;;;;:40;;;;;;;;;:53;;;;7670:38;7560:40;;:28;7670:38;;;;7700:7;;7670:38;;;;;;;;;;7119:596;;;;:::o;781:77::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;2612:108:7:-;-1:-1:-1;;;;;;2688:12:7;2665:4;2688:12;;;;;;;;;;;-1:-1:-1;2688:25:7;;;;;;;;;;;2612:108::o;1298:106::-;933:10;920:5;:24;;;:12;;:24;:12;:24;;;-1:-1:-1;;;;920:24:7;;;:84;;-1:-1:-1;;;;;;;982:12:7;;:5;:12;;;;;;;;;;;-1:-1:-1;;;;;982:22:7;;;;;;;;;;920:84;899:166;;;;-1:-1:-1;;;899:166:7;;;;;;;;;1377:20:::1;1385:5;1392:4;1377:7;:20::i;6515:580:3:-:0;6598:21;6622:17;:10;:15;:17::i;:::-;6649:20;;;;:5;:20;;;;;6598:41;;-1:-1:-1;6649:152:3;;6700:38;6752:39;6649:152;:37;:152;:::i;:::-;6812:18;6833:30;;;:15;:30;;;;;;;;;6873:17;;;;:33;;;;-1:-1:-1;;;;;6833:30:3;;;;6873:55;;6833:30;6873:43;:55::i;:::-;6938:17;;;;:34;;;:56;;6983:10;6938:56;:44;:56;:::i;:::-;-1:-1:-1;7045:1:3;7004:30;;;:15;:30;;;;;:43;;;;;;-1:-1:-1;6515:580:3:o;2816:1556::-;933:10:7;2953:17:3;920:24:7;;;:12;;:24;:12;:24;;;2903:23:3;;920:24:7;;;:84;;-1:-1:-1;;;;;;;982:12:7;;:5;:12;;;;;;;;;;;-1:-1:-1;;;;;982:22:7;;;;;;;;;;920:84;899:166;;;;-1:-1:-1;;;899:166:7;;;;;;;;;2982:21:3::1;3006:17;:10;:15;:17::i;:::-;3033:30;::::0;;;:15:::1;:30;::::0;;;;;;;:43;;;::::1;3066:10;3033:43;::::0;;3086:5:::1;:20:::0;;;;;2982:41;;-1:-1:-1;3086:154:3::1;::::0;3033:43;3190:40:::1;3086:154;:37;:154;:::i;:::-;3251:40;;:::i;:::-;-1:-1:-1::0;3294:17:3::1;::::0;::::1;::::0;:34:::1;;::::0;3338::::1;3294::::0;3361:10:::1;3338:34;:22;:34;:::i;:::-;3383:22;3420:10;:17;;;:26;;;3383:64;;3458:17;3477:14:::0;3493:17:::1;3514:10;-1:-1:-1::0;;;;;3514:25:3::1;;:27;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;3514:27:3;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;3514:27:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3514:27:3;;;;;;;;;3457:84:::0;;-1:-1:-1;3457:84:3;-1:-1:-1;3457:84:3;-1:-1:-1;3559:63:3::1;-1:-1:-1::0;;;;;3559:25:3;::::1;3585:10;3605:4;3457:84:::0;3559:25:::1;:63::i;:::-;3551:95;;;::::0;-1:-1:-1;;;3551:95:3;;::::1;::::0;::::1;;;;;3664:42;-1:-1:-1::0;;;;;3664:20:3;::::1;3685:9:::0;3696;3664:20:::1;:42::i;:::-;3656:73;;;::::0;-1:-1:-1;;;3656:73:3;;::::1;::::0;::::1;;;;;3779:22;::::0;-1:-1:-1;;;;;3751:24:3;::::1;::::0;::::1;::::0;3776:1:::1;::::0;3779:22:::1;::::0;3790:10;;3779:22:::1;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3779:22:3;;;3751:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;3751:51:3;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;3751:51:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3751:51:3;;;;;;;;;3739:63:::0;-1:-1:-1;3820:34:3::1;-1:-1:-1::0;;;;;3820:20:3;::::1;3841:9:::0;3852:1:::1;3820:20;:34::i;:::-;3812:63;;;::::0;-1:-1:-1;;;3812:63:3;;::::1;::::0;::::1;;;;;4020:18:::0;;:28:::1;::::0;;::::1;::::0;-1:-1:-1;4050:24:3;;::::1;::::0;3979:102;;-1:-1:-1;;;;;3979:102:3;;::::1;::::0;4009:9;;3979:102;;::::1;::::0;::::1;::::0;::::1;::::0;-1:-1:-1;;3979:102:3::1;;;;;;;;;;4096:67;::::0;4137:10:::1;::::0;4126:9;;-1:-1:-1;;;;;4096:67:3;::::1;::::0;::::1;::::0;::::1;::::0;4149:7;;-1:-1:-1;;4096:67:3::1;;;;;;;;;;4173:41;::::0;;;;-1:-1:-1;;;;;4173:30:3;::::1;::::0;::::1;::::0;:41:::1;::::0;4204:9;;4173:41:::1;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;4173:41:3;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;-1:-1:::0;;;;;;;;;4225:28:3;::::1;;::::0;;;:16:::1;:28;::::0;;;;;;;:39;;;;;;;;;;:55;;;4296:69;4322:10:::1;::::0;4225:55;;4296:69:::1;::::0;::::1;::::0;4334:7;;4225:39;;4354:10;;4296:69:::1;;;;;;;;;;1075:1:7;;;;;;2816:1556:3::0;;;;;:::o;632:62::-;;;;;;;;;;;;;;;:::o;285:153:7:-;-1:-1:-1;;;285:153:7;:::o;5951:558:3:-;6033:26;6071:21;6095:17;:10;:15;:17::i;:::-;6122:20;;;;6173:38;6122:20;;;;;;;;6071:41;;-1:-1:-1;6122:151:3;;:20;6225:38;6122:151;:37;:151;:::i;:::-;6328:18;;:28;;;6284:17;;;;;:33;;:73;;;:43;:73;:::i;:::-;6412:18;;:28;;;;;6367:17;;;;:34;;;;:74;;;:44;:74;:::i;:::-;6468:18;;6459:43;;6488:13;6459:8;:43::i;:::-;6452:50;5951:558;-1:-1:-1;;;5951:558:3:o;565:58:7:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;5150:472:3:-;933:10:7;920:5;:24;;;:12;;:24;:12;:24;;;5248:18:3;;920:24:7;;;:84;;-1:-1:-1;;;;;;;982:12:7;;:5;:12;;;;;;;;;;;-1:-1:-1;;;;;982:22:7;;;;;;;;;;920:84;899:166;;;;-1:-1:-1;;;899:166:7;;;;;;;;;5294:21:3::1;5318:55;5344:12;5358:14;:7;:12;:14::i;:::-;5318:25;:55::i;:::-;5383:20;::::0;;;:5:::1;:20;::::0;;;;5294:79;;-1:-1:-1;5383:153:3::1;::::0;5434:39:::1;5487;5383:153;:37;:153;:::i;:::-;5595:19;::::0;::::1;::::0;5552:63:::1;::::0;5574:10:::1;::::0;5559:13;;5552:63:::1;::::0;::::1;::::0;5586:7;;5595:19;5552:63:::1;;;;;;;;;;1075:1:7;5150:472:3::0;;;;:::o;1188:104:7:-;933:10;920:5;:24;;;:12;;:24;:12;:24;;;-1:-1:-1;;;;920:24:7;;;:84;;-1:-1:-1;;;;;;;982:12:7;;:5;:12;;;;;;;;;;;-1:-1:-1;;;;;982:22:7;;;;;;;;;;920:84;899:166;;;;-1:-1:-1;;;899:166:7;;;;;;;;;1266:19:::1;1273:5;1280:4;1266:6;:19::i;5628:197:3:-:0;933:10:7;5769:7:3;920:24:7;;;:12;;:24;:12;:24;;;5727:23:3;;920:24:7;;;:84;;-1:-1:-1;;;;;;;982:12:7;;:5;:12;;;;;;;;;;;-1:-1:-1;;;;;982:22:7;;;;;;;;;;920:84;899:166;;;;-1:-1:-1;;;899:166:7;;;;;;;;;5799:19:3::1;5810:7;5799:10;:19::i;606:20::-:0;;;;:::o;7721:145::-;7834:25;;-1:-1:-1;;;7834:25:3;;;;;;;;1410:86:7;933:10;920:5;:24;;;:12;;:24;:12;:24;;;-1:-1:-1;;;;920:24:7;;;:84;;-1:-1:-1;;;;;;;982:12:7;;:5;:12;;;;;;;;;;;-1:-1:-1;;;;;982:22:7;;;;;;;;;;920:84;899:166;;;;-1:-1:-1;;;899:166:7;;;;;;;;;1475:14:::1;1483:5;1475:7;:14::i;:::-;1410:86:::0;;:::o;724:51:3:-;;;;;;;;;;;;-1:-1:-1;;;;;724:51:3;;:::o;575:25::-;;;;:::o;2171:639::-;933:10:7;920:5;:24;;;:12;;:24;:12;:24;;;2314:26:3;;2274:21;;920:24:7;;;:84;;-1:-1:-1;;;;;;;982:12:7;;:5;:12;;;;;;;;;;;-1:-1:-1;;;;;982:22:7;;;;;;;;;;920:84;899:166;;;;-1:-1:-1;;;899:166:7;;;;;;;;;2391:18:3;;:32:::1;;::::0;2364:59:::1;2371:15;2364:59;;;2356:88;;;::::0;-1:-1:-1;;;2356:88:3;;::::1;::::0;::::1;;;;;2455:21;2479:17;:10;:15;:17::i;:::-;2506:20;::::0;;;:5:::1;:20;::::0;;;;2455:41;;-1:-1:-1;2506:152:3::1;::::0;2557:39:::1;2610:38;2506:152;:37;:152;:::i;:::-;2713:18:::0;;:28:::1;;::::0;2669:17:::1;::::0;;::::1;::::0;:33:::1;::::0;:73:::1;::::0;::::1;:43;:73;:::i;:::-;2769:18:::0;;2760:43:::1;::::0;2789:13;2760:8:::1;:43::i;:::-;2753:50:::0;2171:639;-1:-1:-1;;;;2171:639:3:o;1577:121:11:-;1636:7;1683:6;1672:18;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1672:18:11;;;1662:29;;;;;;1655:36;;1577:121;;;:::o;466:193:10:-;552:4;271:183;-1:-1:-1;;;;;;575:36:10;;;;:77;;;615:37;639:12;615:23;:37::i;1050:160:11:-;1115:7;1141:62;1155:23;1160:9;:17;;;1155:4;:23::i;:::-;1180:22;1185:9;:16;;;1180:4;:22::i;1960:258:7:-;2032:15;2041:5;2032:8;:15::i;:::-;2031:16;2023:40;;;;-1:-1:-1;;;2023:40:7;;;;;;;;;-1:-1:-1;;;;;2081:19:7;;-1:-1:-1;2081:19:7;;2073:47;;;;-1:-1:-1;;;2073:47:7;;;;;;;;;-1:-1:-1;;;;;;2139:12:7;;:5;:12;;;;;;;;;;;-1:-1:-1;;;;;2139:18:7;;;;;;;;;;:25;;-1:-1:-1;;2139:25:7;-1:-1:-1;2139:25:7;;;2179:32;2139:18;;2194:10;;2139:12;;2179:32;;2139:5;2179:32;1960:258;;:::o;2224:195::-;2297:15;2306:5;2297:8;:15::i;:::-;2296:16;2288:40;;;;-1:-1:-1;;;2288:40:7;;;;;;;;;-1:-1:-1;;;;;;2339:12:7;;2360:5;2339:12;;;;;;;;;;;-1:-1:-1;;;;;2339:18:7;;;;;;;;;;:26;;-1:-1:-1;;2339:26:7;;;2380:32;2339:18;;2395:10;;2339:12;;2380:32;;2360:5;2380:32;2224:195;;:::o;2425:181::-;2484:15;2493:5;2484:8;:15::i;:::-;2483:16;2475:40;;;;-1:-1:-1;;;2475:40:7;;;;;;;;;-1:-1:-1;;;;;;2526:12:7;;:5;:12;;;;;;;;;;;-1:-1:-1;2526:25:7;;;;;;;;:32;;-1:-1:-1;;2526:32:7;;;;;;;2574:25;2588:10;;2526:12;2574:25;;;2425:181;:::o;1216:355:11:-;1277:7;1360;:13;;;1391:7;:17;;;1426:7;:16;;;1481:7;:15;;;1470:27;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1470:27:11;;;1460:38;;;;;;1526:7;:13;;;1516:24;;;;;;1326:228;;;;;;;;;;;;;854:190;941:7;1006:4;1012:11;1025:10;977:59;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;977:59:11;;;967:70;;;;;;960:77;;854:190;;;;:::o;565:170:8:-;664:29;675:5;682:10;664;:29::i;:::-;703:25;712:5;719:8;703;:25::i;360:378:4:-;462:18;;;;:22;458:274;;520:17;;602:18;;;;560:61;;-1:-1:-1;;;;;560:22:4;;;583:5;;590:10;;560:22;:61::i;:::-;552:94;;;;-1:-1:-1;;;552:94:4;;;;;;;;;676:17;;702:18;;;;666:55;;-1:-1:-1;;;;;666:55:4;;;;;;;;;;702:18;666:55;;;;;;;;;;458:274;360:378;;:::o;744:354::-;842:18;;;;:22;838:254;;900:17;;964:18;;;;940:43;;-1:-1:-1;;;;;940:18:4;;;959:3;;940:18;:43::i;:::-;932:77;;;;-1:-1:-1;;;932:77:4;;;;;;;;;1038:17;;1062:18;;;;1029:52;;-1:-1:-1;;;;;1029:52:4;;;;;;;;;;1062:18;1029:52;;4356:370:9;4459:4;4475:33;4547:28;;;4589:5;4608:3;4625:7;4511:131;;;;;;;;;;;;;;;-1:-1:-1;;26:21;;;22:32;6:49;;4511:131:9;;;49:4:-1;25:18;;61:17;;4511:131:9;182:15:-1;-1:-1;;;;;;4511:131:9;;;;179:29:-1;;;;160:49;;;4511:131:9;-1:-1:-1;4659:60:9;4689:6;4511:131;4659:21;:60::i;:::-;4652:67;4356:370;-1:-1:-1;;;;;;4356:370:9:o;4903:326::-;4991:4;5007:28;5074:23;;;5111:8;5133:7;5038:112;;;;;;;;;;;;;;-1:-1:-1;;26:21;;;22:32;6:49;;5038:112:9;;;49:4:-1;25:18;;61:17;;5038:112:9;182:15:-1;-1:-1;;;;;;5038:112:9;;;;179:29:-1;;;;160:49;;;5038:112:9;-1:-1:-1;5167:55:9;5197:6;5038:112;5167:21;:55::i;:::-;5160:62;4903:326;-1:-1:-1;;;;;4903:326:9:o;8099:260:3:-;8196:26;8248:17;;;;8271:16;;;;8248:40;;;;;-1:-1:-1;;;;;8248:22:3;;;;;;:40;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;8248:40:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8248:40:3;;;;;;39:16:-1;36:1;17:17;2:54;101:4;8248:40:3;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;8248:40:3;;;;;;;;;8303:49;;8234:54;;-1:-1:-1;8328:10:3;;8312:14;;8303:49;;;;8234:54;;8303:49;;;;;;;;;;8099:260;;;;:::o;8365:233::-;8454:7;8490:14;:7;:12;:14::i;:::-;8477:10;:27;;;8520:43;;8543:10;;8477:27;8520:43;;;;8555:7;;8520:43;;;;;;;;;;-1:-1:-1;;8581:10:3;;;8365:233::o;493:142:15:-;-1:-1:-1;;;;;;593:35:15;188:18;593:35;;493:142::o;304:151:8:-;413:14;398:29;;;;;;;;:11;;;;:29;;;;;;;;;390:58;;;;-1:-1:-1;;;390:58:8;;;;;;;;461:98;532:20;;546:6;;532:20;;-1:-1:-1;;532:20:8;;546:6;532:20;;;;;;;;;;;;;461:98;;:::o;3854:320:9:-;3938:4;3954:29;4022:24;;;4060:3;4077:7;3986:108;;;;;;;;;;1555:1341;1658:4;1678:8;1736:4;1730:11;2155:4;2084:3;2033:9;2027:16;1986:4;1975:9;1971:20;1921:1;1872:5;1818;1796:412;2225:14;;2222:2;;2339:16;2426:55;;;;2560:4;2555:193;;;;2332:514;;2426:55;2462:1;2455:8;;2426:55;;2555:193;2728:1;2722:3;2716:10;2713:17;2706:24;;2332:514;;2222:2;-1:-1:-1;2886:3:9;;1555:1341;-1:-1:-1;;;;1555:1341:9:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;5:130::-;72:20;;97:33;72:20;97:33;;1056:750;;1197:3;1190:4;1182:6;1178:17;1174:27;1164:2;;-1:-1;;1205:12;1164:2;1252:6;1239:20;1274:104;1289:88;1370:6;1289:88;;;1274:104;;;1406:21;;;1265:113;-1:-1;1450:4;1463:14;;;;1438:17;;;1558:1;1543:257;1568:6;1565:1;1562:13;1543:257;;;1651:3;1638:17;1442:6;1626:30;5143:4;;-1:-1;;1626:30;5126:3;5122:19;;5118:30;5115:2;;;1558:1;;5151:12;5115:2;5179:20;5143:4;5179:20;;;1450:4;1626:30;;72:20;97:33;124:5;97:33;;;5254:75;;5445:22;;;;10394:20;5406:16;;;5399:75;5548:18;;;5535:32;5587:18;5576:30;;5573:2;;;1558:1;;5609:12;5573:2;5654:58;5708:3;1450:4;5699:6;1626:30;5684:22;;5654:58;;;5636:16;;;5629:84;;;;-1:-1;1663:74;;-1:-1;;1751:14;;;;1779;;;;1590:1;1583:9;1543:257;;;1547:14;;;;;1157:649;;;;;2913:128;2979:20;;-1:-1;;;;;;56171:78;;59361:34;;59351:2;;59409:1;;59399:12;3407:440;;3508:3;3501:4;3493:6;3489:17;3485:27;3475:2;;-1:-1;;3516:12;3475:2;3563:6;3550:20;3585:64;3600:48;3641:6;3600:48;;3585:64;3576:73;;3669:6;3662:5;3655:21;3773:3;3705:4;3764:6;3697;3755:16;;3752:25;3749:2;;;3790:1;;3780:12;3749:2;57913:6;3705:4;3697:6;3693:17;3705:4;3731:5;3727:16;57890:30;57969:1;57951:16;;;3705:4;57951:16;57944:27;3731:5;3468:379;-1:-1;;3468:379;4839:152;4917:20;;59995:1;59985:12;;59975:2;;60011:1;;60001:12;6437:473;;6554:4;6542:9;6537:3;6533:19;6529:30;6526:2;;;-1:-1;;6562:12;6526:2;6590:20;6554:4;6590:20;;;6581:29;;85:6;72:20;97:33;124:5;97:33;;;6693:49;6675:16;6668:75;;6806:2;6864:9;6860:22;10394:20;6806:2;6825:5;6821:16;6814:75;6520:390;;;;;6949:1271;;7062:6;7050:9;7045:3;7041:19;7037:32;7034:2;;;-1:-1;;7072:12;7034:2;7100:20;7115:4;7100:20;;;7091:29;;10407:6;10394:20;7194:16;7187:75;7367:77;7440:3;7334:2;7420:9;7416:22;7367:77;;;7334:2;7353:5;7349:16;7342:103;7551:77;7624:3;7518:2;7604:9;7600:22;7551:77;;;7544:4;7537:5;7533:16;7526:103;7731:77;7804:3;7697;7784:9;7780:22;7731:77;;;7518:2;7717:5;7713:16;7706:103;7874:3;7933:9;7929:22;72:20;97:33;124:5;97:33;;;7901:4;7890:16;;7883:75;8048:3;8033:19;;8020:33;8073:18;8062:30;;8059:2;;;-1:-1;;8095:12;8059:2;8140:58;8194:3;8185:6;8174:9;8170:22;8140:58;;;7697:3;8126:5;8122:16;8115:84;;7028:1192;;;;;8262:695;;8378:4;8366:9;8361:3;8357:19;8353:30;8350:2;;;-1:-1;;8386:12;8350:2;8414:20;8378:4;8414:20;;;8405:29;;8500:17;8487:31;8538:18;;8530:6;8527:30;8524:2;;;8515:1;;8560:12;8524:2;8666:6;8655:9;8651:22;9111:4;9099:9;9094:3;9090:19;9086:30;9083:2;;;-1:-1;;9119:12;9083:2;9147:20;9111:4;9147:20;;;9138:29;;9271:22;10394:20;9232:16;9225:75;9370:2;9428:9;9424:22;10394:20;9370:2;9389:5;9385:16;9378:75;9552:49;9597:3;8378:4;9577:9;9573:22;9552:49;;;8378:4;9538:5;9534:16;9527:75;9700:74;9770:3;9667:2;9750:9;9746:22;9700:74;;;9667:2;9686:5;9682:16;9675:100;9867:3;9856:9;9852:19;9839:33;8538:18;9884:6;9881:30;9878:2;;;-1:-1;;9914:12;9878:2;9959:98;10053:3;10044:6;10033:9;10029:22;9959:98;;;9867:3;9945:5;9941:16;9934:124;;10148:3;10137:9;10133:19;10120:33;8538:18;10165:6;10162:30;10159:2;;;-1:-1;;10195:12;10159:2;10240:58;10294:3;10285:6;10274:9;10270:22;10240:58;;;10148:3;10222:16;;10215:84;-1:-1;;8580:100;;;9370:2;8756:18;;8743:32;;8784:30;;;8781:2;;;-1:-1;;8817:12;8781:2;;8862:73;8931:3;8922:6;8911:9;8907:22;8862:73;;;9370:2;8848:5;8844:16;8837:99;;8344:613;;;;;10605:563;;;;10768:2;10756:9;10747:7;10743:23;10739:32;10736:2;;;-1:-1;;10774:12;10736:2;226:6;220:13;238:33;265:5;238:33;;;10937:2;11001:22;;4398:13;10826:74;;-1:-1;4416:47;4398:13;4416:47;;;10945:88;;;;11070:2;11124:9;11120:22;10542:13;11078:74;;10730:438;;;;;;11175:410;;11324:2;;11312:9;11303:7;11299:23;11295:32;11292:2;;;-1:-1;;11330:12;11292:2;11381:17;11375:24;11419:18;11411:6;11408:30;11405:2;;;-1:-1;;11441:12;11405:2;11552:6;11541:9;11537:22;436:3;429:4;421:6;417:17;413:27;403:2;;-1:-1;;444:12;403:2;484:6;478:13;464:27;;506:89;521:73;587:6;521:73;;506:89;623:21;;;680:14;;;;655:17;;;-1:-1;760:246;785:6;782:1;779:13;760:246;;;861:3;855:10;659:6;843:23;3968:3;3949:17;843:23;3949:17;3945:27;3935:2;;-1:-1;;3976:12;3935:2;11324;843:23;;4010:13;4038:64;4053:48;4094:6;4053:48;;4038:64;4122:6;4115:5;4108:21;4146:17;4226:3;4146:17;4217:6;843:23;4208:16;;4205:25;4202:2;;;-1:-1;;4233:12;4202:2;4253:39;4285:6;11324:2;4184:5;4180:16;4146:17;843:23;4146:17;4253:39;;;-1:-1;873:70;;-1:-1;;957:14;;;;985;;;;807:1;800:9;760:246;;;-1:-1;11461:108;;11286:299;-1:-1;;;;;;;;11286:299;11592:429;;11747:2;;11735:9;11726:7;11722:23;11718:32;11715:2;;;-1:-1;;11753:12;11715:2;11811:17;11798:31;11849:18;11841:6;11838:30;11835:2;;;-1:-1;;11871:12;11835:2;11988:6;11977:9;11973:22;1995:3;1988:4;1980:6;1976:17;1972:27;1962:2;;-1:-1;;2003:12;1962:2;2050:6;2037:20;2023:34;;2072:106;2087:90;2170:6;2087:90;;2072:106;2206:21;;;2263:14;;;;2238:17;;;2364:4;2352:17;;;2343:27;;;;2340:36;-1:-1;2337:2;;;-1:-1;;2379:12;2337:2;-1:-1;2405:10;;2399:232;2424:6;2421:1;2418:13;2399:232;;;2364:4;5878:9;5873:3;5869:19;5865:30;5862:2;;;-1:-1;;5898:12;5862:2;5926:20;2364:4;5926:20;;;6026:60;6082:3;6058:22;6026:60;;;6008:16;6001:86;6181:48;6225:3;11747:2;6205:9;6201:22;6181:48;;;11747:2;6167:5;6163:16;6156:74;6290:2;6323:49;6368:3;6290:2;6348:9;6344:22;6323:49;;;6305:16;;;6298:75;2492:76;;2446:1;2439:9;;;;;2582:14;;;;2610;;;;2399:232;;12028:241;;12132:2;12120:9;12111:7;12107:23;12103:32;12100:2;;;-1:-1;;12138:12;12100:2;-1:-1;2843:20;;12094:175;-1:-1;12094:175;12276:729;;;;12447:2;12435:9;12426:7;12422:23;12418:32;12415:2;;;-1:-1;;12453:12;12415:2;2856:6;2843:20;12505:63;;12633:2;12622:9;12618:18;12605:32;12657:18;;12649:6;12646:30;12643:2;;;-1:-1;;12679:12;12643:2;12709:77;12778:7;12769:6;12758:9;12754:22;12709:77;;;12699:87;;12851:2;12840:9;12836:18;12823:32;12809:46;;12657:18;12867:6;12864:30;12861:2;;;-1:-1;;12897:12;12861:2;;12927:62;12981:7;12972:6;12961:9;12957:22;12927:62;;;12917:72;;;12409:596;;;;;;13012:239;;13115:2;13103:9;13094:7;13090:23;13086:32;13083:2;;;-1:-1;;13121:12;13083:2;2992:6;2979:20;3004:32;3030:5;3004:32;;13258:364;;;13378:2;13366:9;13357:7;13353:23;13349:32;13346:2;;;-1:-1;;13384:12;13346:2;2992:6;2979:20;3004:32;3030:5;3004:32;;;13436:62;-1:-1;13535:2;13574:22;;72:20;97:33;72:20;97:33;;;13543:63;;;;13340:282;;;;;;13629:406;;;13770:2;13758:9;13749:7;13745:23;13741:32;13738:2;;;-1:-1;;13776:12;13738:2;4575:6;4562:20;4587:53;4634:5;4587:53;;;13828:83;13948:2;13987:22;;;;10394:20;;-1:-1;;;13732:303;14042:375;;14170:2;14158:9;14149:7;14145:23;14141:32;14138:2;;;-1:-1;;14176:12;14138:2;14234:17;14221:31;14272:18;14264:6;14261:30;14258:2;;;-1:-1;;14294:12;14258:2;14324:77;14393:7;14384:6;14373:9;14369:22;14324:77;;14424:381;;14555:2;14543:9;14534:7;14530:23;14526:32;14523:2;;;-1:-1;;14561:12;14523:2;14619:17;14606:31;14657:18;14649:6;14646:30;14643:2;;;-1:-1;;14679:12;14643:2;14709:80;14781:7;14772:6;14761:9;14757:22;14709:80;;14812:610;;;14969:2;14957:9;14948:7;14944:23;14940:32;14937:2;;;-1:-1;;14975:12;14937:2;15033:17;15020:31;15071:18;;15063:6;15060:30;15057:2;;;-1:-1;;15093:12;15057:2;15123:80;15195:7;15186:6;15175:9;15171:22;15123:80;;;15113:90;;15268:2;15257:9;15253:18;15240:32;15226:46;;15071:18;15284:6;15281:30;15278:2;;;-1:-1;;15314:12;15278:2;;15344:62;15398:7;15389:6;15378:9;15374:22;15344:62;;;15334:72;;;14931:491;;;;;;15429:506;;;15577:2;15565:9;15556:7;15552:23;15548:32;15545:2;;;-1:-1;;15583:12;15545:2;15641:17;15628:31;15679:18;15671:6;15668:30;15665:2;;;-1:-1;;15701:12;15665:2;15731:80;15803:7;15794:6;15783:9;15779:22;15731:80;;;15721:90;15848:2;15887:22;;;;10394:20;;-1:-1;;;;15539:396;15942:263;;16057:2;16045:9;16036:7;16032:23;16028:32;16025:2;;;-1:-1;;16063:12;16025:2;-1:-1;10542:13;;16019:186;-1:-1;16019:186;16212:609;;;;;16366:2;16354:9;16345:7;16341:23;16337:32;16334:2;;;-1:-1;;16372:12;16334:2;10407:6;10394:20;16424:63;;16552:2;16541:9;16537:18;16524:32;16576:18;;16568:6;16565:30;16562:2;;;-1:-1;;16598:12;16562:2;16683:6;16672:9;16668:22;3176:3;3169:4;3161:6;3157:17;3153:27;3143:2;;-1:-1;;3184:12;3143:2;3227:6;3214:20;3204:30;;16576:18;3246:6;3243:30;3240:2;;;-1:-1;;3276:12;3240:2;3371:3;16552:2;3351:17;3312:6;3337:32;;3334:41;3331:2;;;-1:-1;;3378:12;3331:2;16552;3308:17;;-1:-1;16626:74;;-1:-1;;16737:2;16773:22;;2709:20;56005:13;;55998:21;59117:32;;59107:2;;-1:-1;;59153:12;59107:2;16328:493;;;;-1:-1;16328:493;;-1:-1;;16328:493;16828:366;;;16949:2;16937:9;16928:7;16924:23;16920:32;16917:2;;;-1:-1;;16955:12;16917:2;-1:-1;;10394:20;;;17107:2;17146:22;;;10394:20;;-1:-1;16911:283;19068:1020;;19323:5;53975:12;54715:6;54710:3;54703:19;54752:4;;54747:3;54743:14;19335:107;;;;54752:4;19499:6;19495:17;19490:3;19486:27;19474:39;;54752:4;19608:5;53638:14;-1:-1;19647:402;19672:6;19669:1;19666:13;19647:402;;;19724:20;;;19712:33;;19773:13;;28797:23;;-1:-1;;;;;56809:54;17718:37;;28958:16;;;28952:23;29029:14;;;21393:37;29123:4;29112:16;;;29106:23;28733:4;29149:14;;;29142:38;;;28733:4;29123;29195:71;28724:14;;;29106:23;29195:71;;;20028:14;;;;19793:120;-1:-1;;;54410:14;;;;-1:-1;;19694:1;19687:9;19647:402;;;-1:-1;20072:10;;19230:858;-1:-1;;;;;;;19230:858;21718:323;;21850:5;53975:12;54715:6;54710:3;54703:19;21933:52;21978:6;54752:4;54747:3;54743:14;54752:4;21959:5;21955:16;21933:52;;;58710:2;58690:14;-1:-1;;58686:28;21997:39;;;;54752:4;21997:39;;21798:243;-1:-1;;21798:243;29380:475;29586:23;;-1:-1;;;;;56809:54;17718:37;;29759:4;29748:16;;;29742:23;29819:14;;21393:37;29492:363;30484:1390;;30623:6;30707:16;30701:23;21400:3;21393:37;30883:4;30876:5;30872:16;30866:23;30895:119;30883:4;31003:3;30999:14;30985:12;30895:119;;;;31105:4;31098:5;31094:16;31088:23;31117:119;31230:4;31225:3;31221:14;31207:12;31117:119;;;;31230:4;31315:5;31311:16;31305:23;31334:119;31447:4;31442:3;31438:14;31424:12;31334:119;;;-1:-1;31536:4;31525:16;;31519:23;-1:-1;;;;;56809:54;31605:4;31596:14;;17718:37;-1:-1;31680:16;;31674:23;31726:6;31717:16;;31710:40;;;31765:71;30614:16;;;31674:23;31765:71;;34200:1377;;34414:16;34408:23;21400:3;21393:37;34588:4;34581:5;34577:16;34571:23;34588:4;34652:3;34648:14;21393:37;34747:4;34740:5;34736:16;34730:23;-1:-1;;;;;56820:42;55921:5;56809:54;34747:4;34811:3;34807:14;17718:37;56820:42;34905:4;34898:5;34894:16;34888:23;56809:54;34905:4;34994:3;34990:14;22696:75;;;35087:4;35080:5;35076:16;35070:23;34341:4;35087;35117:3;35113:14;35106:38;35159:151;34341:4;34336:3;34332:14;35291:12;35159:151;;;35396:4;35389:5;35385:16;35379:23;35359:43;;35448:3;35442:4;35438:14;35396:4;35426:3;35422:14;35415:38;35468:71;35534:4;35520:12;35468:71;;37430:838;28478:10;28458:31;;58801:2;58797:14;;;;-1:-1;;58797:14;28443:1;28508:11;;22507:91;38009:12;;;21393:37;;;;38120:12;;;21393:37;38231:12;;;37723:545;38275:859;21393:37;;;-1:-1;;58801:2;58797:14;;;;;38637:2;38628:12;;17976:58;58797:14;;;;;;;38739:12;;;22507:91;38875:12;;;21393:37;38986:12;;;21393:37;39097:12;;;38528:606;39141:222;-1:-1;;;;;56809:54;;;;17718:37;;39268:2;39253:18;;39239:124;39370:444;-1:-1;;;;;56809:54;;;17718:37;;56809:54;;;;39717:2;39702:18;;17718:37;39800:2;39785:18;;21393:37;;;;39553:2;39538:18;;39524:290;39821:333;-1:-1;;;;;56809:54;;;;17718:37;;40140:2;40125:18;;21393:37;39976:2;39961:18;;39947:207;40161:406;;40356:2;;40345:9;40341:18;40356:2;40377:17;40370:47;40431:126;18293:5;53975:12;54715:6;54710:3;54703:19;54743:14;40345:9;54743:14;18305:102;;54743:14;40356:2;18464:6;18460:17;40345:9;18451:27;;18439:39;;40356:2;18558:5;53638:14;-1:-1;18597:357;18622:6;18619:1;18616:13;18597:357;;;18674:20;40345:9;18678:4;18674:20;;18669:3;18662:33;17321:64;17381:3;18729:6;18723:13;17321:64;;;18743:90;-1:-1;18933:14;;;;54410;;;;18644:1;18637:9;18597:357;;;-1:-1;40423:134;;40327:240;-1:-1;;;;;;;40327:240;40574:466;;40799:2;40820:17;40813:47;40874:156;40799:2;40788:9;40784:18;41016:6;40874:156;;41047:210;56005:13;;55998:21;21276:34;;41168:2;41153:18;;41139:118;41264:222;21393:37;;;41391:2;41376:18;;41362:124;41493:218;-1:-1;;;;;;56171:78;;;;21670:36;;41618:2;41603:18;;41589:122;41718:405;;41885:2;41906:17;41899:47;41960:76;41885:2;41874:9;41870:18;42022:6;41960:76;;;41952:84;;21303:5;56005:13;55998:21;42109:2;42098:9;42094:18;21276:34;41856:267;;;;;;42130:529;;42359:2;42380:17;42373:47;42434:76;42359:2;42348:9;42344:18;42496:6;42434:76;;;42426:84;;42521:128;42645:2;42634:9;42630:18;42621:6;42521:128;;42666:641;;42923:3;42945:17;42938:47;42999:76;42923:3;42912:9;42908:19;43061:6;42999:76;;;42991:84;;21423:5;43154:2;43143:9;43139:18;21393:37;43169:128;43293:2;43282:9;43278:18;43269:6;43169:128;;43314:238;43449:2;43434:18;;58908:1;58898:12;;58888:2;;58914:9;58888:2;23084:58;;;43420:132;;43559:433;;23284:5;23240:3;23233:58;43740:2;43866;43855:9;43851:18;43844:48;43906:76;43740:2;43729:9;43725:18;43968:6;43906:76;;43999:416;44199:2;44213:47;;;23528:2;44184:18;;;54703:19;23564:18;54743:14;;;23544:39;23602:12;;;44170:245;44422:416;44622:2;44636:47;;;23853:2;44607:18;;;54703:19;23889;54743:14;;;23869:40;23928:12;;;44593:245;44845:416;45045:2;45059:47;;;24179:1;45030:18;;;54703:19;24214:11;54743:14;;;24194:32;24245:12;;;45016:245;45268:416;45468:2;45482:47;;;24496:2;45453:18;;;54703:19;24532:18;54743:14;;;24512:39;24570:12;;;45439:245;45691:416;45891:2;45905:47;;;24821:2;45876:18;;;54703:19;24857:18;54743:14;;;24837:39;24895:12;;;45862:245;46114:416;46314:2;46328:47;;;25146:2;46299:18;;;54703:19;25182:18;54743:14;;;25162:39;25220:12;;;46285:245;46537:416;46737:2;46751:47;;;25471:2;46722:18;;;54703:19;25507:21;54743:14;;;25487:42;25548:12;;;46708:245;46960:416;47160:2;47174:47;;;25799:2;47145:18;;;54703:19;25835:22;54743:14;;;25815:43;25877:12;;;47131:245;47383:416;47583:2;47597:47;;;26128:2;47568:18;;;54703:19;26164:17;54743:14;;;26144:38;26201:12;;;47554:245;47806:416;48006:2;48020:47;;;26452:2;47991:18;;;54703:19;26488:13;54743:14;;;26468:34;26521:12;;;47977:245;48229:416;48429:2;48443:47;;;26772:2;48414:18;;;54703:19;26808:20;54743:14;;;26788:41;26848:12;;;48400:245;48652:416;48852:2;48866:47;;;27099:2;48837:18;;;54703:19;27135:23;54743:14;;;27115:44;27178:12;;;48823:245;49075:416;49275:2;49289:47;;;27429:2;49260:18;;;54703:19;27465:18;54743:14;;;27445:39;27503:12;;;49246:245;49498:416;49698:2;49712:47;;;27754:2;49683:18;;;54703:19;27790:22;54743:14;;;27770:43;27832:12;;;49669:245;49921:416;50121:2;50135:47;;;28083:2;50106:18;;;54703:19;28119:17;54743:14;;;28099:38;28156:12;;;50092:245;50344:366;;50519:2;50540:17;50533:47;50594:106;50519:2;50508:9;50504:18;50686:6;50594:106;;50717:378;;50898:2;50919:17;50912:47;33646:16;33640:23;33571:4;50898:2;50887:9;50883:18;33676:38;33729:103;33562:14;50887:9;33562:14;33813:12;33729:103;;;50898:2;33908:16;;33902:23;33961:14;;;-1:-1;;33961:14;33571:4;33945:14;;33938:38;33902:23;-1:-1;33991:101;33965:4;33902:23;33991:101;;51102:593;;51363:2;51384:17;51377:47;51438:108;51363:2;51352:9;51348:18;51532:6;51438:108;;51931:256;51993:2;51987:9;52019:17;;;52094:18;52079:34;;52115:22;;;52076:62;52073:2;;;52151:1;;52141:12;52073:2;51993;52160:22;51971:216;;-1:-1;51971:216;52194:313;;52362:18;52354:6;52351:30;52348:2;;;-1:-1;;52384:12;52348:2;-1:-1;52429:4;52417:17;;;52482:15;;52285:222;53186:321;;53329:18;53321:6;53318:30;53315:2;;;-1:-1;;53351:12;53315:2;-1:-1;53428:4;53405:17;-1:-1;;53401:33;53492:4;53482:15;;53252:255;57986:268;58051:1;58058:101;58072:6;58069:1;58066:13;58058:101;;;58139:11;;;58133:18;58120:11;;;58113:39;58094:2;58087:10;58058:101;;;58174:6;58171:1;58168:13;58165:2;;;58051:1;58230:6;58225:3;58221:16;58214:27;58165:2;;58035:219;;;;58937:117;-1:-1;;;;;56809:54;;58996:35;;58986:2;;59045:1;;59035:12;58986:2;58980:74;;59303:115;-1:-1;;;;;;56171:78;;59361:34;;59351:2;;59409:1;;59399:12"
          },
          "methodIdentifiers": {
            "ROOT_ROLE()": "7e8c7f08",
            "bulk((uint8,bytes4,address)[])": "1c47671b",
            "challenge(((uint256,uint256,address,address,(address,uint256,bytes)[],bytes),(uint256,(address,uint256),(address,uint256),(address,uint256),address,bytes)),bytes)": "5decc190",
            "challengerCache(bytes32)": "c8182af0",
            "configHash()": "e1f1176d",
            "configure((uint256,(address,uint256),(address,uint256),(address,uint256),address,bytes))": "aa455d9f",
            "disputeItemCache(address,uint256)": "3b1c5fc6",
            "execute(((uint256,uint256,address,address,(address,uint256,bytes)[],bytes),(uint256,(address,uint256),(address,uint256),(address,uint256),address,bytes)))": "ecb6cba6",
            "executeApproved(((uint256,uint256,address,address,(address,uint256,bytes)[],bytes),(uint256,(address,uint256),(address,uint256),(address,uint256),address,bytes)))": "869cb6b5",
            "freeze(bytes4)": "bdf9a726",
            "grant(bytes4,address)": "a157a10d",
            "isFrozen(bytes4)": "495a9825",
            "nonce()": "affed0e0",
            "queue(bytes32)": "7c10dea6",
            "resolve(((uint256,uint256,address,address,(address,uint256,bytes)[],bytes),(uint256,(address,uint256),(address,uint256),(address,uint256),address,bytes)),uint256)": "0494812a",
            "revoke(bytes4,address)": "58849734",
            "roles(bytes4,address)": "96fc8abd",
            "rule(uint256,uint256)": "311a6c56",
            "schedule(((uint256,uint256,address,address,(address,uint256,bytes)[],bytes),(uint256,(address,uint256),(address,uint256),(address,uint256),address,bytes)))": "25ddcbe0",
            "settleRejection(((uint256,uint256,address,address,(address,uint256,bytes)[],bytes),(uint256,(address,uint256),(address,uint256),(address,uint256),address,bytes)))": "5c44c0a7",
            "submitEvidence(uint256,bytes,bool)": "b9e9823f",
            "supportsInterface(bytes4)": "01ffc9a7",
            "veto(bytes32,(uint256,(address,uint256),(address,uint256),(address,uint256),address,bytes),bytes)": "a0e975cb"
          }
        }
      }
    },
    "contracts/lib/DepositLib.sol": {
      "DepositLib": {
        "abi": [
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "token",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "Collected",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "token",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "Released",
            "type": "event"
          }
        ],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122098b5e995480a07f1c7a48fcaf7ad69b550a277b644542d720b506b934b2bddce64736f6c63430006080033",
            "opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 0xB5 0xE9 SWAP6 0x48 EXP SMOD CALL 0xC7 LOG4 DUP16 0xCA 0xF7 0xAD PUSH10 0xB550A277B644542D720B POP PUSH12 0x934B2BDDCE64736F6C634300 MOD ADDMOD STOP CALLER ",
            "sourceMap": "141:959:4:-:0;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
          },
          "deployedBytecode": {
            "immutableReferences": {},
            "linkReferences": {},
            "object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122098b5e995480a07f1c7a48fcaf7ad69b550a277b644542d720b506b934b2bddce64736f6c63430006080033",
            "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 0xB5 0xE9 SWAP6 0x48 EXP SMOD CALL 0xC7 LOG4 DUP16 0xCA 0xF7 0xAD PUSH10 0xB550A277B644542D720B POP PUSH12 0x934B2BDDCE64736F6C634300 MOD ADDMOD STOP CALLER ",
            "sourceMap": "141:959:4:-:0;;;;;;12:1:-1;9;2:12"
          },
          "methodIdentifiers": {}
        }
      }
    },
    "contracts/lib/IArbitrable.sol": {
      "IArbitrable": {
        "abi": [
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "contract IArbitrator",
                "name": "arbitrator",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "disputeId",
                "type": "uint256"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "submitter",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "bytes",
                "name": "evidence",
                "type": "bytes"
              },
              {
                "indexed": false,
                "internalType": "bool",
                "name": "finished",
                "type": "bool"
              }
            ],
            "name": "EvidenceSubmitted",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "contract IArbitrator",
                "name": "arbitrator",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "disputeId",
                "type": "uint256"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "ruling",
                "type": "uint256"
              }
            ],
            "name": "Ruled",
            "type": "event"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "_disputeId",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "_ruling",
                "type": "uint256"
              }
            ],
            "name": "rule",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "_disputeId",
                "type": "uint256"
              },
              {
                "internalType": "bytes",
                "name": "_evidence",
                "type": "bytes"
              },
              {
                "internalType": "bool",
                "name": "_finished",
                "type": "bool"
              }
            ],
            "name": "submitEvidence",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          },
          "deployedBytecode": {
            "immutableReferences": {},
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          },
          "methodIdentifiers": {
            "rule(uint256,uint256)": "311a6c56",
            "submitEvidence(uint256,bytes,bool)": "b9e9823f"
          }
        }
      }
    },
    "contracts/lib/IArbitrator.sol": {
      "IArbitrator": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "_disputeId",
                "type": "uint256"
              }
            ],
            "name": "closeEvidencePeriod",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "_possibleRulings",
                "type": "uint256"
              },
              {
                "internalType": "bytes",
                "name": "_metadata",
                "type": "bytes"
              }
            ],
            "name": "createDispute",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "_disputeId",
                "type": "uint256"
              }
            ],
            "name": "executeRuling",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "getDisputeFees",
            "outputs": [
              {
                "internalType": "address",
                "name": "recipient",
                "type": "address"
              },
              {
                "internalType": "contract ERC20",
                "name": "feeToken",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "feeAmount",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_subscriber",
                "type": "address"
              }
            ],
            "name": "getSubscriptionFees",
            "outputs": [
              {
                "internalType": "address",
                "name": "recipient",
                "type": "address"
              },
              {
                "internalType": "contract ERC20",
                "name": "feeToken",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "feeAmount",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          }
        ],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          },
          "deployedBytecode": {
            "immutableReferences": {},
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          },
          "methodIdentifiers": {
            "closeEvidencePeriod(uint256)": "7e9adccf",
            "createDispute(uint256,bytes)": "c13517e1",
            "executeRuling(uint256)": "8bb04875",
            "getDisputeFees()": "7b751b9e",
            "getSubscriptionFees(address)": "e3f2311e"
          }
        }
      }
    },
    "contracts/lib/MiniACL.sol": {
      "MiniACL": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_initialRoot",
                "type": "address"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes4",
                "name": "role",
                "type": "bytes4"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "actor",
                "type": "address"
              }
            ],
            "name": "Frozen",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes4",
                "name": "role",
                "type": "bytes4"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "actor",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "who",
                "type": "address"
              }
            ],
            "name": "Granted",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes4",
                "name": "role",
                "type": "bytes4"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "actor",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "who",
                "type": "address"
              }
            ],
            "name": "Revoked",
            "type": "event"
          },
          {
            "inputs": [],
            "name": "ROOT_ROLE",
            "outputs": [
              {
                "internalType": "bytes4",
                "name": "",
                "type": "bytes4"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "components": [
                  {
                    "internalType": "enum MiniACLData.BulkOp",
                    "name": "op",
                    "type": "uint8"
                  },
                  {
                    "internalType": "bytes4",
                    "name": "role",
                    "type": "bytes4"
                  },
                  {
                    "internalType": "address",
                    "name": "who",
                    "type": "address"
                  }
                ],
                "internalType": "struct MiniACLData.BulkItem[]",
                "name": "items",
                "type": "tuple[]"
              }
            ],
            "name": "bulk",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes4",
                "name": "_role",
                "type": "bytes4"
              }
            ],
            "name": "freeze",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes4",
                "name": "_role",
                "type": "bytes4"
              },
              {
                "internalType": "address",
                "name": "_who",
                "type": "address"
              }
            ],
            "name": "grant",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes4",
                "name": "_role",
                "type": "bytes4"
              }
            ],
            "name": "isFrozen",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes4",
                "name": "_role",
                "type": "bytes4"
              },
              {
                "internalType": "address",
                "name": "_who",
                "type": "address"
              }
            ],
            "name": "revoke",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes4",
                "name": "",
                "type": "bytes4"
              },
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "name": "roles",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          }
        ],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "608060405234801561001057600080fd5b50604051610b58380380610b5883398101604081905261002f91610140565b61004963161b7d8160e21b826001600160e01b0361004f16565b506101bc565b610061826001600160e01b0361011716565b156100875760405162461bcd60e51b815260040161007e9061016e565b60405180910390fd5b6001600160a01b038116600114156100b15760405162461bcd60e51b815260040161007e90610193565b6001600160e01b031982166000818152602081815260408083206001600160a01b0386168085529252808320805460ff19166001179055519092339290917f1c3ac05008a204aef806fb7b0a907c496ed107cd989825beb9df5f8094c2eabd9190a45050565b6001600160e01b0319166000908152602081815260408083206001845290915290205460ff1690565b600060208284031215610151578081fd5b81516001600160a01b0381168114610167578182fd5b9392505050565b6020808252600b908201526a30b1b61d10333937bd32b760a91b604082015260600190565b6020808252600f908201526e61636c3a2062616420667265657a6560881b604082015260600190565b61098d806101cb6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80637e8c7f081161005b5780637e8c7f08146100d357806396fc8abd146100e8578063a157a10d146100fb578063bdf9a7261461010e5761007d565b80631c47671b14610082578063495a98251461009757806358849734146100c0575b600080fd5b61009561009036600461072f565b610121565b005b6100aa6100a53660046107df565b61027a565b6040516100b79190610852565b60405180910390f35b6100956100ce366004610802565b6102a3565b6100db610345565b6040516100b7919061085d565b6100aa6100f6366004610802565b610350565b610095610109366004610802565b61036d565b61009561011c3660046107df565b61040f565b3360009081527f8dafb0716dbdc5222f4b82fa3495e71054f736c761c542cfff5cf37ceef75d46602052604090205463161b7d8160e21b9060ff168061019d57506001600160e01b0319811660009081526020818152604080832073ffffffffffffffffffffffffffffffffffffffff845290915290205460ff165b6101c25760405162461bcd60e51b81526004016101b990610872565b60405180910390fd5b60005b8251811015610275576101d661069a565b8382815181106101e257fe5b60200260200101519050600060028111156101f957fe5b8151600281111561020657fe5b14156102235761021e816020015182604001516104b4565b61026c565b60018151600281111561023257fe5b141561024a5761021e81602001518260400151610584565b60028151600281111561025957fe5b141561026c5761026c816020015161061a565b506001016101c5565b505050565b6001600160e01b0319166000908152602081815260408083206001845290915290205460ff1690565b3360009081527f8dafb0716dbdc5222f4b82fa3495e71054f736c761c542cfff5cf37ceef75d46602052604090205463161b7d8160e21b9060ff168061031f57506001600160e01b0319811660009081526020818152604080832073ffffffffffffffffffffffffffffffffffffffff845290915290205460ff165b61033b5760405162461bcd60e51b81526004016101b990610872565b6102758383610584565b63161b7d8160e21b81565b600060208181529281526040808220909352908152205460ff1681565b3360009081527f8dafb0716dbdc5222f4b82fa3495e71054f736c761c542cfff5cf37ceef75d46602052604090205463161b7d8160e21b9060ff16806103e957506001600160e01b0319811660009081526020818152604080832073ffffffffffffffffffffffffffffffffffffffff845290915290205460ff165b6104055760405162461bcd60e51b81526004016101b990610872565b61027583836104b4565b3360009081527f8dafb0716dbdc5222f4b82fa3495e71054f736c761c542cfff5cf37ceef75d46602052604090205463161b7d8160e21b9060ff168061048b57506001600160e01b0319811660009081526020818152604080832073ffffffffffffffffffffffffffffffffffffffff845290915290205460ff165b6104a75760405162461bcd60e51b81526004016101b990610872565b6104b08261061a565b5050565b6104bd8261027a565b156104da5760405162461bcd60e51b81526004016101b9906108a9565b73ffffffffffffffffffffffffffffffffffffffff8116600114156105115760405162461bcd60e51b81526004016101b9906108e0565b6001600160e01b0319821660008181526020818152604080832073ffffffffffffffffffffffffffffffffffffffff86168085529252808320805460ff19166001179055519092339290917f1c3ac05008a204aef806fb7b0a907c496ed107cd989825beb9df5f8094c2eabd9190a45050565b61058d8261027a565b156105aa5760405162461bcd60e51b81526004016101b9906108a9565b6001600160e01b0319821660008181526020818152604080832073ffffffffffffffffffffffffffffffffffffffff86168085529252808320805460ff19169055519092339290917f682f2c466c1e9f6883eb72cbced01373e1cb18b05ae5c8bc04dc73d73e29f8cd9190a45050565b6106238161027a565b156106405760405162461bcd60e51b81526004016101b9906108a9565b6001600160e01b0319811660008181526020818152604080832060018085529252808320805460ff1916909217909155513392917f049c6b8b07a879425742523fa80f8ffb25e39ad518c93a5896a0df19518397e591a350565b6040805160608101909152806000815260006020820181905260409091015290565b6000606082840312156106cd578081fd5b6106d76060610917565b90508135600381106106e857600080fd5b815260208201356106f88161093e565b6020820152604082013573ffffffffffffffffffffffffffffffffffffffff8116811461072457600080fd5b604082015292915050565b60006020808385031215610741578182fd5b823567ffffffffffffffff80821115610758578384fd5b81850186601f820112610769578485fd5b8035925081831115610779578485fd5b6107868485850201610917565b83815284810192508185016060808602840187018a10156107a5578788fd5b8793505b858410156107d1576107bb8a836106bc565b85529386019360019390930192908101906107a9565b509098975050505050505050565b6000602082840312156107f0578081fd5b81356107fb8161093e565b9392505050565b60008060408385031215610814578081fd5b823561081f8161093e565b9150602083013573ffffffffffffffffffffffffffffffffffffffff81168114610847578182fd5b809150509250929050565b901515815260200190565b6001600160e01b031991909116815260200190565b60208082526009908201527f61636c3a20617574680000000000000000000000000000000000000000000000604082015260600190565b6020808252600b908201527f61636c3a2066726f7a656e000000000000000000000000000000000000000000604082015260600190565b6020808252600f908201527f61636c3a2062616420667265657a650000000000000000000000000000000000604082015260600190565b60405181810167ffffffffffffffff8111828210171561093657600080fd5b604052919050565b6001600160e01b03198116811461095457600080fd5b5056fea2646970667358221220045dc09e8f86e9e10af12e130031605c25824c90ddb1eb4cdcef6ef6b7fa779f64736f6c63430006080033",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xB58 CODESIZE SUB DUP1 PUSH2 0xB58 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x140 JUMP JUMPDEST PUSH2 0x49 PUSH4 0x161B7D81 PUSH1 0xE2 SHL DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH2 0x4F AND JUMP JUMPDEST POP PUSH2 0x1BC JUMP JUMPDEST PUSH2 0x61 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH2 0x117 AND JUMP JUMPDEST ISZERO PUSH2 0x87 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E SWAP1 PUSH2 0x16E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 EQ ISZERO PUSH2 0xB1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E SWAP1 PUSH2 0x193 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD SWAP1 SWAP3 CALLER SWAP3 SWAP1 SWAP2 PUSH32 0x1C3AC05008A204AEF806FB7B0A907C496ED107CD989825BEB9DF5F8094C2EABD SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x151 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x167 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x30B1B61D10333937BD32B7 PUSH1 0xA9 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x61636C3A2062616420667265657A65 PUSH1 0x88 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH2 0x98D DUP1 PUSH2 0x1CB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E8C7F08 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x7E8C7F08 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x96FC8ABD EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0xA157A10D EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0xBDF9A726 EQ PUSH2 0x10E JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x1C47671B EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x495A9825 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x58849734 EQ PUSH2 0xC0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x72F JUMP JUMPDEST PUSH2 0x121 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAA PUSH2 0xA5 CALLDATASIZE PUSH1 0x4 PUSH2 0x7DF JUMP JUMPDEST PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB7 SWAP2 SWAP1 PUSH2 0x852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0xCE CALLDATASIZE PUSH1 0x4 PUSH2 0x802 JUMP JUMPDEST PUSH2 0x2A3 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x345 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB7 SWAP2 SWAP1 PUSH2 0x85D JUMP JUMPDEST PUSH2 0xAA PUSH2 0xF6 CALLDATASIZE PUSH1 0x4 PUSH2 0x802 JUMP JUMPDEST PUSH2 0x350 JUMP JUMPDEST PUSH2 0x95 PUSH2 0x109 CALLDATASIZE PUSH1 0x4 PUSH2 0x802 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH2 0x95 PUSH2 0x11C CALLDATASIZE PUSH1 0x4 PUSH2 0x7DF JUMP JUMPDEST PUSH2 0x40F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x8DAFB0716DBDC5222F4B82FA3495E71054F736C761C542CFFF5CF37CEEF75D46 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0x161B7D81 PUSH1 0xE2 SHL SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x19D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x1C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B9 SWAP1 PUSH2 0x872 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x275 JUMPI PUSH2 0x1D6 PUSH2 0x69A JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1E2 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1F9 JUMPI INVALID JUMPDEST DUP2 MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x206 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x223 JUMPI PUSH2 0x21E DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0x4B4 JUMP JUMPDEST PUSH2 0x26C JUMP JUMPDEST PUSH1 0x1 DUP2 MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x232 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x24A JUMPI PUSH2 0x21E DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0x584 JUMP JUMPDEST PUSH1 0x2 DUP2 MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x259 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x26C JUMPI PUSH2 0x26C DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0x61A JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x1C5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x8DAFB0716DBDC5222F4B82FA3495E71054F736C761C542CFFF5CF37CEEF75D46 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0x161B7D81 PUSH1 0xE2 SHL SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x31F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x33B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B9 SWAP1 PUSH2 0x872 JUMP JUMPDEST PUSH2 0x275 DUP4 DUP4 PUSH2 0x584 JUMP JUMPDEST PUSH4 0x161B7D81 PUSH1 0xE2 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 DUP2 MSTORE SWAP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 MSTORE SWAP1 DUP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x8DAFB0716DBDC5222F4B82FA3495E71054F736C761C542CFFF5CF37CEEF75D46 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0x161B7D81 PUSH1 0xE2 SHL SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x3E9 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x405 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B9 SWAP1 PUSH2 0x872 JUMP JUMPDEST PUSH2 0x275 DUP4 DUP4 PUSH2 0x4B4 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x8DAFB0716DBDC5222F4B82FA3495E71054F736C761C542CFFF5CF37CEEF75D46 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0x161B7D81 PUSH1 0xE2 SHL SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x48B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x4A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B9 SWAP1 PUSH2 0x872 JUMP JUMPDEST PUSH2 0x4B0 DUP3 PUSH2 0x61A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x4BD DUP3 PUSH2 0x27A JUMP JUMPDEST ISZERO PUSH2 0x4DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B9 SWAP1 PUSH2 0x8A9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x1 EQ ISZERO PUSH2 0x511 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B9 SWAP1 PUSH2 0x8E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD SWAP1 SWAP3 CALLER SWAP3 SWAP1 SWAP2 PUSH32 0x1C3AC05008A204AEF806FB7B0A907C496ED107CD989825BEB9DF5F8094C2EABD SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x58D DUP3 PUSH2 0x27A JUMP JUMPDEST ISZERO PUSH2 0x5AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B9 SWAP1 PUSH2 0x8A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD SWAP1 SWAP3 CALLER SWAP3 SWAP1 SWAP2 PUSH32 0x682F2C466C1E9F6883EB72CBCED01373E1CB18B05AE5C8BC04DC73D73E29F8CD SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x623 DUP2 PUSH2 0x27A JUMP JUMPDEST ISZERO PUSH2 0x640 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B9 SWAP1 PUSH2 0x8A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE MLOAD CALLER SWAP3 SWAP2 PUSH32 0x49C6B8B07A879425742523FA80F8FFB25E39AD518C93A5896A0DF19518397E5 SWAP2 LOG3 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP2 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6CD JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x6D7 PUSH1 0x60 PUSH2 0x917 JUMP JUMPDEST SWAP1 POP DUP2 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x6E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH2 0x6F8 DUP2 PUSH2 0x93E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x724 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x741 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x758 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD DUP7 PUSH1 0x1F DUP3 ADD SLT PUSH2 0x769 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP3 POP DUP2 DUP4 GT ISZERO PUSH2 0x779 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x786 DUP5 DUP6 DUP6 MUL ADD PUSH2 0x917 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP5 DUP2 ADD SWAP3 POP DUP2 DUP6 ADD PUSH1 0x60 DUP1 DUP7 MUL DUP5 ADD DUP8 ADD DUP11 LT ISZERO PUSH2 0x7A5 JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP4 POP JUMPDEST DUP6 DUP5 LT ISZERO PUSH2 0x7D1 JUMPI PUSH2 0x7BB DUP11 DUP4 PUSH2 0x6BC JUMP JUMPDEST DUP6 MSTORE SWAP4 DUP7 ADD SWAP4 PUSH1 0x1 SWAP4 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP2 ADD SWAP1 PUSH2 0x7A9 JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7F0 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7FB DUP2 PUSH2 0x93E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x814 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x81F DUP2 PUSH2 0x93E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x847 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x9 SWAP1 DUP3 ADD MSTORE PUSH32 0x61636C3A20617574680000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH32 0x61636C3A2066726F7A656E000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH32 0x61636C3A2062616420667265657A650000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x936 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x954 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV 0x5D 0xC0 SWAP15 DUP16 DUP7 0xE9 0xE1 EXP CALL 0x2E SGT STOP BALANCE PUSH1 0x5C 0x25 DUP3 0x4C SWAP1 0xDD 0xB1 0xEB 0x4C 0xDC 0xEF PUSH15 0xF6B7FA779F64736F6C634300060800 CALLER ",
            "sourceMap": "262:2460:7:-:0;;;1093:89;5:9:-1;2:2;;;27:1;24;17:12;2:2;1093:89:7;;;;;;;;;;;;;;;;;;;;;1144:31;-1:-1:-1;;;1162:12:7;-1:-1:-1;;;;;1144:6:7;:31;:::i;:::-;1093:89;262:2460;;1960:258;2032:15;2041:5;-1:-1:-1;;;;;2032:8:7;:15;:::i;:::-;2031:16;2023:40;;;;-1:-1:-1;;;2023:40:7;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2081:19:7;;498:1;2081:19;;2073:47;;;;-1:-1:-1;;;2073:47:7;;;;;;;;;-1:-1:-1;;;;;;2139:12:7;;:5;:12;;;;;;;;;;;-1:-1:-1;;;;;2139:18:7;;;;;;;;;;:25;;-1:-1:-1;;2139:25:7;2160:4;2139:25;;;2179:32;2139:18;;2194:10;;2139:12;;2179:32;;2139:5;2179:32;1960:258;;:::o;2612:108::-;-1:-1:-1;;;;;;2688:12:7;2665:4;2688:12;;;;;;;;;;;498:1;2688:25;;;;;;;;;;;2612:108::o;146:263:-1:-;;261:2;249:9;240:7;236:23;232:32;229:2;;;-1:-1;;267:12;229:2;83:13;;-1:-1;;;;;2238:54;;2363:35;;2353:2;;-1:-1;;2402:12;2353:2;319:74;223:186;-1:-1;;;223:186;1060:416;1260:2;1274:47;;;641:2;1245:18;;;2010:19;-1:-1;;;2050:14;;;657:34;710:12;;;1231:245;1483:416;1683:2;1697:47;;;961:2;1668:18;;;2010:19;-1:-1;;;2050:14;;;977:38;1034:12;;;1654:245;;262:2460:7;;;;;;"
          },
          "deployedBytecode": {
            "immutableReferences": {},
            "linkReferences": {},
            "object": "608060405234801561001057600080fd5b506004361061007d5760003560e01c80637e8c7f081161005b5780637e8c7f08146100d357806396fc8abd146100e8578063a157a10d146100fb578063bdf9a7261461010e5761007d565b80631c47671b14610082578063495a98251461009757806358849734146100c0575b600080fd5b61009561009036600461072f565b610121565b005b6100aa6100a53660046107df565b61027a565b6040516100b79190610852565b60405180910390f35b6100956100ce366004610802565b6102a3565b6100db610345565b6040516100b7919061085d565b6100aa6100f6366004610802565b610350565b610095610109366004610802565b61036d565b61009561011c3660046107df565b61040f565b3360009081527f8dafb0716dbdc5222f4b82fa3495e71054f736c761c542cfff5cf37ceef75d46602052604090205463161b7d8160e21b9060ff168061019d57506001600160e01b0319811660009081526020818152604080832073ffffffffffffffffffffffffffffffffffffffff845290915290205460ff165b6101c25760405162461bcd60e51b81526004016101b990610872565b60405180910390fd5b60005b8251811015610275576101d661069a565b8382815181106101e257fe5b60200260200101519050600060028111156101f957fe5b8151600281111561020657fe5b14156102235761021e816020015182604001516104b4565b61026c565b60018151600281111561023257fe5b141561024a5761021e81602001518260400151610584565b60028151600281111561025957fe5b141561026c5761026c816020015161061a565b506001016101c5565b505050565b6001600160e01b0319166000908152602081815260408083206001845290915290205460ff1690565b3360009081527f8dafb0716dbdc5222f4b82fa3495e71054f736c761c542cfff5cf37ceef75d46602052604090205463161b7d8160e21b9060ff168061031f57506001600160e01b0319811660009081526020818152604080832073ffffffffffffffffffffffffffffffffffffffff845290915290205460ff165b61033b5760405162461bcd60e51b81526004016101b990610872565b6102758383610584565b63161b7d8160e21b81565b600060208181529281526040808220909352908152205460ff1681565b3360009081527f8dafb0716dbdc5222f4b82fa3495e71054f736c761c542cfff5cf37ceef75d46602052604090205463161b7d8160e21b9060ff16806103e957506001600160e01b0319811660009081526020818152604080832073ffffffffffffffffffffffffffffffffffffffff845290915290205460ff165b6104055760405162461bcd60e51b81526004016101b990610872565b61027583836104b4565b3360009081527f8dafb0716dbdc5222f4b82fa3495e71054f736c761c542cfff5cf37ceef75d46602052604090205463161b7d8160e21b9060ff168061048b57506001600160e01b0319811660009081526020818152604080832073ffffffffffffffffffffffffffffffffffffffff845290915290205460ff165b6104a75760405162461bcd60e51b81526004016101b990610872565b6104b08261061a565b5050565b6104bd8261027a565b156104da5760405162461bcd60e51b81526004016101b9906108a9565b73ffffffffffffffffffffffffffffffffffffffff8116600114156105115760405162461bcd60e51b81526004016101b9906108e0565b6001600160e01b0319821660008181526020818152604080832073ffffffffffffffffffffffffffffffffffffffff86168085529252808320805460ff19166001179055519092339290917f1c3ac05008a204aef806fb7b0a907c496ed107cd989825beb9df5f8094c2eabd9190a45050565b61058d8261027a565b156105aa5760405162461bcd60e51b81526004016101b9906108a9565b6001600160e01b0319821660008181526020818152604080832073ffffffffffffffffffffffffffffffffffffffff86168085529252808320805460ff19169055519092339290917f682f2c466c1e9f6883eb72cbced01373e1cb18b05ae5c8bc04dc73d73e29f8cd9190a45050565b6106238161027a565b156106405760405162461bcd60e51b81526004016101b9906108a9565b6001600160e01b0319811660008181526020818152604080832060018085529252808320805460ff1916909217909155513392917f049c6b8b07a879425742523fa80f8ffb25e39ad518c93a5896a0df19518397e591a350565b6040805160608101909152806000815260006020820181905260409091015290565b6000606082840312156106cd578081fd5b6106d76060610917565b90508135600381106106e857600080fd5b815260208201356106f88161093e565b6020820152604082013573ffffffffffffffffffffffffffffffffffffffff8116811461072457600080fd5b604082015292915050565b60006020808385031215610741578182fd5b823567ffffffffffffffff80821115610758578384fd5b81850186601f820112610769578485fd5b8035925081831115610779578485fd5b6107868485850201610917565b83815284810192508185016060808602840187018a10156107a5578788fd5b8793505b858410156107d1576107bb8a836106bc565b85529386019360019390930192908101906107a9565b509098975050505050505050565b6000602082840312156107f0578081fd5b81356107fb8161093e565b9392505050565b60008060408385031215610814578081fd5b823561081f8161093e565b9150602083013573ffffffffffffffffffffffffffffffffffffffff81168114610847578182fd5b809150509250929050565b901515815260200190565b6001600160e01b031991909116815260200190565b60208082526009908201527f61636c3a20617574680000000000000000000000000000000000000000000000604082015260600190565b6020808252600b908201527f61636c3a2066726f7a656e000000000000000000000000000000000000000000604082015260600190565b6020808252600f908201527f61636c3a2062616420667265657a650000000000000000000000000000000000604082015260600190565b60405181810167ffffffffffffffff8111828210171561093657600080fd5b604052919050565b6001600160e01b03198116811461095457600080fd5b5056fea2646970667358221220045dc09e8f86e9e10af12e130031605c25824c90ddb1eb4cdcef6ef6b7fa779f64736f6c63430006080033",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E8C7F08 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x7E8C7F08 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x96FC8ABD EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0xA157A10D EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0xBDF9A726 EQ PUSH2 0x10E JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x1C47671B EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x495A9825 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x58849734 EQ PUSH2 0xC0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x72F JUMP JUMPDEST PUSH2 0x121 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAA PUSH2 0xA5 CALLDATASIZE PUSH1 0x4 PUSH2 0x7DF JUMP JUMPDEST PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB7 SWAP2 SWAP1 PUSH2 0x852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0xCE CALLDATASIZE PUSH1 0x4 PUSH2 0x802 JUMP JUMPDEST PUSH2 0x2A3 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x345 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB7 SWAP2 SWAP1 PUSH2 0x85D JUMP JUMPDEST PUSH2 0xAA PUSH2 0xF6 CALLDATASIZE PUSH1 0x4 PUSH2 0x802 JUMP JUMPDEST PUSH2 0x350 JUMP JUMPDEST PUSH2 0x95 PUSH2 0x109 CALLDATASIZE PUSH1 0x4 PUSH2 0x802 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH2 0x95 PUSH2 0x11C CALLDATASIZE PUSH1 0x4 PUSH2 0x7DF JUMP JUMPDEST PUSH2 0x40F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x8DAFB0716DBDC5222F4B82FA3495E71054F736C761C542CFFF5CF37CEEF75D46 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0x161B7D81 PUSH1 0xE2 SHL SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x19D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x1C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B9 SWAP1 PUSH2 0x872 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x275 JUMPI PUSH2 0x1D6 PUSH2 0x69A JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1E2 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1F9 JUMPI INVALID JUMPDEST DUP2 MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x206 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x223 JUMPI PUSH2 0x21E DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0x4B4 JUMP JUMPDEST PUSH2 0x26C JUMP JUMPDEST PUSH1 0x1 DUP2 MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x232 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x24A JUMPI PUSH2 0x21E DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0x584 JUMP JUMPDEST PUSH1 0x2 DUP2 MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x259 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x26C JUMPI PUSH2 0x26C DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0x61A JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x1C5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x8DAFB0716DBDC5222F4B82FA3495E71054F736C761C542CFFF5CF37CEEF75D46 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0x161B7D81 PUSH1 0xE2 SHL SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x31F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x33B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B9 SWAP1 PUSH2 0x872 JUMP JUMPDEST PUSH2 0x275 DUP4 DUP4 PUSH2 0x584 JUMP JUMPDEST PUSH4 0x161B7D81 PUSH1 0xE2 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 DUP2 MSTORE SWAP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 MSTORE SWAP1 DUP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x8DAFB0716DBDC5222F4B82FA3495E71054F736C761C542CFFF5CF37CEEF75D46 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0x161B7D81 PUSH1 0xE2 SHL SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x3E9 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x405 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B9 SWAP1 PUSH2 0x872 JUMP JUMPDEST PUSH2 0x275 DUP4 DUP4 PUSH2 0x4B4 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x8DAFB0716DBDC5222F4B82FA3495E71054F736C761C542CFFF5CF37CEEF75D46 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0x161B7D81 PUSH1 0xE2 SHL SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0x48B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x4A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B9 SWAP1 PUSH2 0x872 JUMP JUMPDEST PUSH2 0x4B0 DUP3 PUSH2 0x61A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x4BD DUP3 PUSH2 0x27A JUMP JUMPDEST ISZERO PUSH2 0x4DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B9 SWAP1 PUSH2 0x8A9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x1 EQ ISZERO PUSH2 0x511 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B9 SWAP1 PUSH2 0x8E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD SWAP1 SWAP3 CALLER SWAP3 SWAP1 SWAP2 PUSH32 0x1C3AC05008A204AEF806FB7B0A907C496ED107CD989825BEB9DF5F8094C2EABD SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x58D DUP3 PUSH2 0x27A JUMP JUMPDEST ISZERO PUSH2 0x5AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B9 SWAP1 PUSH2 0x8A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD SWAP1 SWAP3 CALLER SWAP3 SWAP1 SWAP2 PUSH32 0x682F2C466C1E9F6883EB72CBCED01373E1CB18B05AE5C8BC04DC73D73E29F8CD SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x623 DUP2 PUSH2 0x27A JUMP JUMPDEST ISZERO PUSH2 0x640 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B9 SWAP1 PUSH2 0x8A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE MLOAD CALLER SWAP3 SWAP2 PUSH32 0x49C6B8B07A879425742523FA80F8FFB25E39AD518C93A5896A0DF19518397E5 SWAP2 LOG3 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP2 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6CD JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x6D7 PUSH1 0x60 PUSH2 0x917 JUMP JUMPDEST SWAP1 POP DUP2 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x6E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH2 0x6F8 DUP2 PUSH2 0x93E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x724 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x741 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x758 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD DUP7 PUSH1 0x1F DUP3 ADD SLT PUSH2 0x769 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP3 POP DUP2 DUP4 GT ISZERO PUSH2 0x779 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x786 DUP5 DUP6 DUP6 MUL ADD PUSH2 0x917 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP5 DUP2 ADD SWAP3 POP DUP2 DUP6 ADD PUSH1 0x60 DUP1 DUP7 MUL DUP5 ADD DUP8 ADD DUP11 LT ISZERO PUSH2 0x7A5 JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP4 POP JUMPDEST DUP6 DUP5 LT ISZERO PUSH2 0x7D1 JUMPI PUSH2 0x7BB DUP11 DUP4 PUSH2 0x6BC JUMP JUMPDEST DUP6 MSTORE SWAP4 DUP7 ADD SWAP4 PUSH1 0x1 SWAP4 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP2 ADD SWAP1 PUSH2 0x7A9 JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7F0 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7FB DUP2 PUSH2 0x93E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x814 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x81F DUP2 PUSH2 0x93E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x847 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x9 SWAP1 DUP3 ADD MSTORE PUSH32 0x61636C3A20617574680000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH32 0x61636C3A2066726F7A656E000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH32 0x61636C3A2062616420667265657A650000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x936 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x954 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV 0x5D 0xC0 SWAP15 DUP16 DUP7 0xE9 0xE1 EXP CALL 0x2E SGT STOP BALANCE PUSH1 0x5C 0x25 DUP3 0x4C SWAP1 0xDD 0xB1 0xEB 0x4C 0xDC 0xEF PUSH15 0xF6B7FA779F64736F6C634300060800 CALLER ",
            "sourceMap": "262:2460:7:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;262:2460:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;1502:452:7;;;;;;;;;:::i;:::-;;2612:108;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1298:106;;;;;;;;;:::i;285:153::-;;;:::i;:::-;;;;;;;;565:58;;;;;;;;;:::i;1188:104::-;;;;;;;;;:::i;1410:86::-;;;;;;;;;:::i;1502:452::-;933:10;920:5;:24;;;:12;;:24;:12;:24;;;-1:-1:-1;;;328:110:7;920:24;;;:84;;-1:-1:-1;;;;;;;982:12:7;;:5;:12;;;;;;;;;;;:22;;;;;;;;;;;920:84;899:166;;;;-1:-1:-1;;;899:166:7;;;;;;;;;;;;;;;;;1591:9:::1;1586:362;1610:5;:12;1606:1;:16;1586:362;;;1643:32;;:::i;:::-;1678:5;1684:1;1678:8;;;;;;;;;;;;;;1643:43;;1716:24;1705:35;;;;;;;;:7:::0;;:35:::1;::::0;::::1;;;;;;;1701:236;;;1742:27;1749:4;:9;;;1760:4;:8;;;1742:6;:27::i;:::-;1701:236;;;1803:25;1792:7:::0;;:36:::1;::::0;::::1;;;;;;;1788:149;;;1830:28;1838:4;:9;;;1849:4;:8;;;1830:7;:28::i;1788:149::-;1892:25;1881:7:::0;;:36:::1;::::0;::::1;;;;;;;1877:60;;;1919:18;1927:4;:9;;;1919:7;:18::i;:::-;-1:-1:-1::0;1624:3:7::1;;1586:362;;;;1502:452:::0;;:::o;2612:108::-;-1:-1:-1;;;;;;2688:12:7;2665:4;2688:12;;;;;;;;;;;498:1;2688:25;;;;;;;;;;;2612:108::o;1298:106::-;933:10;920:5;:24;;;:12;;:24;:12;:24;;;-1:-1:-1;;;328:110:7;920:24;;;:84;;-1:-1:-1;;;;;;;982:12:7;;:5;:12;;;;;;;;;;;:22;;;;;;;;;;;920:84;899:166;;;;-1:-1:-1;;;899:166:7;;;;;;;;;1377:20:::1;1385:5;1392:4;1377:7;:20::i;285:153::-:0;-1:-1:-1;;;285:153:7;:::o;565:58::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;1188:104::-;933:10;920:5;:24;;;:12;;:24;:12;:24;;;-1:-1:-1;;;328:110:7;920:24;;;:84;;-1:-1:-1;;;;;;;982:12:7;;:5;:12;;;;;;;;;;;:22;;;;;;;;;;;920:84;899:166;;;;-1:-1:-1;;;899:166:7;;;;;;;;;1266:19:::1;1273:5;1280:4;1266:6;:19::i;1410:86::-:0;933:10;920:5;:24;;;:12;;:24;:12;:24;;;-1:-1:-1;;;328:110:7;920:24;;;:84;;-1:-1:-1;;;;;;;982:12:7;;:5;:12;;;;;;;;;;;:22;;;;;;;;;;;920:84;899:166;;;;-1:-1:-1;;;899:166:7;;;;;;;;;1475:14:::1;1483:5;1475:7;:14::i;:::-;1410:86:::0;;:::o;1960:258::-;2032:15;2041:5;2032:8;:15::i;:::-;2031:16;2023:40;;;;-1:-1:-1;;;2023:40:7;;;;;;;;;2081:19;;;498:1;2081:19;;2073:47;;;;-1:-1:-1;;;2073:47:7;;;;;;;;;-1:-1:-1;;;;;;2139:12:7;;:5;:12;;;;;;;;;;;:18;;;;;;;;;;;:25;;-1:-1:-1;;2139:25:7;2160:4;2139:25;;;2179:32;2139:18;;2194:10;;2139:12;;2179:32;;2139:5;2179:32;1960:258;;:::o;2224:195::-;2297:15;2306:5;2297:8;:15::i;:::-;2296:16;2288:40;;;;-1:-1:-1;;;2288:40:7;;;;;;;;;-1:-1:-1;;;;;;2339:12:7;;2360:5;2339:12;;;;;;;;;;;:18;;;;;;;;;;;:26;;-1:-1:-1;;2339:26:7;;;2380:32;2339:18;;2395:10;;2339:12;;2380:32;;2360:5;2380:32;2224:195;;:::o;2425:181::-;2484:15;2493:5;2484:8;:15::i;:::-;2483:16;2475:40;;;;-1:-1:-1;;;2475:40:7;;;;;;;;;-1:-1:-1;;;;;;2526:12:7;;:5;:12;;;;;;;;;;;2554:4;2526:25;;;;;;;;:32;;-1:-1:-1;;2526:32:7;;;;;;;2574:25;2588:10;;2526:12;2574:25;;;2425:181;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1301:619::-;;1416:4;1404:9;1399:3;1395:19;1391:30;1388:2;;;-1:-1;;1424:12;1388:2;1452:20;1416:4;1452:20;;;1443:29;;1199:6;1186:20;7447:1;7440:5;7437:12;7427:2;;7463:1;;7453:12;7427:2;1527:86;;1674:2;1727:22;;1039:20;1064:32;1039:20;1064:32;;;1674:2;1689:16;;1682:74;1816:2;1870:22;;72:20;7066:42;7055:54;;7180:35;;7170:2;;7229:1;;7219:12;7170:2;1816;1831:16;;1824:75;1835:5;1382:538;-1:-1;;1382:538;1927:429;;2082:2;;2070:9;2061:7;2057:23;2053:32;2050:2;;;-1:-1;;2088:12;2050:2;2146:17;2133:31;2184:18;;2176:6;2173:30;2170:2;;;-1:-1;;2206:12;2170:2;2323:6;2312:9;2308:22;323:3;316:4;308:6;304:17;300:27;290:2;;-1:-1;;331:12;290:2;378:6;365:20;351:34;;2184:18;6320:6;6317:30;6314:2;;;-1:-1;;6350:12;6314:2;400:106;2082:2;;6387:6;6383:17;6448:15;400:106;;;534:21;;;591:14;;;;-1:-1;566:17;;;692:4;680:17;;;671:27;;;;668:36;-1:-1;665:2;;;-1:-1;;707:12;665:2;-1:-1;733:10;;727:232;752:6;749:1;746:13;727:232;;;832:63;891:3;879:10;832:63;;;820:76;;910:14;;;;774:1;767:9;;;;;938:14;;;;727:232;;;-1:-1;2226:114;;2044:312;-1:-1;;;;;;;;2044:312;2363:239;;2466:2;2454:9;2445:7;2441:23;2437:32;2434:2;;;-1:-1;;2472:12;2434:2;1052:6;1039:20;1064:32;1090:5;1064:32;;;2524:62;2428:174;-1:-1;;;2428:174;2609:364;;;2729:2;2717:9;2708:7;2704:23;2700:32;2697:2;;;-1:-1;;2735:12;2697:2;1052:6;1039:20;1064:32;1090:5;1064:32;;;2787:62;-1:-1;2886:2;2925:22;;72:20;7066:42;7055:54;;7180:35;;7170:2;;-1:-1;;7219:12;7170:2;2894:63;;;;2691:282;;;;;;4169:210;6816:13;;6809:21;3045:34;;4290:2;4275:18;;4261:118;4386:218;-1:-1;;;;;;6903:78;;;;3160:36;;4511:2;4496:18;;4482:122;4611:416;4811:2;4825:47;;;3433:1;4796:18;;;6584:19;3468:11;6624:14;;;3448:32;3499:12;;;4782:245;5034:416;5234:2;5248:47;;;3750:2;5219:18;;;6584:19;3786:13;6624:14;;;3766:34;3819:12;;;5205:245;5457:416;5657:2;5671:47;;;4070:2;5642:18;;;6584:19;4106:17;6624:14;;;4086:38;4143:12;;;5628:245;5880:256;5942:2;5936:9;5968:17;;;6043:18;6028:34;;6064:22;;;6025:62;6022:2;;;6100:1;;6090:12;6022:2;5942;6109:22;5920:216;;-1:-1;5920:216;7245:115;-1:-1;;;;;;7330:5;6903:78;7306:5;7303:34;7293:2;;7351:1;;7341:12;7293:2;7287:73;"
          },
          "methodIdentifiers": {
            "ROOT_ROLE()": "7e8c7f08",
            "bulk((uint8,bytes4,address)[])": "1c47671b",
            "freeze(bytes4)": "bdf9a726",
            "grant(bytes4,address)": "a157a10d",
            "isFrozen(bytes4)": "495a9825",
            "revoke(bytes4,address)": "58849734",
            "roles(bytes4,address)": "96fc8abd"
          }
        }
      },
      "MiniACLData": {
        "abi": [],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122065316fab99c71da43f4a36951914ba2018d486f0e39120482c06ac65ae3e169064736f6c63430006080033",
            "opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0x316FAB99C71D LOG4 EXTCODEHASH 0x4A CALLDATASIZE SWAP6 NOT EQ 0xBA KECCAK256 XOR 0xD4 DUP7 CREATE 0xE3 SWAP2 KECCAK256 0x48 0x2C MOD 0xAC PUSH6 0xAE3E16906473 PUSH16 0x6C634300060800330000000000000000 ",
            "sourceMap": "105:155:7:-:0;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
          },
          "deployedBytecode": {
            "immutableReferences": {},
            "linkReferences": {},
            "object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122065316fab99c71da43f4a36951914ba2018d486f0e39120482c06ac65ae3e169064736f6c63430006080033",
            "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0x316FAB99C71D LOG4 EXTCODEHASH 0x4A CALLDATASIZE SWAP6 NOT EQ 0xBA KECCAK256 XOR 0xD4 DUP7 CREATE 0xE3 SWAP2 KECCAK256 0x48 0x2C MOD 0xAC PUSH6 0xAE3E16906473 PUSH16 0x6C634300060800330000000000000000 ",
            "sourceMap": "105:155:7:-:0;;;;;;12:1:-1;9;2:12"
          },
          "methodIdentifiers": {}
        }
      }
    },
    "contracts/lib/OptimisticQueueStateLib.sol": {
      "OptimisticQueueStateLib": {
        "abi": [],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122096909ab10d874dd94f0d01be40672b6d88479f487836fef06d1e0f329aef3ed664736f6c63430006080033",
            "opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 SWAP1 SWAP11 0xB1 0xD DUP8 0x4D 0xD9 0x4F 0xD ADD 0xBE BLOCKHASH PUSH8 0x2B6D88479F487836 INVALID CREATE PUSH14 0x1E0F329AEF3ED664736F6C634300 MOD ADDMOD STOP CALLER ",
            "sourceMap": "71:666:8:-:0;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
          },
          "deployedBytecode": {
            "immutableReferences": {},
            "linkReferences": {},
            "object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122096909ab10d874dd94f0d01be40672b6d88479f487836fef06d1e0f329aef3ed664736f6c63430006080033",
            "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 SWAP1 SWAP11 0xB1 0xD DUP8 0x4D 0xD9 0x4F 0xD ADD 0xBE BLOCKHASH PUSH8 0x2B6D88479F487836 INVALID CREATE PUSH14 0x1E0F329AEF3ED664736F6C634300 MOD ADDMOD STOP CALLER ",
            "sourceMap": "71:666:8:-:0;;;;;;12:1:-1;9;2:12"
          },
          "methodIdentifiers": {}
        }
      }
    },
    "contracts/lib/SafeERC20.sol": {
      "ERC20": {
        "abi": [
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Approval",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_owner",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "_spender",
                "type": "address"
              }
            ],
            "name": "allowance",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_spender",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "_value",
                "type": "uint256"
              }
            ],
            "name": "approve",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_who",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "_value",
                "type": "uint256"
              }
            ],
            "name": "transfer",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "_to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "_value",
                "type": "uint256"
              }
            ],
            "name": "transferFrom",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          },
          "deployedBytecode": {
            "immutableReferences": {},
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          },
          "methodIdentifiers": {
            "allowance(address,address)": "dd62ed3e",
            "approve(address,uint256)": "095ea7b3",
            "balanceOf(address)": "70a08231",
            "totalSupply()": "18160ddd",
            "transfer(address,uint256)": "a9059cbb",
            "transferFrom(address,address,uint256)": "23b872dd"
          }
        }
      },
      "SafeERC20": {
        "abi": [],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122055a4ffe695bf1d744fb118168d3ec79498bf455014d60c926f7e810376be9c3664736f6c63430006080033",
            "opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE LOG4 SELFDESTRUCT 0xE6 SWAP6 0xBF SAR PUSH21 0x4FB118168D3EC79498BF455014D60C926F7E810376 0xBE SWAP13 CALLDATASIZE PUSH5 0x736F6C6343 STOP MOD ADDMOD STOP CALLER ",
            "sourceMap": "1344:5522:9:-:0;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
          },
          "deployedBytecode": {
            "immutableReferences": {},
            "linkReferences": {},
            "object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122055a4ffe695bf1d744fb118168d3ec79498bf455014d60c926f7e810376be9c3664736f6c63430006080033",
            "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE LOG4 SELFDESTRUCT 0xE6 SWAP6 0xBF SAR PUSH21 0x4FB118168D3EC79498BF455014D60C926F7E810376 0xBE SWAP13 CALLDATASIZE PUSH5 0x736F6C6343 STOP MOD ADDMOD STOP CALLER ",
            "sourceMap": "1344:5522:9:-:0;;;;;;12:1:-1;9;2:12"
          },
          "methodIdentifiers": {}
        }
      }
    },
    "erc3k/contracts/ERC3000.sol": {
      "ERC3000": {
        "abi": [
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "containerHash",
                "type": "bytes32"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "actor",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "bytes",
                "name": "reason",
                "type": "bytes"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "resolverId",
                "type": "uint256"
              },
              {
                "components": [
                  {
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                  }
                ],
                "indexed": false,
                "internalType": "struct ERC3000Data.Collateral",
                "name": "collateral",
                "type": "tuple"
              }
            ],
            "name": "Challenged",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "containerHash",
                "type": "bytes32"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "actor",
                "type": "address"
              },
              {
                "components": [
                  {
                    "internalType": "uint256",
                    "name": "executionDelay",
                    "type": "uint256"
                  },
                  {
                    "components": [
                      {
                        "internalType": "address",
                        "name": "token",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256",
                        "name": "amount",
                        "type": "uint256"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Collateral",
                    "name": "scheduleDeposit",
                    "type": "tuple"
                  },
                  {
                    "components": [
                      {
                        "internalType": "address",
                        "name": "token",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256",
                        "name": "amount",
                        "type": "uint256"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Collateral",
                    "name": "challengeDeposit",
                    "type": "tuple"
                  },
                  {
                    "components": [
                      {
                        "internalType": "address",
                        "name": "token",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256",
                        "name": "amount",
                        "type": "uint256"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Collateral",
                    "name": "vetoDeposit",
                    "type": "tuple"
                  },
                  {
                    "internalType": "address",
                    "name": "resolver",
                    "type": "address"
                  },
                  {
                    "internalType": "bytes",
                    "name": "rules",
                    "type": "bytes"
                  }
                ],
                "indexed": false,
                "internalType": "struct ERC3000Data.Config",
                "name": "config",
                "type": "tuple"
              }
            ],
            "name": "Configured",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "containerHash",
                "type": "bytes32"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "actor",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "bytes[]",
                "name": "execResults",
                "type": "bytes[]"
              }
            ],
            "name": "Executed",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "containerHash",
                "type": "bytes32"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "actor",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "bool",
                "name": "approved",
                "type": "bool"
              }
            ],
            "name": "Resolved",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "containerHash",
                "type": "bytes32"
              },
              {
                "components": [
                  {
                    "internalType": "uint256",
                    "name": "nonce",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "executionTime",
                    "type": "uint256"
                  },
                  {
                    "internalType": "address",
                    "name": "submitter",
                    "type": "address"
                  },
                  {
                    "internalType": "contract IERC3000Executor",
                    "name": "executor",
                    "type": "address"
                  },
                  {
                    "components": [
                      {
                        "internalType": "address",
                        "name": "to",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256",
                        "name": "value",
                        "type": "uint256"
                      },
                      {
                        "internalType": "bytes",
                        "name": "data",
                        "type": "bytes"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Action[]",
                    "name": "actions",
                    "type": "tuple[]"
                  },
                  {
                    "internalType": "bytes",
                    "name": "proof",
                    "type": "bytes"
                  }
                ],
                "indexed": false,
                "internalType": "struct ERC3000Data.Payload",
                "name": "payload",
                "type": "tuple"
              },
              {
                "components": [
                  {
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                  }
                ],
                "indexed": false,
                "internalType": "struct ERC3000Data.Collateral",
                "name": "collateral",
                "type": "tuple"
              }
            ],
            "name": "Scheduled",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "containerHash",
                "type": "bytes32"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "actor",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "bytes",
                "name": "reason",
                "type": "bytes"
              },
              {
                "components": [
                  {
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                  }
                ],
                "indexed": false,
                "internalType": "struct ERC3000Data.Collateral",
                "name": "collateral",
                "type": "tuple"
              }
            ],
            "name": "Vetoed",
            "type": "event"
          },
          {
            "inputs": [
              {
                "components": [
                  {
                    "components": [
                      {
                        "internalType": "uint256",
                        "name": "nonce",
                        "type": "uint256"
                      },
                      {
                        "internalType": "uint256",
                        "name": "executionTime",
                        "type": "uint256"
                      },
                      {
                        "internalType": "address",
                        "name": "submitter",
                        "type": "address"
                      },
                      {
                        "internalType": "contract IERC3000Executor",
                        "name": "executor",
                        "type": "address"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                          },
                          {
                            "internalType": "bytes",
                            "name": "data",
                            "type": "bytes"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Action[]",
                        "name": "actions",
                        "type": "tuple[]"
                      },
                      {
                        "internalType": "bytes",
                        "name": "proof",
                        "type": "bytes"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Payload",
                    "name": "payload",
                    "type": "tuple"
                  },
                  {
                    "components": [
                      {
                        "internalType": "uint256",
                        "name": "executionDelay",
                        "type": "uint256"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Collateral",
                        "name": "scheduleDeposit",
                        "type": "tuple"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Collateral",
                        "name": "challengeDeposit",
                        "type": "tuple"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Collateral",
                        "name": "vetoDeposit",
                        "type": "tuple"
                      },
                      {
                        "internalType": "address",
                        "name": "resolver",
                        "type": "address"
                      },
                      {
                        "internalType": "bytes",
                        "name": "rules",
                        "type": "bytes"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Config",
                    "name": "config",
                    "type": "tuple"
                  }
                ],
                "internalType": "struct ERC3000Data.Container",
                "name": "container",
                "type": "tuple"
              },
              {
                "internalType": "bytes",
                "name": "reason",
                "type": "bytes"
              }
            ],
            "name": "challenge",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "resolverId",
                "type": "uint256"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "components": [
                  {
                    "internalType": "uint256",
                    "name": "executionDelay",
                    "type": "uint256"
                  },
                  {
                    "components": [
                      {
                        "internalType": "address",
                        "name": "token",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256",
                        "name": "amount",
                        "type": "uint256"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Collateral",
                    "name": "scheduleDeposit",
                    "type": "tuple"
                  },
                  {
                    "components": [
                      {
                        "internalType": "address",
                        "name": "token",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256",
                        "name": "amount",
                        "type": "uint256"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Collateral",
                    "name": "challengeDeposit",
                    "type": "tuple"
                  },
                  {
                    "components": [
                      {
                        "internalType": "address",
                        "name": "token",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256",
                        "name": "amount",
                        "type": "uint256"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Collateral",
                    "name": "vetoDeposit",
                    "type": "tuple"
                  },
                  {
                    "internalType": "address",
                    "name": "resolver",
                    "type": "address"
                  },
                  {
                    "internalType": "bytes",
                    "name": "rules",
                    "type": "bytes"
                  }
                ],
                "internalType": "struct ERC3000Data.Config",
                "name": "config",
                "type": "tuple"
              }
            ],
            "name": "configure",
            "outputs": [
              {
                "internalType": "bytes32",
                "name": "configHash",
                "type": "bytes32"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "components": [
                  {
                    "components": [
                      {
                        "internalType": "uint256",
                        "name": "nonce",
                        "type": "uint256"
                      },
                      {
                        "internalType": "uint256",
                        "name": "executionTime",
                        "type": "uint256"
                      },
                      {
                        "internalType": "address",
                        "name": "submitter",
                        "type": "address"
                      },
                      {
                        "internalType": "contract IERC3000Executor",
                        "name": "executor",
                        "type": "address"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                          },
                          {
                            "internalType": "bytes",
                            "name": "data",
                            "type": "bytes"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Action[]",
                        "name": "actions",
                        "type": "tuple[]"
                      },
                      {
                        "internalType": "bytes",
                        "name": "proof",
                        "type": "bytes"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Payload",
                    "name": "payload",
                    "type": "tuple"
                  },
                  {
                    "components": [
                      {
                        "internalType": "uint256",
                        "name": "executionDelay",
                        "type": "uint256"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Collateral",
                        "name": "scheduleDeposit",
                        "type": "tuple"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Collateral",
                        "name": "challengeDeposit",
                        "type": "tuple"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Collateral",
                        "name": "vetoDeposit",
                        "type": "tuple"
                      },
                      {
                        "internalType": "address",
                        "name": "resolver",
                        "type": "address"
                      },
                      {
                        "internalType": "bytes",
                        "name": "rules",
                        "type": "bytes"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Config",
                    "name": "config",
                    "type": "tuple"
                  }
                ],
                "internalType": "struct ERC3000Data.Container",
                "name": "container",
                "type": "tuple"
              }
            ],
            "name": "execute",
            "outputs": [
              {
                "internalType": "bytes[]",
                "name": "execResults",
                "type": "bytes[]"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "components": [
                  {
                    "components": [
                      {
                        "internalType": "uint256",
                        "name": "nonce",
                        "type": "uint256"
                      },
                      {
                        "internalType": "uint256",
                        "name": "executionTime",
                        "type": "uint256"
                      },
                      {
                        "internalType": "address",
                        "name": "submitter",
                        "type": "address"
                      },
                      {
                        "internalType": "contract IERC3000Executor",
                        "name": "executor",
                        "type": "address"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                          },
                          {
                            "internalType": "bytes",
                            "name": "data",
                            "type": "bytes"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Action[]",
                        "name": "actions",
                        "type": "tuple[]"
                      },
                      {
                        "internalType": "bytes",
                        "name": "proof",
                        "type": "bytes"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Payload",
                    "name": "payload",
                    "type": "tuple"
                  },
                  {
                    "components": [
                      {
                        "internalType": "uint256",
                        "name": "executionDelay",
                        "type": "uint256"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Collateral",
                        "name": "scheduleDeposit",
                        "type": "tuple"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Collateral",
                        "name": "challengeDeposit",
                        "type": "tuple"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Collateral",
                        "name": "vetoDeposit",
                        "type": "tuple"
                      },
                      {
                        "internalType": "address",
                        "name": "resolver",
                        "type": "address"
                      },
                      {
                        "internalType": "bytes",
                        "name": "rules",
                        "type": "bytes"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Config",
                    "name": "config",
                    "type": "tuple"
                  }
                ],
                "internalType": "struct ERC3000Data.Container",
                "name": "container",
                "type": "tuple"
              },
              {
                "internalType": "uint256",
                "name": "resolverId",
                "type": "uint256"
              }
            ],
            "name": "resolve",
            "outputs": [
              {
                "internalType": "bytes[]",
                "name": "execResults",
                "type": "bytes[]"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "components": [
                  {
                    "components": [
                      {
                        "internalType": "uint256",
                        "name": "nonce",
                        "type": "uint256"
                      },
                      {
                        "internalType": "uint256",
                        "name": "executionTime",
                        "type": "uint256"
                      },
                      {
                        "internalType": "address",
                        "name": "submitter",
                        "type": "address"
                      },
                      {
                        "internalType": "contract IERC3000Executor",
                        "name": "executor",
                        "type": "address"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                          },
                          {
                            "internalType": "bytes",
                            "name": "data",
                            "type": "bytes"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Action[]",
                        "name": "actions",
                        "type": "tuple[]"
                      },
                      {
                        "internalType": "bytes",
                        "name": "proof",
                        "type": "bytes"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Payload",
                    "name": "payload",
                    "type": "tuple"
                  },
                  {
                    "components": [
                      {
                        "internalType": "uint256",
                        "name": "executionDelay",
                        "type": "uint256"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Collateral",
                        "name": "scheduleDeposit",
                        "type": "tuple"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Collateral",
                        "name": "challengeDeposit",
                        "type": "tuple"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Collateral",
                        "name": "vetoDeposit",
                        "type": "tuple"
                      },
                      {
                        "internalType": "address",
                        "name": "resolver",
                        "type": "address"
                      },
                      {
                        "internalType": "bytes",
                        "name": "rules",
                        "type": "bytes"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Config",
                    "name": "config",
                    "type": "tuple"
                  }
                ],
                "internalType": "struct ERC3000Data.Container",
                "name": "container",
                "type": "tuple"
              }
            ],
            "name": "schedule",
            "outputs": [
              {
                "internalType": "bytes32",
                "name": "actionHash",
                "type": "bytes32"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes4",
                "name": "_interfaceId",
                "type": "bytes4"
              }
            ],
            "name": "supportsInterface",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "pure",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "payloadHash",
                "type": "bytes32"
              },
              {
                "components": [
                  {
                    "internalType": "uint256",
                    "name": "executionDelay",
                    "type": "uint256"
                  },
                  {
                    "components": [
                      {
                        "internalType": "address",
                        "name": "token",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256",
                        "name": "amount",
                        "type": "uint256"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Collateral",
                    "name": "scheduleDeposit",
                    "type": "tuple"
                  },
                  {
                    "components": [
                      {
                        "internalType": "address",
                        "name": "token",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256",
                        "name": "amount",
                        "type": "uint256"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Collateral",
                    "name": "challengeDeposit",
                    "type": "tuple"
                  },
                  {
                    "components": [
                      {
                        "internalType": "address",
                        "name": "token",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256",
                        "name": "amount",
                        "type": "uint256"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Collateral",
                    "name": "vetoDeposit",
                    "type": "tuple"
                  },
                  {
                    "internalType": "address",
                    "name": "resolver",
                    "type": "address"
                  },
                  {
                    "internalType": "bytes",
                    "name": "rules",
                    "type": "bytes"
                  }
                ],
                "internalType": "struct ERC3000Data.Config",
                "name": "config",
                "type": "tuple"
              },
              {
                "internalType": "bytes",
                "name": "reason",
                "type": "bytes"
              }
            ],
            "name": "veto",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          },
          "deployedBytecode": {
            "immutableReferences": {},
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          },
          "methodIdentifiers": {
            "challenge(((uint256,uint256,address,address,(address,uint256,bytes)[],bytes),(uint256,(address,uint256),(address,uint256),(address,uint256),address,bytes)),bytes)": "5decc190",
            "configure((uint256,(address,uint256),(address,uint256),(address,uint256),address,bytes))": "aa455d9f",
            "execute(((uint256,uint256,address,address,(address,uint256,bytes)[],bytes),(uint256,(address,uint256),(address,uint256),(address,uint256),address,bytes)))": "ecb6cba6",
            "resolve(((uint256,uint256,address,address,(address,uint256,bytes)[],bytes),(uint256,(address,uint256),(address,uint256),(address,uint256),address,bytes)),uint256)": "0494812a",
            "schedule(((uint256,uint256,address,address,(address,uint256,bytes)[],bytes),(uint256,(address,uint256),(address,uint256),(address,uint256),address,bytes)))": "25ddcbe0",
            "supportsInterface(bytes4)": "01ffc9a7",
            "veto(bytes32,(uint256,(address,uint256),(address,uint256),(address,uint256),address,bytes),bytes)": "a0e975cb"
          }
        }
      }
    },
    "erc3k/contracts/ERC3000Data.sol": {
      "ERC3000Data": {
        "abi": [],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122011312d8eaa6995c67bbbd7176469a9718a0aa8d330b47c12f98919ec53df63c664736f6c63430006080033",
            "opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT BALANCE 0x2D DUP15 0xAA PUSH10 0x95C67BBBD7176469A971 DUP11 EXP 0xA8 0xD3 ADDRESS 0xB4 PUSH29 0x12F98919EC53DF63C664736F6C63430006080033000000000000000000 ",
            "sourceMap": "136:1564:11:-:0;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
          },
          "deployedBytecode": {
            "immutableReferences": {},
            "linkReferences": {},
            "object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122011312d8eaa6995c67bbbd7176469a9718a0aa8d330b47c12f98919ec53df63c664736f6c63430006080033",
            "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT BALANCE 0x2D DUP15 0xAA PUSH10 0x95C67BBBD7176469A971 DUP11 EXP 0xA8 0xD3 ADDRESS 0xB4 PUSH29 0x12F98919EC53DF63C664736F6C63430006080033000000000000000000 ",
            "sourceMap": "136:1564:11:-:0;;;;;;12:1:-1;9;2:12"
          },
          "methodIdentifiers": {}
        }
      }
    },
    "erc3k/contracts/ERC3000Executor.sol": {
      "ERC3000Executor": {
        "abi": [
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "actor",
                "type": "address"
              },
              {
                "components": [
                  {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                  },
                  {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes"
                  }
                ],
                "indexed": false,
                "internalType": "struct ERC3000Data.Action[]",
                "name": "actions",
                "type": "tuple[]"
              },
              {
                "indexed": false,
                "internalType": "bytes[]",
                "name": "execResults",
                "type": "bytes[]"
              }
            ],
            "name": "Executed",
            "type": "event"
          },
          {
            "inputs": [
              {
                "components": [
                  {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                  },
                  {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes"
                  }
                ],
                "internalType": "struct ERC3000Data.Action[]",
                "name": "actions",
                "type": "tuple[]"
              }
            ],
            "name": "exec",
            "outputs": [
              {
                "internalType": "bytes[]",
                "name": "",
                "type": "bytes[]"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes4",
                "name": "_interfaceId",
                "type": "bytes4"
              }
            ],
            "name": "supportsInterface",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "pure",
            "type": "function"
          }
        ],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          },
          "deployedBytecode": {
            "immutableReferences": {},
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          },
          "methodIdentifiers": {
            "exec((address,uint256,bytes)[])": "5c3e9760",
            "supportsInterface(bytes4)": "01ffc9a7"
          }
        }
      }
    },
    "erc3k/contracts/IERC3000.sol": {
      "IERC3000": {
        "abi": [
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "containerHash",
                "type": "bytes32"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "actor",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "bytes",
                "name": "reason",
                "type": "bytes"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "resolverId",
                "type": "uint256"
              },
              {
                "components": [
                  {
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                  }
                ],
                "indexed": false,
                "internalType": "struct ERC3000Data.Collateral",
                "name": "collateral",
                "type": "tuple"
              }
            ],
            "name": "Challenged",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "containerHash",
                "type": "bytes32"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "actor",
                "type": "address"
              },
              {
                "components": [
                  {
                    "internalType": "uint256",
                    "name": "executionDelay",
                    "type": "uint256"
                  },
                  {
                    "components": [
                      {
                        "internalType": "address",
                        "name": "token",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256",
                        "name": "amount",
                        "type": "uint256"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Collateral",
                    "name": "scheduleDeposit",
                    "type": "tuple"
                  },
                  {
                    "components": [
                      {
                        "internalType": "address",
                        "name": "token",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256",
                        "name": "amount",
                        "type": "uint256"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Collateral",
                    "name": "challengeDeposit",
                    "type": "tuple"
                  },
                  {
                    "components": [
                      {
                        "internalType": "address",
                        "name": "token",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256",
                        "name": "amount",
                        "type": "uint256"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Collateral",
                    "name": "vetoDeposit",
                    "type": "tuple"
                  },
                  {
                    "internalType": "address",
                    "name": "resolver",
                    "type": "address"
                  },
                  {
                    "internalType": "bytes",
                    "name": "rules",
                    "type": "bytes"
                  }
                ],
                "indexed": false,
                "internalType": "struct ERC3000Data.Config",
                "name": "config",
                "type": "tuple"
              }
            ],
            "name": "Configured",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "containerHash",
                "type": "bytes32"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "actor",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "bytes[]",
                "name": "execResults",
                "type": "bytes[]"
              }
            ],
            "name": "Executed",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "containerHash",
                "type": "bytes32"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "actor",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "bool",
                "name": "approved",
                "type": "bool"
              }
            ],
            "name": "Resolved",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "containerHash",
                "type": "bytes32"
              },
              {
                "components": [
                  {
                    "internalType": "uint256",
                    "name": "nonce",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "executionTime",
                    "type": "uint256"
                  },
                  {
                    "internalType": "address",
                    "name": "submitter",
                    "type": "address"
                  },
                  {
                    "internalType": "contract IERC3000Executor",
                    "name": "executor",
                    "type": "address"
                  },
                  {
                    "components": [
                      {
                        "internalType": "address",
                        "name": "to",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256",
                        "name": "value",
                        "type": "uint256"
                      },
                      {
                        "internalType": "bytes",
                        "name": "data",
                        "type": "bytes"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Action[]",
                    "name": "actions",
                    "type": "tuple[]"
                  },
                  {
                    "internalType": "bytes",
                    "name": "proof",
                    "type": "bytes"
                  }
                ],
                "indexed": false,
                "internalType": "struct ERC3000Data.Payload",
                "name": "payload",
                "type": "tuple"
              },
              {
                "components": [
                  {
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                  }
                ],
                "indexed": false,
                "internalType": "struct ERC3000Data.Collateral",
                "name": "collateral",
                "type": "tuple"
              }
            ],
            "name": "Scheduled",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "containerHash",
                "type": "bytes32"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "actor",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "bytes",
                "name": "reason",
                "type": "bytes"
              },
              {
                "components": [
                  {
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                  }
                ],
                "indexed": false,
                "internalType": "struct ERC3000Data.Collateral",
                "name": "collateral",
                "type": "tuple"
              }
            ],
            "name": "Vetoed",
            "type": "event"
          },
          {
            "inputs": [
              {
                "components": [
                  {
                    "components": [
                      {
                        "internalType": "uint256",
                        "name": "nonce",
                        "type": "uint256"
                      },
                      {
                        "internalType": "uint256",
                        "name": "executionTime",
                        "type": "uint256"
                      },
                      {
                        "internalType": "address",
                        "name": "submitter",
                        "type": "address"
                      },
                      {
                        "internalType": "contract IERC3000Executor",
                        "name": "executor",
                        "type": "address"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                          },
                          {
                            "internalType": "bytes",
                            "name": "data",
                            "type": "bytes"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Action[]",
                        "name": "actions",
                        "type": "tuple[]"
                      },
                      {
                        "internalType": "bytes",
                        "name": "proof",
                        "type": "bytes"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Payload",
                    "name": "payload",
                    "type": "tuple"
                  },
                  {
                    "components": [
                      {
                        "internalType": "uint256",
                        "name": "executionDelay",
                        "type": "uint256"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Collateral",
                        "name": "scheduleDeposit",
                        "type": "tuple"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Collateral",
                        "name": "challengeDeposit",
                        "type": "tuple"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Collateral",
                        "name": "vetoDeposit",
                        "type": "tuple"
                      },
                      {
                        "internalType": "address",
                        "name": "resolver",
                        "type": "address"
                      },
                      {
                        "internalType": "bytes",
                        "name": "rules",
                        "type": "bytes"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Config",
                    "name": "config",
                    "type": "tuple"
                  }
                ],
                "internalType": "struct ERC3000Data.Container",
                "name": "container",
                "type": "tuple"
              },
              {
                "internalType": "bytes",
                "name": "reason",
                "type": "bytes"
              }
            ],
            "name": "challenge",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "resolverId",
                "type": "uint256"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "components": [
                  {
                    "internalType": "uint256",
                    "name": "executionDelay",
                    "type": "uint256"
                  },
                  {
                    "components": [
                      {
                        "internalType": "address",
                        "name": "token",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256",
                        "name": "amount",
                        "type": "uint256"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Collateral",
                    "name": "scheduleDeposit",
                    "type": "tuple"
                  },
                  {
                    "components": [
                      {
                        "internalType": "address",
                        "name": "token",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256",
                        "name": "amount",
                        "type": "uint256"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Collateral",
                    "name": "challengeDeposit",
                    "type": "tuple"
                  },
                  {
                    "components": [
                      {
                        "internalType": "address",
                        "name": "token",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256",
                        "name": "amount",
                        "type": "uint256"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Collateral",
                    "name": "vetoDeposit",
                    "type": "tuple"
                  },
                  {
                    "internalType": "address",
                    "name": "resolver",
                    "type": "address"
                  },
                  {
                    "internalType": "bytes",
                    "name": "rules",
                    "type": "bytes"
                  }
                ],
                "internalType": "struct ERC3000Data.Config",
                "name": "config",
                "type": "tuple"
              }
            ],
            "name": "configure",
            "outputs": [
              {
                "internalType": "bytes32",
                "name": "configHash",
                "type": "bytes32"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "components": [
                  {
                    "components": [
                      {
                        "internalType": "uint256",
                        "name": "nonce",
                        "type": "uint256"
                      },
                      {
                        "internalType": "uint256",
                        "name": "executionTime",
                        "type": "uint256"
                      },
                      {
                        "internalType": "address",
                        "name": "submitter",
                        "type": "address"
                      },
                      {
                        "internalType": "contract IERC3000Executor",
                        "name": "executor",
                        "type": "address"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                          },
                          {
                            "internalType": "bytes",
                            "name": "data",
                            "type": "bytes"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Action[]",
                        "name": "actions",
                        "type": "tuple[]"
                      },
                      {
                        "internalType": "bytes",
                        "name": "proof",
                        "type": "bytes"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Payload",
                    "name": "payload",
                    "type": "tuple"
                  },
                  {
                    "components": [
                      {
                        "internalType": "uint256",
                        "name": "executionDelay",
                        "type": "uint256"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Collateral",
                        "name": "scheduleDeposit",
                        "type": "tuple"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Collateral",
                        "name": "challengeDeposit",
                        "type": "tuple"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Collateral",
                        "name": "vetoDeposit",
                        "type": "tuple"
                      },
                      {
                        "internalType": "address",
                        "name": "resolver",
                        "type": "address"
                      },
                      {
                        "internalType": "bytes",
                        "name": "rules",
                        "type": "bytes"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Config",
                    "name": "config",
                    "type": "tuple"
                  }
                ],
                "internalType": "struct ERC3000Data.Container",
                "name": "container",
                "type": "tuple"
              }
            ],
            "name": "execute",
            "outputs": [
              {
                "internalType": "bytes[]",
                "name": "execResults",
                "type": "bytes[]"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "components": [
                  {
                    "components": [
                      {
                        "internalType": "uint256",
                        "name": "nonce",
                        "type": "uint256"
                      },
                      {
                        "internalType": "uint256",
                        "name": "executionTime",
                        "type": "uint256"
                      },
                      {
                        "internalType": "address",
                        "name": "submitter",
                        "type": "address"
                      },
                      {
                        "internalType": "contract IERC3000Executor",
                        "name": "executor",
                        "type": "address"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                          },
                          {
                            "internalType": "bytes",
                            "name": "data",
                            "type": "bytes"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Action[]",
                        "name": "actions",
                        "type": "tuple[]"
                      },
                      {
                        "internalType": "bytes",
                        "name": "proof",
                        "type": "bytes"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Payload",
                    "name": "payload",
                    "type": "tuple"
                  },
                  {
                    "components": [
                      {
                        "internalType": "uint256",
                        "name": "executionDelay",
                        "type": "uint256"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Collateral",
                        "name": "scheduleDeposit",
                        "type": "tuple"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Collateral",
                        "name": "challengeDeposit",
                        "type": "tuple"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Collateral",
                        "name": "vetoDeposit",
                        "type": "tuple"
                      },
                      {
                        "internalType": "address",
                        "name": "resolver",
                        "type": "address"
                      },
                      {
                        "internalType": "bytes",
                        "name": "rules",
                        "type": "bytes"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Config",
                    "name": "config",
                    "type": "tuple"
                  }
                ],
                "internalType": "struct ERC3000Data.Container",
                "name": "container",
                "type": "tuple"
              },
              {
                "internalType": "uint256",
                "name": "resolverId",
                "type": "uint256"
              }
            ],
            "name": "resolve",
            "outputs": [
              {
                "internalType": "bytes[]",
                "name": "execResults",
                "type": "bytes[]"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "components": [
                  {
                    "components": [
                      {
                        "internalType": "uint256",
                        "name": "nonce",
                        "type": "uint256"
                      },
                      {
                        "internalType": "uint256",
                        "name": "executionTime",
                        "type": "uint256"
                      },
                      {
                        "internalType": "address",
                        "name": "submitter",
                        "type": "address"
                      },
                      {
                        "internalType": "contract IERC3000Executor",
                        "name": "executor",
                        "type": "address"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                          },
                          {
                            "internalType": "bytes",
                            "name": "data",
                            "type": "bytes"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Action[]",
                        "name": "actions",
                        "type": "tuple[]"
                      },
                      {
                        "internalType": "bytes",
                        "name": "proof",
                        "type": "bytes"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Payload",
                    "name": "payload",
                    "type": "tuple"
                  },
                  {
                    "components": [
                      {
                        "internalType": "uint256",
                        "name": "executionDelay",
                        "type": "uint256"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Collateral",
                        "name": "scheduleDeposit",
                        "type": "tuple"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Collateral",
                        "name": "challengeDeposit",
                        "type": "tuple"
                      },
                      {
                        "components": [
                          {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                          }
                        ],
                        "internalType": "struct ERC3000Data.Collateral",
                        "name": "vetoDeposit",
                        "type": "tuple"
                      },
                      {
                        "internalType": "address",
                        "name": "resolver",
                        "type": "address"
                      },
                      {
                        "internalType": "bytes",
                        "name": "rules",
                        "type": "bytes"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Config",
                    "name": "config",
                    "type": "tuple"
                  }
                ],
                "internalType": "struct ERC3000Data.Container",
                "name": "container",
                "type": "tuple"
              }
            ],
            "name": "schedule",
            "outputs": [
              {
                "internalType": "bytes32",
                "name": "actionHash",
                "type": "bytes32"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "payloadHash",
                "type": "bytes32"
              },
              {
                "components": [
                  {
                    "internalType": "uint256",
                    "name": "executionDelay",
                    "type": "uint256"
                  },
                  {
                    "components": [
                      {
                        "internalType": "address",
                        "name": "token",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256",
                        "name": "amount",
                        "type": "uint256"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Collateral",
                    "name": "scheduleDeposit",
                    "type": "tuple"
                  },
                  {
                    "components": [
                      {
                        "internalType": "address",
                        "name": "token",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256",
                        "name": "amount",
                        "type": "uint256"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Collateral",
                    "name": "challengeDeposit",
                    "type": "tuple"
                  },
                  {
                    "components": [
                      {
                        "internalType": "address",
                        "name": "token",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256",
                        "name": "amount",
                        "type": "uint256"
                      }
                    ],
                    "internalType": "struct ERC3000Data.Collateral",
                    "name": "vetoDeposit",
                    "type": "tuple"
                  },
                  {
                    "internalType": "address",
                    "name": "resolver",
                    "type": "address"
                  },
                  {
                    "internalType": "bytes",
                    "name": "rules",
                    "type": "bytes"
                  }
                ],
                "internalType": "struct ERC3000Data.Config",
                "name": "config",
                "type": "tuple"
              },
              {
                "internalType": "bytes",
                "name": "reason",
                "type": "bytes"
              }
            ],
            "name": "veto",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          },
          "deployedBytecode": {
            "immutableReferences": {},
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          },
          "methodIdentifiers": {
            "challenge(((uint256,uint256,address,address,(address,uint256,bytes)[],bytes),(uint256,(address,uint256),(address,uint256),(address,uint256),address,bytes)),bytes)": "5decc190",
            "configure((uint256,(address,uint256),(address,uint256),(address,uint256),address,bytes))": "aa455d9f",
            "execute(((uint256,uint256,address,address,(address,uint256,bytes)[],bytes),(uint256,(address,uint256),(address,uint256),(address,uint256),address,bytes)))": "ecb6cba6",
            "resolve(((uint256,uint256,address,address,(address,uint256,bytes)[],bytes),(uint256,(address,uint256),(address,uint256),(address,uint256),address,bytes)),uint256)": "0494812a",
            "schedule(((uint256,uint256,address,address,(address,uint256,bytes)[],bytes),(uint256,(address,uint256),(address,uint256),(address,uint256),address,bytes)))": "25ddcbe0",
            "veto(bytes32,(uint256,(address,uint256),(address,uint256),(address,uint256),address,bytes),bytes)": "a0e975cb"
          }
        }
      }
    },
    "erc3k/contracts/IERC3000Executor.sol": {
      "IERC3000Executor": {
        "abi": [
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "actor",
                "type": "address"
              },
              {
                "components": [
                  {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                  },
                  {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes"
                  }
                ],
                "indexed": false,
                "internalType": "struct ERC3000Data.Action[]",
                "name": "actions",
                "type": "tuple[]"
              },
              {
                "indexed": false,
                "internalType": "bytes[]",
                "name": "execResults",
                "type": "bytes[]"
              }
            ],
            "name": "Executed",
            "type": "event"
          },
          {
            "inputs": [
              {
                "components": [
                  {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                  },
                  {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes"
                  }
                ],
                "internalType": "struct ERC3000Data.Action[]",
                "name": "actions",
                "type": "tuple[]"
              }
            ],
            "name": "exec",
            "outputs": [
              {
                "internalType": "bytes[]",
                "name": "",
                "type": "bytes[]"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          },
          "deployedBytecode": {
            "immutableReferences": {},
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          },
          "methodIdentifiers": {
            "exec((address,uint256,bytes)[])": "5c3e9760"
          }
        }
      }
    },
    "erc3k/contracts/lib/erc165/ERC165.sol": {
      "ERC165": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "bytes4",
                "name": "_interfaceId",
                "type": "bytes4"
              }
            ],
            "name": "supportsInterface",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "pure",
            "type": "function"
          }
        ],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          },
          "deployedBytecode": {
            "immutableReferences": {},
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          },
          "methodIdentifiers": {
            "supportsInterface(bytes4)": "01ffc9a7"
          }
        }
      }
    }
  },
  "sources": {
    "contracts/ERC3000Registry.sol": {
      "ast": {
        "absolutePath": "contracts/ERC3000Registry.sol",
        "exportedSymbols": {
          "ERC3000Registry": [
            111
          ]
        },
        "id": 112,
        "license": "GPL-3.0",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1,
            "literals": [
              "solidity",
              "0.6",
              ".8"
            ],
            "nodeType": "PragmaDirective",
            "src": "47:22:0"
          },
          {
            "absolutePath": "erc3k/contracts/ERC3000Executor.sol",
            "file": "erc3k/contracts/ERC3000Executor.sol",
            "id": 2,
            "nodeType": "ImportDirective",
            "scope": 112,
            "sourceUnit": 2413,
            "src": "71:45:0",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "absolutePath": "erc3k/contracts/ERC3000.sol",
            "file": "erc3k/contracts/ERC3000.sol",
            "id": 3,
            "nodeType": "ImportDirective",
            "scope": 112,
            "sourceUnit": 2246,
            "src": "117:37:0",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "abstract": false,
            "baseContracts": [],
            "contractDependencies": [],
            "contractKind": "contract",
            "documentation": null,
            "fullyImplemented": true,
            "id": 111,
            "linearizedBaseContracts": [
              111
            ],
            "name": "ERC3000Registry",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "constant": true,
                "id": 6,
                "mutability": "constant",
                "name": "ERC3000_INTERFACE_ID",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 111,
                "src": "187:58:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes4",
                  "typeString": "bytes4"
                },
                "typeName": {
                  "id": 4,
                  "name": "bytes4",
                  "nodeType": "ElementaryTypeName",
                  "src": "187:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  }
                },
                "value": {
                  "argumentTypes": null,
                  "hexValue": "30783961626636386138",
                  "id": 5,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "235:10:0",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_2596235432_by_1",
                    "typeString": "int_const 2596235432"
                  },
                  "value": "0x9abf68a8"
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "functionSelector": "0b9b6e8b",
                "id": 10,
                "mutability": "mutable",
                "name": "nameUsed",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 111,
                "src": "252:40:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                  "typeString": "mapping(string => bool)"
                },
                "typeName": {
                  "id": 9,
                  "keyType": {
                    "id": 7,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "261:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "252:24:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                    "typeString": "mapping(string => bool)"
                  },
                  "valueType": {
                    "id": 8,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "271:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                },
                "value": null,
                "visibility": "public"
              },
              {
                "anonymous": false,
                "documentation": null,
                "id": 20,
                "name": "Registered",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 19,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 12,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "dao",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 20,
                      "src": "316:27:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC3000Executor_$2412",
                        "typeString": "contract ERC3000Executor"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 11,
                        "name": "ERC3000Executor",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2412,
                        "src": "316:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC3000Executor_$2412",
                          "typeString": "contract ERC3000Executor"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 14,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "queue",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 20,
                      "src": "345:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC3000_$2245",
                        "typeString": "contract ERC3000"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 13,
                        "name": "ERC3000",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2245,
                        "src": "345:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC3000_$2245",
                          "typeString": "contract ERC3000"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 16,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "registrant",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 20,
                      "src": "360:26:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 15,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "360:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 18,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "name",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 20,
                      "src": "388:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 17,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "388:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "315:85:0"
                },
                "src": "299:102:0"
              },
              {
                "anonymous": false,
                "documentation": null,
                "id": 26,
                "name": "SetMetadata",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 25,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 22,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "dao",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 26,
                      "src": "424:27:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC3000Executor_$2412",
                        "typeString": "contract ERC3000Executor"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 21,
                        "name": "ERC3000Executor",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2412,
                        "src": "424:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC3000Executor_$2412",
                          "typeString": "contract ERC3000Executor"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 24,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "metadata",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 26,
                      "src": "453:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 23,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "453:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "423:45:0"
                },
                "src": "406:63:0"
              },
              {
                "body": {
                  "id": 72,
                  "nodeType": "Block",
                  "src": "600:381:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 41,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "618:16:0",
                            "subExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 38,
                                "name": "nameUsed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10,
                                "src": "619:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                                  "typeString": "mapping(string memory => bool)"
                                }
                              },
                              "id": 40,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 39,
                                "name": "_name",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32,
                                "src": "628:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "619:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "72656769737472793a206e616d652075736564",
                            "id": 42,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "636:21:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_cdf29904ef5dd9ca90814a8f36100ff4e85704b492902305b7e4fa3e70aab1e7",
                              "typeString": "literal_string \"registry: name used\""
                            },
                            "value": "registry: name used"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_cdf29904ef5dd9ca90814a8f36100ff4e85704b492902305b7e4fa3e70aab1e7",
                              "typeString": "literal_string \"registry: name used\""
                            }
                          ],
                          "id": 37,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "610:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 43,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "610:48:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 44,
                      "nodeType": "ExpressionStatement",
                      "src": "610:48:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 48,
                                "name": "ERC3000_INTERFACE_ID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6,
                                "src": "701:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 46,
                                "name": "_queue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30,
                                "src": "676:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC3000_$2245",
                                  "typeString": "contract ERC3000"
                                }
                              },
                              "id": 47,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "supportsInterface",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2244,
                              "src": "676:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_pure$_t_bytes4_$returns$_t_bool_$",
                                "typeString": "function (bytes4) pure external returns (bool)"
                              }
                            },
                            "id": 49,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "676:46:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "72656769737472793a2062616420696e74657266616365207175657565",
                            "id": 50,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "724:31:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_5ebaa4b189a539b6efa58fe61474c100296b3584fd410626c896d022186bd82a",
                              "typeString": "literal_string \"registry: bad interface queue\""
                            },
                            "value": "registry: bad interface queue"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_5ebaa4b189a539b6efa58fe61474c100296b3584fd410626c896d022186bd82a",
                              "typeString": "literal_string \"registry: bad interface queue\""
                            }
                          ],
                          "id": 45,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "668:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 51,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "668:88:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 52,
                      "nodeType": "ExpressionStatement",
                      "src": "668:88:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 57,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 53,
                            "name": "nameUsed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "847:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                              "typeString": "mapping(string memory => bool)"
                            }
                          },
                          "id": 55,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 54,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "856:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "847:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 56,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "865:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "847:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 58,
                      "nodeType": "ExpressionStatement",
                      "src": "847:22:0"
                    },
                    {
                      "eventCall": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 60,
                            "name": "_dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "896:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC3000Executor_$2412",
                              "typeString": "contract ERC3000Executor"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 61,
                            "name": "_queue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30,
                            "src": "902:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC3000_$2245",
                              "typeString": "contract ERC3000"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 62,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "910:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 63,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "910:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 64,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "922:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC3000Executor_$2412",
                              "typeString": "contract ERC3000Executor"
                            },
                            {
                              "typeIdentifier": "t_contract$_ERC3000_$2245",
                              "typeString": "contract ERC3000"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          ],
                          "id": 59,
                          "name": "Registered",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "885:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_contract$_ERC3000Executor_$2412_$_t_contract$_ERC3000_$2245_$_t_address_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (contract ERC3000Executor,contract ERC3000,address,string memory)"
                          }
                        },
                        "id": 65,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "885:43:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 66,
                      "nodeType": "EmitStatement",
                      "src": "880:48:0"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 68,
                            "name": "_dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "951:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC3000Executor_$2412",
                              "typeString": "contract ERC3000Executor"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 69,
                            "name": "_initialMetadata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "957:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC3000Executor_$2412",
                              "typeString": "contract ERC3000Executor"
                            },
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          ],
                          "id": 67,
                          "name": "_setMetadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 110,
                          "src": "938:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC3000Executor_$2412_$_t_bytes_memory_ptr_$returns$__$",
                            "typeString": "function (contract ERC3000Executor,bytes memory)"
                          }
                        },
                        "id": 70,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "938:36:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 71,
                      "nodeType": "ExpressionStatement",
                      "src": "938:36:0"
                    }
                  ]
                },
                "documentation": null,
                "functionSelector": "76d64974",
                "id": 73,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "register",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 35,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 28,
                      "mutability": "mutable",
                      "name": "_dao",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 73,
                      "src": "493:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC3000Executor_$2412",
                        "typeString": "contract ERC3000Executor"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 27,
                        "name": "ERC3000Executor",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2412,
                        "src": "493:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC3000Executor_$2412",
                          "typeString": "contract ERC3000Executor"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 30,
                      "mutability": "mutable",
                      "name": "_queue",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 73,
                      "src": "515:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC3000_$2245",
                        "typeString": "contract ERC3000"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 29,
                        "name": "ERC3000",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2245,
                        "src": "515:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC3000_$2245",
                          "typeString": "contract ERC3000"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 32,
                      "mutability": "mutable",
                      "name": "_name",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 73,
                      "src": "531:21:0",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 31,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "531:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 34,
                      "mutability": "mutable",
                      "name": "_initialMetadata",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 73,
                      "src": "554:31:0",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 33,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "554:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "492:94:0"
                },
                "returnParameters": {
                  "id": 36,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "600:0:0"
                },
                "scope": 111,
                "src": "475:506:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 86,
                  "nodeType": "Block",
                  "src": "1039:69:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 80,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1078:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 81,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1078:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 79,
                              "name": "ERC3000Executor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2412,
                              "src": "1062:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC3000Executor_$2412_$",
                                "typeString": "type(contract ERC3000Executor)"
                              }
                            },
                            "id": 82,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1062:27:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC3000Executor_$2412",
                              "typeString": "contract ERC3000Executor"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 83,
                            "name": "_metadata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75,
                            "src": "1091:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC3000Executor_$2412",
                              "typeString": "contract ERC3000Executor"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 78,
                          "name": "_setMetadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 110,
                          "src": "1049:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC3000Executor_$2412_$_t_bytes_memory_ptr_$returns$__$",
                            "typeString": "function (contract ERC3000Executor,bytes memory)"
                          }
                        },
                        "id": 84,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1049:52:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 85,
                      "nodeType": "ExpressionStatement",
                      "src": "1049:52:0"
                    }
                  ]
                },
                "documentation": null,
                "functionSelector": "ee57e36f",
                "id": 87,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "setMetadata",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 76,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 75,
                      "mutability": "mutable",
                      "name": "_metadata",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 87,
                      "src": "1008:22:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 74,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1008:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1007:24:0"
                },
                "returnParameters": {
                  "id": 77,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1039:0:0"
                },
                "scope": 111,
                "src": "987:121:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 109,
                  "nodeType": "Block",
                  "src": "1191:143:0",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 97,
                                    "name": "_dao",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 89,
                                    "src": "1232:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC3000Executor_$2412",
                                      "typeString": "contract ERC3000Executor"
                                    }
                                  },
                                  "id": 98,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "exec",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2536,
                                  "src": "1232:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_struct$_Action_$2275_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                                    "typeString": "function (struct ERC3000Data.Action memory[] memory) external returns (bytes memory[] memory)"
                                  }
                                },
                                "id": 99,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1232:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 95,
                                "name": "_dao",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 89,
                                "src": "1209:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC3000Executor_$2412",
                                  "typeString": "contract ERC3000Executor"
                                }
                              },
                              "id": 96,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "supportsInterface",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2411,
                              "src": "1209:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_pure$_t_bytes4_$returns$_t_bool_$",
                                "typeString": "function (bytes4) pure external returns (bool)"
                              }
                            },
                            "id": 100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1209:42:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "72656769737472793a2062616420696e746572666163652064616f",
                            "id": 101,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1253:29:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_a1a9fe93258b0379b8f2ee9cf5f931931af1864144b1985842df83347c907757",
                              "typeString": "literal_string \"registry: bad interface dao\""
                            },
                            "value": "registry: bad interface dao"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_a1a9fe93258b0379b8f2ee9cf5f931931af1864144b1985842df83347c907757",
                              "typeString": "literal_string \"registry: bad interface dao\""
                            }
                          ],
                          "id": 94,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "1201:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1201:82:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 103,
                      "nodeType": "ExpressionStatement",
                      "src": "1201:82:0"
                    },
                    {
                      "eventCall": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 105,
                            "name": "_dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89,
                            "src": "1311:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC3000Executor_$2412",
                              "typeString": "contract ERC3000Executor"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 106,
                            "name": "_metadata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 91,
                            "src": "1317:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC3000Executor_$2412",
                              "typeString": "contract ERC3000Executor"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 104,
                          "name": "SetMetadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26,
                          "src": "1299:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_contract$_ERC3000Executor_$2412_$_t_bytes_memory_ptr_$returns$__$",
                            "typeString": "function (contract ERC3000Executor,bytes memory)"
                          }
                        },
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1299:28:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 108,
                      "nodeType": "EmitStatement",
                      "src": "1294:33:0"
                    }
                  ]
                },
                "documentation": null,
                "id": 110,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_setMetadata",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 92,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 89,
                      "mutability": "mutable",
                      "name": "_dao",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 110,
                      "src": "1136:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC3000Executor_$2412",
                        "typeString": "contract ERC3000Executor"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 88,
                        "name": "ERC3000Executor",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2412,
                        "src": "1136:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC3000Executor_$2412",
                          "typeString": "contract ERC3000Executor"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 91,
                      "mutability": "mutable",
                      "name": "_metadata",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 110,
                      "src": "1158:22:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 90,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1158:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1135:46:0"
                },
                "returnParameters": {
                  "id": 93,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1191:0:0"
                },
                "scope": 111,
                "src": "1114:220:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              }
            ],
            "scope": 112,
            "src": "156:1180:0"
          }
        ],
        "src": "47:1290:0"
      },
      "id": 0
    },
    "contracts/Eaglet.sol": {
      "ast": {
        "absolutePath": "contracts/Eaglet.sol",
        "exportedSymbols": {
          "Eaglet": [
            243
          ]
        },
        "id": 244,
        "license": "GPL-3.0",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 113,
            "literals": [
              "solidity",
              "0.6",
              ".8"
            ],
            "nodeType": "PragmaDirective",
            "src": "47:22:1"
          },
          {
            "id": 114,
            "literals": [
              "experimental",
              "ABIEncoderV2"
            ],
            "nodeType": "PragmaDirective",
            "src": "70:33:1"
          },
          {
            "absolutePath": "erc3k/contracts/IERC3000.sol",
            "file": "erc3k/contracts/IERC3000.sol",
            "id": 115,
            "nodeType": "ImportDirective",
            "scope": 244,
            "sourceUnit": 2524,
            "src": "105:38:1",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "absolutePath": "erc3k/contracts/ERC3000Executor.sol",
            "file": "erc3k/contracts/ERC3000Executor.sol",
            "id": 116,
            "nodeType": "ImportDirective",
            "scope": 244,
            "sourceUnit": 2413,
            "src": "144:45:1",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "absolutePath": "contracts/lib/MiniACL.sol",
            "file": "./lib/MiniACL.sol",
            "id": 117,
            "nodeType": "ImportDirective",
            "scope": 244,
            "sourceUnit": 1794,
            "src": "191:27:1",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "abstract": false,
            "baseContracts": [
              {
                "arguments": null,
                "baseName": {
                  "contractScope": null,
                  "id": 118,
                  "name": "ERC3000Executor",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 2412,
                  "src": "239:15:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC3000Executor_$2412",
                    "typeString": "contract ERC3000Executor"
                  }
                },
                "id": 119,
                "nodeType": "InheritanceSpecifier",
                "src": "239:15:1"
              },
              {
                "arguments": null,
                "baseName": {
                  "contractScope": null,
                  "id": 120,
                  "name": "MiniACL",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1793,
                  "src": "256:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MiniACL_$1793",
                    "typeString": "contract MiniACL"
                  }
                },
                "id": 121,
                "nodeType": "InheritanceSpecifier",
                "src": "256:7:1"
              }
            ],
            "contractDependencies": [
              1793,
              2412,
              2547,
              2569
            ],
            "contractKind": "contract",
            "documentation": null,
            "fullyImplemented": true,
            "id": 243,
            "linearizedBaseContracts": [
              243,
              1793,
              2412,
              2569,
              2547
            ],
            "name": "Eaglet",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "constant": true,
                "id": 126,
                "mutability": "constant",
                "name": "EXEC_ROLE",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 243,
                "src": "270:55:1",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes4",
                  "typeString": "bytes4"
                },
                "typeName": {
                  "id": 122,
                  "name": "bytes4",
                  "nodeType": "ElementaryTypeName",
                  "src": "270:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  }
                },
                "value": {
                  "argumentTypes": null,
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 123,
                      "name": "this",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -28,
                      "src": "307:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Eaglet_$243",
                        "typeString": "contract Eaglet"
                      }
                    },
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "exec",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 242,
                    "src": "307:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_struct$_Action_$2275_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                      "typeString": "function (struct ERC3000Data.Action memory[] memory) external returns (bytes memory[] memory)"
                    }
                  },
                  "id": 125,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "memberName": "selector",
                  "nodeType": "MemberAccess",
                  "referencedDeclaration": null,
                  "src": "307:18:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  }
                },
                "visibility": "internal"
              },
              {
                "anonymous": false,
                "documentation": null,
                "id": 132,
                "name": "ETHDeposited",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 131,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 128,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "sender",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 132,
                      "src": "351:22:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 127,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "351:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 130,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 132,
                      "src": "375:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 129,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "375:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "350:39:1"
                },
                "src": "332:58:1"
              },
              {
                "body": {
                  "id": 151,
                  "nodeType": "Block",
                  "src": "576:61:1",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 144,
                            "name": "EXEC_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 126,
                            "src": "593:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 147,
                                "name": "_initialExecutor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 134,
                                "src": "612:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC3000_$2523",
                                  "typeString": "contract IERC3000"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC3000_$2523",
                                  "typeString": "contract IERC3000"
                                }
                              ],
                              "id": 146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "604:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 145,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "604:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 148,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "604:25:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 143,
                          "name": "_grant",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1719,
                          "src": "586:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$_t_address_$returns$__$",
                            "typeString": "function (bytes4,address)"
                          }
                        },
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "586:44:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 150,
                      "nodeType": "ExpressionStatement",
                      "src": "586:44:1"
                    }
                  ]
                },
                "documentation": null,
                "id": 152,
                "implemented": true,
                "kind": "constructor",
                "modifiers": [
                  {
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 139,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "562:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Eaglet_$243",
                              "typeString": "contract Eaglet"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Eaglet_$243",
                              "typeString": "contract Eaglet"
                            }
                          ],
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "554:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 137,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "554:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "554:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "id": 141,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 136,
                      "name": "MiniACL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1793,
                      "src": "546:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_MiniACL_$1793_$",
                        "typeString": "type(contract MiniACL)"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "546:22:1"
                  }
                ],
                "name": "",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 135,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 134,
                      "mutability": "mutable",
                      "name": "_initialExecutor",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 152,
                      "src": "519:25:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC3000_$2523",
                        "typeString": "contract IERC3000"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 133,
                        "name": "IERC3000",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2523,
                        "src": "519:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC3000_$2523",
                          "typeString": "contract IERC3000"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "518:27:1"
                },
                "returnParameters": {
                  "id": 142,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "576:0:1"
                },
                "scope": 243,
                "src": "507:130:1",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 162,
                  "nodeType": "Block",
                  "src": "671:57:1",
                  "statements": [
                    {
                      "eventCall": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 156,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "699:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 157,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "699:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 158,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "711:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 159,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "711:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 155,
                          "name": "ETHDeposited",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 132,
                          "src": "686:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,uint256)"
                          }
                        },
                        "id": 160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "686:35:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 161,
                      "nodeType": "EmitStatement",
                      "src": "681:40:1"
                    }
                  ]
                },
                "documentation": null,
                "id": 163,
                "implemented": true,
                "kind": "receive",
                "modifiers": [],
                "name": "",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 153,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "651:2:1"
                },
                "returnParameters": {
                  "id": 154,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "671:0:1"
                },
                "scope": 243,
                "src": "643:85:1",
                "stateMutability": "payable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "baseFunctions": [
                  2536
                ],
                "body": {
                  "id": 241,
                  "nodeType": "Block",
                  "src": "842:450:1",
                  "statements": [
                    {
                      "assignments": [
                        180
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 180,
                          "mutability": "mutable",
                          "name": "execResults",
                          "nodeType": "VariableDeclaration",
                          "overrides": null,
                          "scope": 241,
                          "src": "852:26:1",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                            "typeString": "bytes[]"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 178,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "852:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "id": 179,
                            "length": null,
                            "nodeType": "ArrayTypeName",
                            "src": "852:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                              "typeString": "bytes[]"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 187,
                      "initialValue": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 184,
                              "name": "actions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 166,
                              "src": "893:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Action_$2275_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct ERC3000Data.Action memory[] memory"
                              }
                            },
                            "id": 185,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "893:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "881:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (bytes memory[] memory)"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 181,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "885:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "id": 182,
                            "length": null,
                            "nodeType": "ArrayTypeName",
                            "src": "885:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                              "typeString": "bytes[]"
                            }
                          }
                        },
                        "id": 186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "881:27:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "852:56:1"
                    },
                    {
                      "body": {
                        "id": 230,
                        "nodeType": "Block",
                        "src": "964:235:1",
                        "statements": [
                          {
                            "assignments": [
                              200,
                              202
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 200,
                                "mutability": "mutable",
                                "name": "ok",
                                "nodeType": "VariableDeclaration",
                                "overrides": null,
                                "scope": 230,
                                "src": "1023:7:1",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "typeName": {
                                  "id": 199,
                                  "name": "bool",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1023:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "value": null,
                                "visibility": "internal"
                              },
                              {
                                "constant": false,
                                "id": 202,
                                "mutability": "mutable",
                                "name": "ret",
                                "nodeType": "VariableDeclaration",
                                "overrides": null,
                                "scope": 230,
                                "src": "1032:16:1",
                                "stateVariable": false,
                                "storageLocation": "memory",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes"
                                },
                                "typeName": {
                                  "id": 201,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1032:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_storage_ptr",
                                    "typeString": "bytes"
                                  }
                                },
                                "value": null,
                                "visibility": "internal"
                              }
                            ],
                            "id": 218,
                            "initialValue": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 213,
                                      "name": "actions",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 166,
                                      "src": "1096:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Action_$2275_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct ERC3000Data.Action memory[] memory"
                                      }
                                    },
                                    "id": 215,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 214,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 189,
                                      "src": "1104:1:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1096:10:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Action_$2275_memory_ptr",
                                      "typeString": "struct ERC3000Data.Action memory"
                                    }
                                  },
                                  "id": 216,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "data",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2274,
                                  "src": "1096:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 203,
                                        "name": "actions",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 166,
                                        "src": "1052:7:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Action_$2275_memory_ptr_$dyn_memory_ptr",
                                          "typeString": "struct ERC3000Data.Action memory[] memory"
                                        }
                                      },
                                      "id": 205,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 204,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 189,
                                        "src": "1060:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1052:10:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Action_$2275_memory_ptr",
                                        "typeString": "struct ERC3000Data.Action memory"
                                      }
                                    },
                                    "id": 206,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "to",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2270,
                                    "src": "1052:13:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 207,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "call",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "1052:18:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                  }
                                },
                                "id": 212,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "names": [
                                  "value"
                                ],
                                "nodeType": "FunctionCallOptions",
                                "options": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 208,
                                        "name": "actions",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 166,
                                        "src": "1078:7:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Action_$2275_memory_ptr_$dyn_memory_ptr",
                                          "typeString": "struct ERC3000Data.Action memory[] memory"
                                        }
                                      },
                                      "id": 210,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 209,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 189,
                                        "src": "1086:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1078:10:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Action_$2275_memory_ptr",
                                        "typeString": "struct ERC3000Data.Action memory"
                                      }
                                    },
                                    "id": 211,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "value",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2272,
                                    "src": "1078:16:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "src": "1052:43:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                  "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                }
                              },
                              "id": 217,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1052:60:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "tuple(bool,bytes memory)"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "1022:90:1"
                          },
                          {
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 220,
                                  "name": "ok",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 200,
                                  "src": "1134:2:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "hexValue": "6561676c65743a2063616c6c",
                                  "id": 221,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1138:14:1",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_1b6874201582f05d7c1dc98554dff507e2f99ec4fb5265de1b01fb52db3b2f28",
                                    "typeString": "literal_string \"eaglet: call\""
                                  },
                                  "value": "eaglet: call"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_1b6874201582f05d7c1dc98554dff507e2f99ec4fb5265de1b01fb52db3b2f28",
                                    "typeString": "literal_string \"eaglet: call\""
                                  }
                                ],
                                "id": 219,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -18,
                                  -18
                                ],
                                "referencedDeclaration": -18,
                                "src": "1126:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 222,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1126:27:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 223,
                            "nodeType": "ExpressionStatement",
                            "src": "1126:27:1"
                          },
                          {
                            "expression": {
                              "argumentTypes": null,
                              "id": 228,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 224,
                                  "name": "execResults",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 180,
                                  "src": "1168:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "bytes memory[] memory"
                                  }
                                },
                                "id": 226,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 225,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 189,
                                  "src": "1180:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "1168:14:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "argumentTypes": null,
                                "id": 227,
                                "name": "ret",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 202,
                                "src": "1185:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "src": "1168:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 229,
                            "nodeType": "ExpressionStatement",
                            "src": "1168:20:1"
                          }
                        ]
                      },
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 192,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 189,
                          "src": "939:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 193,
                            "name": "actions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 166,
                            "src": "943:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Action_$2275_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct ERC3000Data.Action memory[] memory"
                            }
                          },
                          "id": 194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "943:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "939:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 231,
                      "initializationExpression": {
                        "assignments": [
                          189
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 189,
                            "mutability": "mutable",
                            "name": "i",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 231,
                            "src": "924:9:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 188,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "924:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 191,
                        "initialValue": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "936:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "924:13:1"
                      },
                      "loopExpression": {
                        "expression": {
                          "argumentTypes": null,
                          "id": 197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "959:3:1",
                          "subExpression": {
                            "argumentTypes": null,
                            "id": 196,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 189,
                            "src": "959:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 198,
                        "nodeType": "ExpressionStatement",
                        "src": "959:3:1"
                      },
                      "nodeType": "ForStatement",
                      "src": "919:280:1"
                    },
                    {
                      "eventCall": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 233,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1223:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 234,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1223:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 235,
                            "name": "actions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 166,
                            "src": "1235:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Action_$2275_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct ERC3000Data.Action memory[] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 236,
                            "name": "execResults",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 180,
                            "src": "1244:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                              "typeString": "bytes memory[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_array$_t_struct$_Action_$2275_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct ERC3000Data.Action memory[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                              "typeString": "bytes memory[] memory"
                            }
                          ],
                          "id": 232,
                          "name": "Executed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2546,
                          "src": "1214:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_array$_t_struct$_Action_$2275_memory_ptr_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$__$",
                            "typeString": "function (address,struct ERC3000Data.Action memory[] memory,bytes memory[] memory)"
                          }
                        },
                        "id": 237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1214:42:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 238,
                      "nodeType": "EmitStatement",
                      "src": "1209:47:1"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 239,
                        "name": "execResults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 180,
                        "src": "1274:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "functionReturnParameters": 175,
                      "id": 240,
                      "nodeType": "Return",
                      "src": "1267:18:1"
                    }
                  ]
                },
                "documentation": null,
                "functionSelector": "5c3e9760",
                "id": 242,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 170,
                        "name": "EXEC_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 126,
                        "src": "806:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "id": 171,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 169,
                      "name": "auth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1554,
                      "src": "801:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$_t_bytes4_$",
                        "typeString": "modifier (bytes4)"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "801:15:1"
                  }
                ],
                "name": "exec",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 168,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "785:8:1"
                },
                "parameters": {
                  "id": 167,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 166,
                      "mutability": "mutable",
                      "name": "actions",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 242,
                      "src": "748:35:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Action_$2275_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct ERC3000Data.Action[]"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 164,
                          "name": "ERC3000Data.Action",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 2275,
                          "src": "748:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Action_$2275_storage_ptr",
                            "typeString": "struct ERC3000Data.Action"
                          }
                        },
                        "id": 165,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "748:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Action_$2275_storage_$dyn_storage_ptr",
                          "typeString": "struct ERC3000Data.Action[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "747:37:1"
                },
                "returnParameters": {
                  "id": 175,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 174,
                      "mutability": "mutable",
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 242,
                      "src": "826:14:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 172,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "826:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 173,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "826:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "825:16:1"
                },
                "scope": 243,
                "src": "734:558:1",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "public"
              }
            ],
            "scope": 244,
            "src": "220:1097:1"
          }
        ],
        "src": "47:1271:1"
      },
      "id": 1
    },
    "contracts/EagletFactory.sol": {
      "ast": {
        "absolutePath": "contracts/EagletFactory.sol",
        "exportedSymbols": {
          "EagletFactory": [
            469
          ],
          "OptimisticQueueFactory": [
            266
          ]
        },
        "id": 470,
        "license": "GPL-3.0",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 245,
            "literals": [
              "solidity",
              "0.6",
              ".8"
            ],
            "nodeType": "PragmaDirective",
            "src": "47:22:2"
          },
          {
            "id": 246,
            "literals": [
              "experimental",
              "ABIEncoderV2"
            ],
            "nodeType": "PragmaDirective",
            "src": "70:33:2"
          },
          {
            "absolutePath": "contracts/Eaglet.sol",
            "file": "./Eaglet.sol",
            "id": 247,
            "nodeType": "ImportDirective",
            "scope": 470,
            "sourceUnit": 244,
            "src": "105:22:2",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "absolutePath": "contracts/ERC3000Registry.sol",
            "file": "./ERC3000Registry.sol",
            "id": 248,
            "nodeType": "ImportDirective",
            "scope": 470,
            "sourceUnit": 112,
            "src": "128:31:2",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "absolutePath": "contracts/OptimisticQueue.sol",
            "file": "./OptimisticQueue.sol",
            "id": 249,
            "nodeType": "ImportDirective",
            "scope": 470,
            "sourceUnit": 1255,
            "src": "160:31:2",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "abstract": false,
            "baseContracts": [],
            "contractDependencies": [
              1254
            ],
            "contractKind": "contract",
            "documentation": null,
            "fullyImplemented": true,
            "id": 266,
            "linearizedBaseContracts": [
              266
            ],
            "name": "OptimisticQueueFactory",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "body": {
                  "id": 264,
                  "nodeType": "Block",
                  "src": "361:62:2",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 260,
                            "name": "_aclRoot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 251,
                            "src": "398:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 261,
                            "name": "_config",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 253,
                            "src": "408:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Config_$2288_memory_ptr",
                              "typeString": "struct ERC3000Data.Config memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_struct$_Config_$2288_memory_ptr",
                              "typeString": "struct ERC3000Data.Config memory"
                            }
                          ],
                          "id": 259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "378:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_struct$_Config_$2288_memory_ptr_$returns$_t_contract$_OptimisticQueue_$1254_$",
                            "typeString": "function (address,struct ERC3000Data.Config memory) returns (contract OptimisticQueue)"
                          },
                          "typeName": {
                            "contractScope": null,
                            "id": 258,
                            "name": "OptimisticQueue",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 1254,
                            "src": "382:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticQueue_$1254",
                              "typeString": "contract OptimisticQueue"
                            }
                          }
                        },
                        "id": 262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "378:38:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticQueue_$1254",
                          "typeString": "contract OptimisticQueue"
                        }
                      },
                      "functionReturnParameters": 257,
                      "id": 263,
                      "nodeType": "Return",
                      "src": "371:45:2"
                    }
                  ]
                },
                "documentation": null,
                "functionSelector": "328867ce",
                "id": 265,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "newQueue",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 254,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 251,
                      "mutability": "mutable",
                      "name": "_aclRoot",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 265,
                      "src": "249:16:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 250,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "249:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 253,
                      "mutability": "mutable",
                      "name": "_config",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 265,
                      "src": "267:33:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Config_$2288_memory_ptr",
                        "typeString": "struct ERC3000Data.Config"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 252,
                        "name": "ERC3000Data.Config",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2288,
                        "src": "267:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$2288_storage_ptr",
                          "typeString": "struct ERC3000Data.Config"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "248:53:2"
                },
                "returnParameters": {
                  "id": 257,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 256,
                      "mutability": "mutable",
                      "name": "queue",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 265,
                      "src": "334:21:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimisticQueue_$1254",
                        "typeString": "contract OptimisticQueue"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 255,
                        "name": "OptimisticQueue",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1254,
                        "src": "334:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticQueue_$1254",
                          "typeString": "contract OptimisticQueue"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "333:23:2"
                },
                "scope": 266,
                "src": "231:192:2",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "public"
              }
            ],
            "scope": 470,
            "src": "193:232:2"
          },
          {
            "abstract": false,
            "baseContracts": [],
            "contractDependencies": [
              243
            ],
            "contractKind": "contract",
            "documentation": null,
            "fullyImplemented": true,
            "id": 469,
            "linearizedBaseContracts": [
              469
            ],
            "name": "EagletFactory",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "constant": true,
                "id": 273,
                "mutability": "constant",
                "name": "ANY_ADDR",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 469,
                "src": "456:48:2",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 267,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "456:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": {
                  "argumentTypes": null,
                  "arguments": [
                    {
                      "argumentTypes": null,
                      "id": 271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "-",
                      "prefix": true,
                      "src": "501:2:2",
                      "subExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "502:1:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_minus_1_by_1",
                        "typeString": "int_const -1"
                      }
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_rational_minus_1_by_1",
                        "typeString": "int_const -1"
                      }
                    ],
                    "id": 269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "493:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_address_$",
                      "typeString": "type(address)"
                    },
                    "typeName": {
                      "id": 268,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "493:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      }
                    }
                  },
                  "id": 272,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "493:11:2",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "functionSelector": "6ca4110e",
                "id": 275,
                "mutability": "mutable",
                "name": "queueFactory",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 469,
                "src": "511:42:2",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_OptimisticQueueFactory_$266",
                  "typeString": "contract OptimisticQueueFactory"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 274,
                  "name": "OptimisticQueueFactory",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 266,
                  "src": "511:22:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_OptimisticQueueFactory_$266",
                    "typeString": "contract OptimisticQueueFactory"
                  }
                },
                "value": null,
                "visibility": "public"
              },
              {
                "constant": false,
                "functionSelector": "7b103999",
                "id": 277,
                "mutability": "mutable",
                "name": "registry",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 469,
                "src": "559:31:2",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ERC3000Registry_$111",
                  "typeString": "contract ERC3000Registry"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 276,
                  "name": "ERC3000Registry",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 111,
                  "src": "559:15:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC3000Registry_$111",
                    "typeString": "contract ERC3000Registry"
                  }
                },
                "value": null,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 292,
                  "nodeType": "Block",
                  "src": "681:75:2",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 284,
                          "name": "queueFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 275,
                          "src": "691:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OptimisticQueueFactory_$266",
                            "typeString": "contract OptimisticQueueFactory"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "id": 285,
                          "name": "_queueFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 281,
                          "src": "706:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OptimisticQueueFactory_$266",
                            "typeString": "contract OptimisticQueueFactory"
                          }
                        },
                        "src": "691:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticQueueFactory_$266",
                          "typeString": "contract OptimisticQueueFactory"
                        }
                      },
                      "id": 287,
                      "nodeType": "ExpressionStatement",
                      "src": "691:28:2"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 288,
                          "name": "registry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 277,
                          "src": "729:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC3000Registry_$111",
                            "typeString": "contract ERC3000Registry"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "id": 289,
                          "name": "_registry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 279,
                          "src": "740:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC3000Registry_$111",
                            "typeString": "contract ERC3000Registry"
                          }
                        },
                        "src": "729:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC3000Registry_$111",
                          "typeString": "contract ERC3000Registry"
                        }
                      },
                      "id": 291,
                      "nodeType": "ExpressionStatement",
                      "src": "729:20:2"
                    }
                  ]
                },
                "documentation": null,
                "id": 293,
                "implemented": true,
                "kind": "constructor",
                "modifiers": [],
                "name": "",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 282,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 279,
                      "mutability": "mutable",
                      "name": "_registry",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 293,
                      "src": "609:25:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC3000Registry_$111",
                        "typeString": "contract ERC3000Registry"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 278,
                        "name": "ERC3000Registry",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 111,
                        "src": "609:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC3000Registry_$111",
                          "typeString": "contract ERC3000Registry"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 281,
                      "mutability": "mutable",
                      "name": "_queueFactory",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 293,
                      "src": "636:36:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimisticQueueFactory_$266",
                        "typeString": "contract OptimisticQueueFactory"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 280,
                        "name": "OptimisticQueueFactory",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 266,
                        "src": "636:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticQueueFactory_$266",
                          "typeString": "contract OptimisticQueueFactory"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "608:65:2"
                },
                "returnParameters": {
                  "id": 283,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "681:0:2"
                },
                "scope": 469,
                "src": "597:159:2",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 467,
                  "nodeType": "Block",
                  "src": "865:1141:2",
                  "statements": [
                    {
                      "assignments": [
                        305
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 305,
                          "mutability": "mutable",
                          "name": "noCollateral",
                          "nodeType": "VariableDeclaration",
                          "overrides": null,
                          "scope": 467,
                          "src": "875:42:2",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Collateral_$2293_memory_ptr",
                            "typeString": "struct ERC3000Data.Collateral"
                          },
                          "typeName": {
                            "contractScope": null,
                            "id": 304,
                            "name": "ERC3000Data.Collateral",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 2293,
                            "src": "875:22:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Collateral_$2293_storage_ptr",
                              "typeString": "struct ERC3000Data.Collateral"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 306,
                      "initialValue": null,
                      "nodeType": "VariableDeclarationStatement",
                      "src": "875:42:2"
                    },
                    {
                      "assignments": [
                        310
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 310,
                          "mutability": "mutable",
                          "name": "config",
                          "nodeType": "VariableDeclaration",
                          "overrides": null,
                          "scope": 467,
                          "src": "927:32:2",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Config_$2288_memory_ptr",
                            "typeString": "struct ERC3000Data.Config"
                          },
                          "typeName": {
                            "contractScope": null,
                            "id": 309,
                            "name": "ERC3000Data.Config",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 2288,
                            "src": "927:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Config_$2288_storage_ptr",
                              "typeString": "struct ERC3000Data.Config"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 323,
                      "initialValue": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 313,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "994:1:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "argumentTypes": null,
                            "id": 314,
                            "name": "noCollateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "1009:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Collateral_$2293_memory_ptr",
                              "typeString": "struct ERC3000Data.Collateral memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 315,
                            "name": "noCollateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "1035:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Collateral_$2293_memory_ptr",
                              "typeString": "struct ERC3000Data.Collateral memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 316,
                            "name": "noCollateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "1061:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Collateral_$2293_memory_ptr",
                              "typeString": "struct ERC3000Data.Collateral memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 319,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1095:1:2",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1087:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 317,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1087:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 320,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1087:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "",
                            "id": 321,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1111:2:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_struct$_Collateral_$2293_memory_ptr",
                              "typeString": "struct ERC3000Data.Collateral memory"
                            },
                            {
                              "typeIdentifier": "t_struct$_Collateral_$2293_memory_ptr",
                              "typeString": "struct ERC3000Data.Collateral memory"
                            },
                            {
                              "typeIdentifier": "t_struct$_Collateral_$2293_memory_ptr",
                              "typeString": "struct ERC3000Data.Collateral memory"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 311,
                            "name": "ERC3000Data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2379,
                            "src": "962:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC3000Data_$2379_$",
                              "typeString": "type(library ERC3000Data)"
                            }
                          },
                          "id": 312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "Config",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2288,
                          "src": "962:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Config_$2288_storage_ptr_$",
                            "typeString": "type(struct ERC3000Data.Config storage pointer)"
                          }
                        },
                        "id": 322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "962:161:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$2288_memory_ptr",
                          "typeString": "struct ERC3000Data.Config memory"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "927:196:2"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 324,
                          "name": "queue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 300,
                          "src": "1134:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OptimisticQueue_$1254",
                            "typeString": "contract OptimisticQueue"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 329,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1172:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_EagletFactory_$469",
                                    "typeString": "contract EagletFactory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_EagletFactory_$469",
                                    "typeString": "contract EagletFactory"
                                  }
                                ],
                                "id": 328,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1164:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 327,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1164:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 330,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1164:13:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 331,
                              "name": "config",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 310,
                              "src": "1179:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Config_$2288_memory_ptr",
                                "typeString": "struct ERC3000Data.Config memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_struct$_Config_$2288_memory_ptr",
                                "typeString": "struct ERC3000Data.Config memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 325,
                              "name": "queueFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 275,
                              "src": "1142:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OptimisticQueueFactory_$266",
                                "typeString": "contract OptimisticQueueFactory"
                              }
                            },
                            "id": 326,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "newQueue",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 265,
                            "src": "1142:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_struct$_Config_$2288_memory_ptr_$returns$_t_contract$_OptimisticQueue_$1254_$",
                              "typeString": "function (address,struct ERC3000Data.Config memory) external returns (contract OptimisticQueue)"
                            }
                          },
                          "id": 332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1142:44:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OptimisticQueue_$1254",
                            "typeString": "contract OptimisticQueue"
                          }
                        },
                        "src": "1134:52:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticQueue_$1254",
                          "typeString": "contract OptimisticQueue"
                        }
                      },
                      "id": 334,
                      "nodeType": "ExpressionStatement",
                      "src": "1134:52:2"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 335,
                          "name": "eaglet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 298,
                          "src": "1196:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Eaglet_$243",
                            "typeString": "contract Eaglet"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 338,
                              "name": "queue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 300,
                              "src": "1216:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OptimisticQueue_$1254",
                                "typeString": "contract OptimisticQueue"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_OptimisticQueue_$1254",
                                "typeString": "contract OptimisticQueue"
                              }
                            ],
                            "id": 337,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1205:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IERC3000_$2523_$returns$_t_contract$_Eaglet_$243_$",
                              "typeString": "function (contract IERC3000) returns (contract Eaglet)"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 336,
                              "name": "Eaglet",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 243,
                              "src": "1209:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Eaglet_$243",
                                "typeString": "contract Eaglet"
                              }
                            }
                          },
                          "id": 339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1205:17:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Eaglet_$243",
                            "typeString": "contract Eaglet"
                          }
                        },
                        "src": "1196:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Eaglet_$243",
                          "typeString": "contract Eaglet"
                        }
                      },
                      "id": 341,
                      "nodeType": "ExpressionStatement",
                      "src": "1196:26:2"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 345,
                            "name": "eaglet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 298,
                            "src": "1251:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Eaglet_$243",
                              "typeString": "contract Eaglet"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 346,
                            "name": "queue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 300,
                            "src": "1259:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticQueue_$1254",
                              "typeString": "contract OptimisticQueue"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 347,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 295,
                            "src": "1266:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "",
                            "id": 348,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1273:2:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Eaglet_$243",
                              "typeString": "contract Eaglet"
                            },
                            {
                              "typeIdentifier": "t_contract$_OptimisticQueue_$1254",
                              "typeString": "contract OptimisticQueue"
                            },
                            {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 342,
                            "name": "registry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 277,
                            "src": "1233:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC3000Registry_$111",
                              "typeString": "contract ERC3000Registry"
                            }
                          },
                          "id": 344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "register",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 73,
                          "src": "1233:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC3000Executor_$2412_$_t_contract$_ERC3000_$2245_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                            "typeString": "function (contract ERC3000Executor,contract ERC3000,string memory,bytes memory) external"
                          }
                        },
                        "id": 349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1233:43:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 350,
                      "nodeType": "ExpressionStatement",
                      "src": "1233:43:2"
                    },
                    {
                      "assignments": [
                        355
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 355,
                          "mutability": "mutable",
                          "name": "items",
                          "nodeType": "VariableDeclaration",
                          "overrides": null,
                          "scope": 467,
                          "src": "1287:35:2",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_BulkItem_$1473_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct MiniACLData.BulkItem[]"
                          },
                          "typeName": {
                            "baseType": {
                              "contractScope": null,
                              "id": 353,
                              "name": "MiniACLData.BulkItem",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 1473,
                              "src": "1287:20:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BulkItem_$1473_storage_ptr",
                                "typeString": "struct MiniACLData.BulkItem"
                              }
                            },
                            "id": 354,
                            "length": null,
                            "nodeType": "ArrayTypeName",
                            "src": "1287:22:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_BulkItem_$1473_storage_$dyn_storage_ptr",
                              "typeString": "struct MiniACLData.BulkItem[]"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 361,
                      "initialValue": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "36",
                            "id": 359,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1352:1:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_6_by_1",
                              "typeString": "int_const 6"
                            },
                            "value": "6"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_6_by_1",
                              "typeString": "int_const 6"
                            }
                          ],
                          "id": 358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "1325:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_BulkItem_$1473_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (struct MiniACLData.BulkItem memory[] memory)"
                          },
                          "typeName": {
                            "baseType": {
                              "contractScope": null,
                              "id": 356,
                              "name": "MiniACLData.BulkItem",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 1473,
                              "src": "1329:20:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BulkItem_$1473_storage_ptr",
                                "typeString": "struct MiniACLData.BulkItem"
                              }
                            },
                            "id": 357,
                            "length": null,
                            "nodeType": "ArrayTypeName",
                            "src": "1329:22:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_BulkItem_$1473_storage_$dyn_storage_ptr",
                              "typeString": "struct MiniACLData.BulkItem[]"
                            }
                          }
                        },
                        "id": 360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1325:29:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_BulkItem_$1473_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct MiniACLData.BulkItem memory[] memory"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "1287:67:2"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 362,
                            "name": "items",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 355,
                            "src": "1364:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_BulkItem_$1473_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct MiniACLData.BulkItem memory[] memory"
                            }
                          },
                          "id": 364,
                          "indexExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 363,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1370:1:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "1364:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BulkItem_$1473_memory_ptr",
                            "typeString": "struct MiniACLData.BulkItem memory"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 367,
                                  "name": "MiniACLData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1474,
                                  "src": "1396:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_MiniACLData_$1474_$",
                                    "typeString": "type(library MiniACLData)"
                                  }
                                },
                                "id": 368,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "BulkOp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1466,
                                "src": "1396:18:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_BulkOp_$1466_$",
                                  "typeString": "type(enum MiniACLData.BulkOp)"
                                }
                              },
                              "id": 369,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Grant",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1396:24:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_BulkOp_$1466",
                                "typeString": "enum MiniACLData.BulkOp"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 370,
                                  "name": "queue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 300,
                                  "src": "1422:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_OptimisticQueue_$1254",
                                    "typeString": "contract OptimisticQueue"
                                  }
                                },
                                "id": 371,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "schedule",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 635,
                                "src": "1422:14:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_struct$_Container_$2254_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (struct ERC3000Data.Container memory) external returns (bytes32)"
                                }
                              },
                              "id": 372,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1422:23:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 373,
                              "name": "ANY_ADDR",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 273,
                              "src": "1447:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_BulkOp_$1466",
                                "typeString": "enum MiniACLData.BulkOp"
                              },
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 365,
                              "name": "MiniACLData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1474,
                              "src": "1375:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_MiniACLData_$1474_$",
                                "typeString": "type(library MiniACLData)"
                              }
                            },
                            "id": 366,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "BulkItem",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1473,
                            "src": "1375:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_BulkItem_$1473_storage_ptr_$",
                              "typeString": "type(struct MiniACLData.BulkItem storage pointer)"
                            }
                          },
                          "id": 374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1375:81:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BulkItem_$1473_memory_ptr",
                            "typeString": "struct MiniACLData.BulkItem memory"
                          }
                        },
                        "src": "1364:92:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BulkItem_$1473_memory_ptr",
                          "typeString": "struct MiniACLData.BulkItem memory"
                        }
                      },
                      "id": 376,
                      "nodeType": "ExpressionStatement",
                      "src": "1364:92:2"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 377,
                            "name": "items",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 355,
                            "src": "1466:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_BulkItem_$1473_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct MiniACLData.BulkItem memory[] memory"
                            }
                          },
                          "id": 379,
                          "indexExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 378,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1472:1:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "1466:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BulkItem_$1473_memory_ptr",
                            "typeString": "struct MiniACLData.BulkItem memory"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 382,
                                  "name": "MiniACLData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1474,
                                  "src": "1498:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_MiniACLData_$1474_$",
                                    "typeString": "type(library MiniACLData)"
                                  }
                                },
                                "id": 383,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "BulkOp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1466,
                                "src": "1498:18:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_BulkOp_$1466_$",
                                  "typeString": "type(enum MiniACLData.BulkOp)"
                                }
                              },
                              "id": 384,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Grant",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1498:24:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_BulkOp_$1466",
                                "typeString": "enum MiniACLData.BulkOp"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 385,
                                  "name": "queue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 300,
                                  "src": "1524:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_OptimisticQueue_$1254",
                                    "typeString": "contract OptimisticQueue"
                                  }
                                },
                                "id": 386,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "execute",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 699,
                                "src": "1524:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_struct$_Container_$2254_memory_ptr_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                                  "typeString": "function (struct ERC3000Data.Container memory) external returns (bytes memory[] memory)"
                                }
                              },
                              "id": 387,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1524:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 388,
                              "name": "ANY_ADDR",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 273,
                              "src": "1548:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_BulkOp_$1466",
                                "typeString": "enum MiniACLData.BulkOp"
                              },
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 380,
                              "name": "MiniACLData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1474,
                              "src": "1477:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_MiniACLData_$1474_$",
                                "typeString": "type(library MiniACLData)"
                              }
                            },
                            "id": 381,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "BulkItem",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1473,
                            "src": "1477:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_BulkItem_$1473_storage_ptr_$",
                              "typeString": "type(struct MiniACLData.BulkItem storage pointer)"
                            }
                          },
                          "id": 389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1477:80:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BulkItem_$1473_memory_ptr",
                            "typeString": "struct MiniACLData.BulkItem memory"
                          }
                        },
                        "src": "1466:91:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BulkItem_$1473_memory_ptr",
                          "typeString": "struct MiniACLData.BulkItem memory"
                        }
                      },
                      "id": 391,
                      "nodeType": "ExpressionStatement",
                      "src": "1466:91:2"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 392,
                            "name": "items",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 355,
                            "src": "1567:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_BulkItem_$1473_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct MiniACLData.BulkItem memory[] memory"
                            }
                          },
                          "id": 394,
                          "indexExpression": {
                            "argumentTypes": null,
                            "hexValue": "32",
                            "id": 393,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1573:1:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "1567:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BulkItem_$1473_memory_ptr",
                            "typeString": "struct MiniACLData.BulkItem memory"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 397,
                                  "name": "MiniACLData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1474,
                                  "src": "1599:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_MiniACLData_$1474_$",
                                    "typeString": "type(library MiniACLData)"
                                  }
                                },
                                "id": 398,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "BulkOp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1466,
                                "src": "1599:18:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_BulkOp_$1466_$",
                                  "typeString": "type(enum MiniACLData.BulkOp)"
                                }
                              },
                              "id": 399,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Grant",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1599:24:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_BulkOp_$1466",
                                "typeString": "enum MiniACLData.BulkOp"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 400,
                                  "name": "queue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 300,
                                  "src": "1625:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_OptimisticQueue_$1254",
                                    "typeString": "contract OptimisticQueue"
                                  }
                                },
                                "id": 401,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "challenge",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 860,
                                "src": "1625:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_struct$_Container_$2254_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                                  "typeString": "function (struct ERC3000Data.Container memory,bytes memory) external returns (uint256)"
                                }
                              },
                              "id": 402,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1625:24:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 403,
                              "name": "ANY_ADDR",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 273,
                              "src": "1651:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_BulkOp_$1466",
                                "typeString": "enum MiniACLData.BulkOp"
                              },
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 395,
                              "name": "MiniACLData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1474,
                              "src": "1578:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_MiniACLData_$1474_$",
                                "typeString": "type(library MiniACLData)"
                              }
                            },
                            "id": 396,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "BulkItem",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1473,
                            "src": "1578:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_BulkItem_$1473_storage_ptr_$",
                              "typeString": "type(struct MiniACLData.BulkItem storage pointer)"
                            }
                          },
                          "id": 404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1578:82:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BulkItem_$1473_memory_ptr",
                            "typeString": "struct MiniACLData.BulkItem memory"
                          }
                        },
                        "src": "1567:93:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BulkItem_$1473_memory_ptr",
                          "typeString": "struct MiniACLData.BulkItem memory"
                        }
                      },
                      "id": 406,
                      "nodeType": "ExpressionStatement",
                      "src": "1567:93:2"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 407,
                            "name": "items",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 355,
                            "src": "1670:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_BulkItem_$1473_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct MiniACLData.BulkItem memory[] memory"
                            }
                          },
                          "id": 409,
                          "indexExpression": {
                            "argumentTypes": null,
                            "hexValue": "33",
                            "id": 408,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1676:1:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "1670:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BulkItem_$1473_memory_ptr",
                            "typeString": "struct MiniACLData.BulkItem memory"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 412,
                                  "name": "MiniACLData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1474,
                                  "src": "1702:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_MiniACLData_$1474_$",
                                    "typeString": "type(library MiniACLData)"
                                  }
                                },
                                "id": 413,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "BulkOp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1466,
                                "src": "1702:18:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_BulkOp_$1466_$",
                                  "typeString": "type(enum MiniACLData.BulkOp)"
                                }
                              },
                              "id": 414,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Grant",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1702:24:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_BulkOp_$1466",
                                "typeString": "enum MiniACLData.BulkOp"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 415,
                                  "name": "queue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 300,
                                  "src": "1728:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_OptimisticQueue_$1254",
                                    "typeString": "contract OptimisticQueue"
                                  }
                                },
                                "id": 416,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "configure",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 994,
                                "src": "1728:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_struct$_Config_$2288_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (struct ERC3000Data.Config memory) external returns (bytes32)"
                                }
                              },
                              "id": 417,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1728:24:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 420,
                                  "name": "eaglet",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 298,
                                  "src": "1762:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Eaglet_$243",
                                    "typeString": "contract Eaglet"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Eaglet_$243",
                                    "typeString": "contract Eaglet"
                                  }
                                ],
                                "id": 419,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1754:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 418,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1754:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 421,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1754:15:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_BulkOp_$1466",
                                "typeString": "enum MiniACLData.BulkOp"
                              },
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 410,
                              "name": "MiniACLData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1474,
                              "src": "1681:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_MiniACLData_$1474_$",
                                "typeString": "type(library MiniACLData)"
                              }
                            },
                            "id": 411,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "BulkItem",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1473,
                            "src": "1681:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_BulkItem_$1473_storage_ptr_$",
                              "typeString": "type(struct MiniACLData.BulkItem storage pointer)"
                            }
                          },
                          "id": 422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1681:89:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BulkItem_$1473_memory_ptr",
                            "typeString": "struct MiniACLData.BulkItem memory"
                          }
                        },
                        "src": "1670:100:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BulkItem_$1473_memory_ptr",
                          "typeString": "struct MiniACLData.BulkItem memory"
                        }
                      },
                      "id": 424,
                      "nodeType": "ExpressionStatement",
                      "src": "1670:100:2"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 425,
                            "name": "items",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 355,
                            "src": "1780:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_BulkItem_$1473_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct MiniACLData.BulkItem memory[] memory"
                            }
                          },
                          "id": 427,
                          "indexExpression": {
                            "argumentTypes": null,
                            "hexValue": "34",
                            "id": 426,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1786:1:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "1780:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BulkItem_$1473_memory_ptr",
                            "typeString": "struct MiniACLData.BulkItem memory"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 430,
                                  "name": "MiniACLData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1474,
                                  "src": "1812:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_MiniACLData_$1474_$",
                                    "typeString": "type(library MiniACLData)"
                                  }
                                },
                                "id": 431,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "BulkOp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1466,
                                "src": "1812:18:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_BulkOp_$1466_$",
                                  "typeString": "type(enum MiniACLData.BulkOp)"
                                }
                              },
                              "id": 432,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Revoke",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1812:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_BulkOp_$1466",
                                "typeString": "enum MiniACLData.BulkOp"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 433,
                                  "name": "queue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 300,
                                  "src": "1839:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_OptimisticQueue_$1254",
                                    "typeString": "contract OptimisticQueue"
                                  }
                                },
                                "id": 434,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ROOT_ROLE",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1491,
                                "src": "1839:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_bytes4_$",
                                  "typeString": "function () view external returns (bytes4)"
                                }
                              },
                              "id": 435,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1839:17:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 438,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1866:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_EagletFactory_$469",
                                    "typeString": "contract EagletFactory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_EagletFactory_$469",
                                    "typeString": "contract EagletFactory"
                                  }
                                ],
                                "id": 437,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1858:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 436,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1858:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 439,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1858:13:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_BulkOp_$1466",
                                "typeString": "enum MiniACLData.BulkOp"
                              },
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 428,
                              "name": "MiniACLData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1474,
                              "src": "1791:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_MiniACLData_$1474_$",
                                "typeString": "type(library MiniACLData)"
                              }
                            },
                            "id": 429,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "BulkItem",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1473,
                            "src": "1791:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_BulkItem_$1473_storage_ptr_$",
                              "typeString": "type(struct MiniACLData.BulkItem storage pointer)"
                            }
                          },
                          "id": 440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1791:81:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BulkItem_$1473_memory_ptr",
                            "typeString": "struct MiniACLData.BulkItem memory"
                          }
                        },
                        "src": "1780:92:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BulkItem_$1473_memory_ptr",
                          "typeString": "struct MiniACLData.BulkItem memory"
                        }
                      },
                      "id": 442,
                      "nodeType": "ExpressionStatement",
                      "src": "1780:92:2"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 443,
                            "name": "items",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 355,
                            "src": "1882:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_BulkItem_$1473_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct MiniACLData.BulkItem memory[] memory"
                            }
                          },
                          "id": 445,
                          "indexExpression": {
                            "argumentTypes": null,
                            "hexValue": "35",
                            "id": 444,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1888:1:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            },
                            "value": "5"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "1882:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BulkItem_$1473_memory_ptr",
                            "typeString": "struct MiniACLData.BulkItem memory"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 448,
                                  "name": "MiniACLData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1474,
                                  "src": "1914:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_MiniACLData_$1474_$",
                                    "typeString": "type(library MiniACLData)"
                                  }
                                },
                                "id": 449,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "BulkOp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1466,
                                "src": "1914:18:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_BulkOp_$1466_$",
                                  "typeString": "type(enum MiniACLData.BulkOp)"
                                }
                              },
                              "id": 450,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Freeze",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1914:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_BulkOp_$1466",
                                "typeString": "enum MiniACLData.BulkOp"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 451,
                                  "name": "queue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 300,
                                  "src": "1941:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_OptimisticQueue_$1254",
                                    "typeString": "contract OptimisticQueue"
                                  }
                                },
                                "id": 452,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ROOT_ROLE",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1491,
                                "src": "1941:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_bytes4_$",
                                  "typeString": "function () view external returns (bytes4)"
                                }
                              },
                              "id": 453,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1941:17:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 456,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1968:1:2",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 455,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1960:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 454,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1960:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 457,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1960:10:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_BulkOp_$1466",
                                "typeString": "enum MiniACLData.BulkOp"
                              },
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 446,
                              "name": "MiniACLData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1474,
                              "src": "1893:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_MiniACLData_$1474_$",
                                "typeString": "type(library MiniACLData)"
                              }
                            },
                            "id": 447,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "BulkItem",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1473,
                            "src": "1893:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_BulkItem_$1473_storage_ptr_$",
                              "typeString": "type(struct MiniACLData.BulkItem storage pointer)"
                            }
                          },
                          "id": 458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1893:78:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BulkItem_$1473_memory_ptr",
                            "typeString": "struct MiniACLData.BulkItem memory"
                          }
                        },
                        "src": "1882:89:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BulkItem_$1473_memory_ptr",
                          "typeString": "struct MiniACLData.BulkItem memory"
                        }
                      },
                      "id": 460,
                      "nodeType": "ExpressionStatement",
                      "src": "1882:89:2"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 464,
                            "name": "items",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 355,
                            "src": "1993:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_BulkItem_$1473_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct MiniACLData.BulkItem memory[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_struct$_BulkItem_$1473_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct MiniACLData.BulkItem memory[] memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 461,
                            "name": "queue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 300,
                            "src": "1982:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticQueue_$1254",
                              "typeString": "contract OptimisticQueue"
                            }
                          },
                          "id": 463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "bulk",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1681,
                          "src": "1982:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_struct$_BulkItem_$1473_memory_ptr_$dyn_memory_ptr_$returns$__$",
                            "typeString": "function (struct MiniACLData.BulkItem memory[] memory) external"
                          }
                        },
                        "id": 465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1982:17:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 466,
                      "nodeType": "ExpressionStatement",
                      "src": "1982:17:2"
                    }
                  ]
                },
                "documentation": null,
                "functionSelector": "4295f16c",
                "id": 468,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "newDummyEaglet",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 296,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 295,
                      "mutability": "mutable",
                      "name": "_name",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 468,
                      "src": "786:21:2",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 294,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "786:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "785:23:2"
                },
                "returnParameters": {
                  "id": 301,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 298,
                      "mutability": "mutable",
                      "name": "eaglet",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 468,
                      "src": "827:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Eaglet_$243",
                        "typeString": "contract Eaglet"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 297,
                        "name": "Eaglet",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 243,
                        "src": "827:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Eaglet_$243",
                          "typeString": "contract Eaglet"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 300,
                      "mutability": "mutable",
                      "name": "queue",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 468,
                      "src": "842:21:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimisticQueue_$1254",
                        "typeString": "contract OptimisticQueue"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 299,
                        "name": "OptimisticQueue",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1254,
                        "src": "842:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticQueue_$1254",
                          "typeString": "contract OptimisticQueue"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "826:38:2"
                },
                "scope": 469,
                "src": "762:1244:2",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              }
            ],
            "scope": 470,
            "src": "427:1581:2"
          }
        ],
        "src": "47:1962:2"
      },
      "id": 2
    },
    "contracts/OptimisticQueue.sol": {
      "ast": {
        "absolutePath": "contracts/OptimisticQueue.sol",
        "exportedSymbols": {
          "OptimisticQueue": [
            1254
          ]
        },
        "id": 1255,
        "license": "GPL-3.0",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 471,
            "literals": [
              "solidity",
              "0.6",
              ".8"
            ],
            "nodeType": "PragmaDirective",
            "src": "47:22:3"
          },
          {
            "id": 472,
            "literals": [
              "experimental",
              "ABIEncoderV2"
            ],
            "nodeType": "PragmaDirective",
            "src": "70:33:3"
          },
          {
            "absolutePath": "erc3k/contracts/ERC3000.sol",
            "file": "erc3k/contracts/ERC3000.sol",
            "id": 473,
            "nodeType": "ImportDirective",
            "scope": 1255,
            "sourceUnit": 2246,
            "src": "105:37:3",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "absolutePath": "contracts/lib/IArbitrable.sol",
            "file": "./lib/IArbitrable.sol",
            "id": 474,
            "nodeType": "ImportDirective",
            "scope": 1255,
            "sourceUnit": 1412,
            "src": "144:31:3",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "absolutePath": "contracts/lib/DepositLib.sol",
            "file": "./lib/DepositLib.sol",
            "id": 475,
            "nodeType": "ImportDirective",
            "scope": 1255,
            "sourceUnit": 1359,
            "src": "176:30:3",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "absolutePath": "contracts/lib/MiniACL.sol",
            "file": "./lib/MiniACL.sol",
            "id": 476,
            "nodeType": "ImportDirective",
            "scope": 1255,
            "sourceUnit": 1794,
            "src": "207:27:3",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "absolutePath": "contracts/lib/OptimisticQueueStateLib.sol",
            "file": "./lib/OptimisticQueueStateLib.sol",
            "id": 477,
            "nodeType": "ImportDirective",
            "scope": 1255,
            "sourceUnit": 1858,
            "src": "235:43:3",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "absolutePath": "contracts/lib/SafeERC20.sol",
            "file": "./lib/SafeERC20.sol",
            "id": 478,
            "nodeType": "ImportDirective",
            "scope": 1255,
            "sourceUnit": 2193,
            "src": "279:29:3",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "abstract": false,
            "baseContracts": [
              {
                "arguments": null,
                "baseName": {
                  "contractScope": null,
                  "id": 479,
                  "name": "ERC3000",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 2245,
                  "src": "338:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC3000_$2245",
                    "typeString": "contract ERC3000"
                  }
                },
                "id": 480,
                "nodeType": "InheritanceSpecifier",
                "src": "338:7:3"
              },
              {
                "arguments": null,
                "baseName": {
                  "contractScope": null,
                  "id": 481,
                  "name": "IArbitrable",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1411,
                  "src": "347:11:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IArbitrable_$1411",
                    "typeString": "contract IArbitrable"
                  }
                },
                "id": 482,
                "nodeType": "InheritanceSpecifier",
                "src": "347:11:3"
              },
              {
                "arguments": null,
                "baseName": {
                  "contractScope": null,
                  "id": 483,
                  "name": "MiniACL",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1793,
                  "src": "360:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MiniACL_$1793",
                    "typeString": "contract MiniACL"
                  }
                },
                "id": 484,
                "nodeType": "InheritanceSpecifier",
                "src": "360:7:3"
              }
            ],
            "contractDependencies": [
              1411,
              1793,
              2245,
              2523,
              2569
            ],
            "contractKind": "contract",
            "documentation": null,
            "fullyImplemented": true,
            "id": 1254,
            "linearizedBaseContracts": [
              1254,
              1793,
              1411,
              2245,
              2569,
              2523
            ],
            "name": "OptimisticQueue",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "id": 486,
                "libraryName": {
                  "contractScope": null,
                  "id": 485,
                  "name": "ERC3000Data",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 2379,
                  "src": "380:11:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC3000Data_$2379",
                    "typeString": "library ERC3000Data"
                  }
                },
                "nodeType": "UsingForDirective",
                "src": "374:24:3",
                "typeName": null
              },
              {
                "id": 489,
                "libraryName": {
                  "contractScope": null,
                  "id": 487,
                  "name": "DepositLib",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1358,
                  "src": "409:10:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DepositLib_$1358",
                    "typeString": "library DepositLib"
                  }
                },
                "nodeType": "UsingForDirective",
                "src": "403:44:3",
                "typeName": {
                  "contractScope": null,
                  "id": 488,
                  "name": "ERC3000Data.Collateral",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 2293,
                  "src": "424:22:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Collateral_$2293_storage_ptr",
                    "typeString": "struct ERC3000Data.Collateral"
                  }
                }
              },
              {
                "id": 492,
                "libraryName": {
                  "contractScope": null,
                  "id": 490,
                  "name": "OptimisticQueueStateLib",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1857,
                  "src": "458:23:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_OptimisticQueueStateLib_$1857",
                    "typeString": "library OptimisticQueueStateLib"
                  }
                },
                "nodeType": "UsingForDirective",
                "src": "452:63:3",
                "typeName": {
                  "contractScope": null,
                  "id": 491,
                  "name": "OptimisticQueueStateLib.Item",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1806,
                  "src": "486:28:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Item_$1806_storage_ptr",
                    "typeString": "struct OptimisticQueueStateLib.Item"
                  }
                }
              },
              {
                "id": 495,
                "libraryName": {
                  "contractScope": null,
                  "id": 493,
                  "name": "SafeERC20",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 2192,
                  "src": "526:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SafeERC20_$2192",
                    "typeString": "library SafeERC20"
                  }
                },
                "nodeType": "UsingForDirective",
                "src": "520:26:3",
                "typeName": {
                  "contractScope": null,
                  "id": 494,
                  "name": "ERC20",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1927,
                  "src": "540:5:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$1927",
                    "typeString": "contract ERC20"
                  }
                }
              },
              {
                "constant": false,
                "functionSelector": "e1f1176d",
                "id": 497,
                "mutability": "mutable",
                "name": "configHash",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1254,
                "src": "575:25:3",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 496,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "575:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "public"
              },
              {
                "constant": false,
                "functionSelector": "affed0e0",
                "id": 499,
                "mutability": "mutable",
                "name": "nonce",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1254,
                "src": "606:20:3",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 498,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "606:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "public"
              },
              {
                "constant": false,
                "functionSelector": "7c10dea6",
                "id": 503,
                "mutability": "mutable",
                "name": "queue",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1254,
                "src": "632:62:3",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Item_$1806_storage_$",
                  "typeString": "mapping(bytes32 => struct OptimisticQueueStateLib.Item)"
                },
                "typeName": {
                  "id": 502,
                  "keyType": {
                    "id": 500,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "641:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "632:49:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Item_$1806_storage_$",
                    "typeString": "mapping(bytes32 => struct OptimisticQueueStateLib.Item)"
                  },
                  "valueType": {
                    "contractScope": null,
                    "id": 501,
                    "name": "OptimisticQueueStateLib.Item",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1806,
                    "src": "652:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Item_$1806_storage_ptr",
                      "typeString": "struct OptimisticQueueStateLib.Item"
                    }
                  }
                },
                "value": null,
                "visibility": "public"
              },
              {
                "constant": false,
                "functionSelector": "c8182af0",
                "id": 507,
                "mutability": "mutable",
                "name": "challengerCache",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1254,
                "src": "724:51:3",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                  "typeString": "mapping(bytes32 => address)"
                },
                "typeName": {
                  "id": 506,
                  "keyType": {
                    "id": 504,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "733:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "724:28:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                    "typeString": "mapping(bytes32 => address)"
                  },
                  "valueType": {
                    "id": 505,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "744:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                },
                "value": null,
                "visibility": "public"
              },
              {
                "constant": false,
                "functionSelector": "3b1c5fc6",
                "id": 513,
                "mutability": "mutable",
                "name": "disputeItemCache",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1254,
                "src": "781:77:3",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_contract$_IArbitrator_$1459_$_t_mapping$_t_uint256_$_t_bytes32_$_$",
                  "typeString": "mapping(contract IArbitrator => mapping(uint256 => bytes32))"
                },
                "typeName": {
                  "id": 512,
                  "keyType": {
                    "contractScope": null,
                    "id": 508,
                    "name": "IArbitrator",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1459,
                    "src": "790:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IArbitrator_$1459",
                      "typeString": "contract IArbitrator"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "781:53:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_contract$_IArbitrator_$1459_$_t_mapping$_t_uint256_$_t_bytes32_$_$",
                    "typeString": "mapping(contract IArbitrator => mapping(uint256 => bytes32))"
                  },
                  "valueType": {
                    "id": 511,
                    "keyType": {
                      "id": 509,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "814:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "805:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                      "typeString": "mapping(uint256 => bytes32)"
                    },
                    "valueType": {
                      "id": 510,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "825:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    }
                  }
                },
                "value": null,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 527,
                  "nodeType": "Block",
                  "src": "982:43:3",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 524,
                            "name": "_initialConfig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 517,
                            "src": "1003:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Config_$2288_memory_ptr",
                              "typeString": "struct ERC3000Data.Config memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Config_$2288_memory_ptr",
                              "typeString": "struct ERC3000Data.Config memory"
                            }
                          ],
                          "id": 523,
                          "name": "_setConfig",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1253,
                          "src": "992:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Config_$2288_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (struct ERC3000Data.Config memory) returns (bytes32)"
                          }
                        },
                        "id": 525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "992:26:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 526,
                      "nodeType": "ExpressionStatement",
                      "src": "992:26:3"
                    }
                  ]
                },
                "documentation": null,
                "id": 528,
                "implemented": true,
                "kind": "constructor",
                "modifiers": [
                  {
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 520,
                        "name": "_aclRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 515,
                        "src": "968:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 521,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 519,
                      "name": "MiniACL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1793,
                      "src": "960:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_MiniACL_$1793_$",
                        "typeString": "type(contract MiniACL)"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "960:17:3"
                  }
                ],
                "name": "",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 518,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 515,
                      "mutability": "mutable",
                      "name": "_aclRoot",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 528,
                      "src": "877:16:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 514,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "877:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 517,
                      "mutability": "mutable",
                      "name": "_initialConfig",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 528,
                      "src": "895:40:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Config_$2288_memory_ptr",
                        "typeString": "struct ERC3000Data.Config"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 516,
                        "name": "ERC3000Data.Config",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2288,
                        "src": "895:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$2288_storage_ptr",
                          "typeString": "struct ERC3000Data.Config"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "876:60:3"
                },
                "returnParameters": {
                  "id": 522,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "982:0:3"
                },
                "scope": 1254,
                "src": "865:160:3",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "public"
              },
              {
                "baseFunctions": [
                  2424
                ],
                "body": {
                  "id": 634,
                  "nodeType": "Block",
                  "src": "1203:962:3",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 547,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 542,
                                  "name": "_container",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 530,
                                  "src": "1221:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Container_$2254_memory_ptr",
                                    "typeString": "struct ERC3000Data.Container memory"
                                  }
                                },
                                "id": 543,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "payload",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2251,
                                "src": "1221:18:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Payload_$2268_memory_ptr",
                                  "typeString": "struct ERC3000Data.Payload memory"
                                }
                              },
                              "id": 544,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "nonce",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2256,
                              "src": "1221:24:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 546,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "1249:7:3",
                              "subExpression": {
                                "argumentTypes": null,
                                "id": 545,
                                "name": "nonce",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 499,
                                "src": "1251:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1221:35:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "71756575653a20626164206e6f6e6365",
                            "id": 548,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1258:18:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_3cbf1df4ccfdfc68608a789669686939c07a61dfdbda53bda4c0d4e6600dfa3b",
                              "typeString": "literal_string \"queue: bad nonce\""
                            },
                            "value": "queue: bad nonce"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_3cbf1df4ccfdfc68608a789669686939c07a61dfdbda53bda4c0d4e6600dfa3b",
                              "typeString": "literal_string \"queue: bad nonce\""
                            }
                          ],
                          "id": 541,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "1213:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1213:64:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 550,
                      "nodeType": "ExpressionStatement",
                      "src": "1213:64:3"
                    },
                    {
                      "assignments": [
                        552
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 552,
                          "mutability": "mutable",
                          "name": "_configHash",
                          "nodeType": "VariableDeclaration",
                          "overrides": null,
                          "scope": 634,
                          "src": "1324:19:3",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 551,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "1324:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 557,
                      "initialValue": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 553,
                              "name": "_container",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 530,
                              "src": "1346:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Container_$2254_memory_ptr",
                                "typeString": "struct ERC3000Data.Container memory"
                              }
                            },
                            "id": 554,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "config",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2253,
                            "src": "1346:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Config_$2288_memory_ptr",
                              "typeString": "struct ERC3000Data.Config memory"
                            }
                          },
                          "id": 555,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hash",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2378,
                          "src": "1346:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_Config_$2288_memory_ptr_$returns$_t_bytes32_$bound_to$_t_struct$_Config_$2288_memory_ptr_$",
                            "typeString": "function (struct ERC3000Data.Config memory) pure returns (bytes32)"
                          }
                        },
                        "id": 556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1346:24:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "1324:46:3"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "id": 561,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 559,
                              "name": "_configHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 552,
                              "src": "1388:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 560,
                              "name": "configHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 497,
                              "src": "1403:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "src": "1388:25:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "71756575653a2062616420636f6e666967",
                            "id": 562,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1415:19:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_16491aa97e27d855f86e079d9cbef97ec33f65726f670b8bf2809ddaadbd8060",
                              "typeString": "literal_string \"queue: bad config\""
                            },
                            "value": "queue: bad config"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_16491aa97e27d855f86e079d9cbef97ec33f65726f670b8bf2809ddaadbd8060",
                              "typeString": "literal_string \"queue: bad config\""
                            }
                          ],
                          "id": 558,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "1380:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1380:55:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 564,
                      "nodeType": "ExpressionStatement",
                      "src": "1380:55:3"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 575,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 566,
                                  "name": "_container",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 530,
                                  "src": "1453:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Container_$2254_memory_ptr",
                                    "typeString": "struct ERC3000Data.Container memory"
                                  }
                                },
                                "id": 567,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "payload",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2251,
                                "src": "1453:18:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Payload_$2268_memory_ptr",
                                  "typeString": "struct ERC3000Data.Payload memory"
                                }
                              },
                              "id": 568,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "executionTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2258,
                              "src": "1453:32:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 574,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 569,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "1489:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 570,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1489:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 571,
                                    "name": "_container",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 530,
                                    "src": "1507:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Container_$2254_memory_ptr",
                                      "typeString": "struct ERC3000Data.Container memory"
                                    }
                                  },
                                  "id": 572,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "config",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2253,
                                  "src": "1507:17:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Config_$2288_memory_ptr",
                                    "typeString": "struct ERC3000Data.Config memory"
                                  }
                                },
                                "id": 573,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "executionDelay",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2277,
                                "src": "1507:32:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1489:50:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1453:86:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "71756575653a206261642064656c6179",
                            "id": 576,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1541:18:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_40a9c7c4c2caff8c8cb77490486872b4842a6ec497145910ad923919096f9d5e",
                              "typeString": "literal_string \"queue: bad delay\""
                            },
                            "value": "queue: bad delay"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_40a9c7c4c2caff8c8cb77490486872b4842a6ec497145910ad923919096f9d5e",
                              "typeString": "literal_string \"queue: bad delay\""
                            }
                          ],
                          "id": 565,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "1445:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1445:115:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 578,
                      "nodeType": "ExpressionStatement",
                      "src": "1445:115:3"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 585,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 580,
                                  "name": "_container",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 530,
                                  "src": "1578:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Container_$2254_memory_ptr",
                                    "typeString": "struct ERC3000Data.Container memory"
                                  }
                                },
                                "id": 581,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "payload",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2251,
                                "src": "1578:18:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Payload_$2268_memory_ptr",
                                  "typeString": "struct ERC3000Data.Payload memory"
                                }
                              },
                              "id": 582,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "submitter",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2260,
                              "src": "1578:28:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 583,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1610:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 584,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1610:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "src": "1578:42:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "71756575653a20626164207375626d6974746572",
                            "id": 586,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1622:22:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_62e790d224feae2dfacd592fe7c972cde0a56af94dc775eae5159f9bcb9567d7",
                              "typeString": "literal_string \"queue: bad submitter\""
                            },
                            "value": "queue: bad submitter"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_62e790d224feae2dfacd592fe7c972cde0a56af94dc775eae5159f9bcb9567d7",
                              "typeString": "literal_string \"queue: bad submitter\""
                            }
                          ],
                          "id": 579,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "1570:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1570:75:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 588,
                      "nodeType": "ExpressionStatement",
                      "src": "1570:75:3"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 589,
                          "name": "containerHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 539,
                          "src": "1656:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 592,
                                    "name": "_container",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 530,
                                    "src": "1698:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Container_$2254_memory_ptr",
                                      "typeString": "struct ERC3000Data.Container memory"
                                    }
                                  },
                                  "id": 593,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "payload",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2251,
                                  "src": "1698:18:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Payload_$2268_memory_ptr",
                                    "typeString": "struct ERC3000Data.Payload memory"
                                  }
                                },
                                "id": 594,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "hash",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2363,
                                "src": "1698:23:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_struct$_Payload_$2268_memory_ptr_$returns$_t_bytes32_$bound_to$_t_struct$_Payload_$2268_memory_ptr_$",
                                  "typeString": "function (struct ERC3000Data.Payload memory) pure returns (bytes32)"
                                }
                              },
                              "id": 595,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1698:25:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 596,
                              "name": "_configHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 552,
                              "src": "1725:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 590,
                              "name": "ERC3000Data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2379,
                              "src": "1672:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC3000Data_$2379_$",
                                "typeString": "type(library ERC3000Data)"
                              }
                            },
                            "id": 591,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "containerHash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2313,
                            "src": "1672:25:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                              "typeString": "function (bytes32,bytes32) view returns (bytes32)"
                            }
                          },
                          "id": 597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1672:65:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1656:81:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 599,
                      "nodeType": "ExpressionStatement",
                      "src": "1656:81:3"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 604,
                                "name": "OptimisticQueueStateLib",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1857,
                                "src": "1798:23:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_OptimisticQueueStateLib_$1857_$",
                                  "typeString": "type(library OptimisticQueueStateLib)"
                                }
                              },
                              "id": 605,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "State",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1803,
                              "src": "1798:29:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_State_$1803_$",
                                "typeString": "type(enum OptimisticQueueStateLib.State)"
                              }
                            },
                            "id": 606,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "None",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1798:34:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$1803",
                              "typeString": "enum OptimisticQueueStateLib.State"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 607,
                                "name": "OptimisticQueueStateLib",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1857,
                                "src": "1846:23:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_OptimisticQueueStateLib_$1857_$",
                                  "typeString": "type(library OptimisticQueueStateLib)"
                                }
                              },
                              "id": 608,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "State",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1803,
                              "src": "1846:29:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_State_$1803_$",
                                "typeString": "type(enum OptimisticQueueStateLib.State)"
                              }
                            },
                            "id": 609,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Scheduled",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1846:39:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$1803",
                              "typeString": "enum OptimisticQueueStateLib.State"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_State_$1803",
                              "typeString": "enum OptimisticQueueStateLib.State"
                            },
                            {
                              "typeIdentifier": "t_enum$_State_$1803",
                              "typeString": "enum OptimisticQueueStateLib.State"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 600,
                              "name": "queue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 503,
                              "src": "1747:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Item_$1806_storage_$",
                                "typeString": "mapping(bytes32 => struct OptimisticQueueStateLib.Item storage ref)"
                              }
                            },
                            "id": 602,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 601,
                              "name": "containerHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 539,
                              "src": "1753:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1747:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Item_$1806_storage",
                              "typeString": "struct OptimisticQueueStateLib.Item storage ref"
                            }
                          },
                          "id": 603,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "checkAndSetState",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1856,
                          "src": "1747:37:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Item_$1806_storage_ptr_$_t_enum$_State_$1803_$_t_enum$_State_$1803_$returns$__$bound_to$_t_struct$_Item_$1806_storage_ptr_$",
                            "typeString": "function (struct OptimisticQueueStateLib.Item storage pointer,enum OptimisticQueueStateLib.State,enum OptimisticQueueStateLib.State)"
                          }
                        },
                        "id": 610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1747:148:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 611,
                      "nodeType": "ExpressionStatement",
                      "src": "1747:148:3"
                    },
                    {
                      "assignments": [
                        615
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 615,
                          "mutability": "mutable",
                          "name": "collateral",
                          "nodeType": "VariableDeclaration",
                          "overrides": null,
                          "scope": 634,
                          "src": "1906:40:3",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Collateral_$2293_memory_ptr",
                            "typeString": "struct ERC3000Data.Collateral"
                          },
                          "typeName": {
                            "contractScope": null,
                            "id": 614,
                            "name": "ERC3000Data.Collateral",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 2293,
                            "src": "1906:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Collateral_$2293_storage_ptr",
                              "typeString": "struct ERC3000Data.Collateral"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 619,
                      "initialValue": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 616,
                            "name": "_container",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 530,
                            "src": "1949:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Container_$2254_memory_ptr",
                              "typeString": "struct ERC3000Data.Container memory"
                            }
                          },
                          "id": 617,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "config",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2253,
                          "src": "1949:30:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Config_$2288_memory_ptr",
                            "typeString": "struct ERC3000Data.Config memory"
                          }
                        },
                        "id": 618,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "scheduleDeposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2279,
                        "src": "1949:59:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Collateral_$2293_memory_ptr",
                          "typeString": "struct ERC3000Data.Collateral memory"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "1906:102:3"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 623,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2041:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 624,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2041:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 620,
                            "name": "collateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 615,
                            "src": "2018:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Collateral_$2293_memory_ptr",
                              "typeString": "struct ERC3000Data.Collateral memory"
                            }
                          },
                          "id": 622,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "collectFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1318,
                          "src": "2018:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Collateral_$2293_memory_ptr_$_t_address_$returns$__$bound_to$_t_struct$_Collateral_$2293_memory_ptr_$",
                            "typeString": "function (struct ERC3000Data.Collateral memory,address)"
                          }
                        },
                        "id": 625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2018:34:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 626,
                      "nodeType": "ExpressionStatement",
                      "src": "2018:34:3"
                    },
                    {
                      "eventCall": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 628,
                            "name": "containerHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 539,
                            "src": "2112:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 629,
                              "name": "_container",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 530,
                              "src": "2127:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Container_$2254_memory_ptr",
                                "typeString": "struct ERC3000Data.Container memory"
                              }
                            },
                            "id": 630,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "payload",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2251,
                            "src": "2127:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Payload_$2268_memory_ptr",
                              "typeString": "struct ERC3000Data.Payload memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 631,
                            "name": "collateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 615,
                            "src": "2147:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Collateral_$2293_memory_ptr",
                              "typeString": "struct ERC3000Data.Collateral memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_struct$_Payload_$2268_memory_ptr",
                              "typeString": "struct ERC3000Data.Payload memory"
                            },
                            {
                              "typeIdentifier": "t_struct$_Collateral_$2293_memory_ptr",
                              "typeString": "struct ERC3000Data.Collateral memory"
                            }
                          ],
                          "id": 627,
                          "name": "Scheduled",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2432,
                          "src": "2102:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_struct$_Payload_$2268_memory_ptr_$_t_struct$_Collateral_$2293_memory_ptr_$returns$__$",
                            "typeString": "function (bytes32,struct ERC3000Data.Payload memory,struct ERC3000Data.Collateral memory)"
                          }
                        },
                        "id": 632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2102:56:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 633,
                      "nodeType": "EmitStatement",
                      "src": "2097:61:3"
                    }
                  ]
                },
                "documentation": null,
                "functionSelector": "25ddcbe0",
                "id": 635,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 534,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1135:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticQueue_$1254",
                              "typeString": "contract OptimisticQueue"
                            }
                          },
                          "id": 535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "schedule",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 635,
                          "src": "1135:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_struct$_Container_$2254_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (struct ERC3000Data.Container memory) external returns (bytes32)"
                          }
                        },
                        "id": 536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1135:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "id": 537,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 533,
                      "name": "auth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1554,
                      "src": "1130:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$_t_bytes4_$",
                        "typeString": "modifier (bytes4)"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "1130:28:3"
                  }
                ],
                "name": "schedule",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 532,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "1113:8:3"
                },
                "parameters": {
                  "id": 531,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 530,
                      "mutability": "mutable",
                      "name": "_container",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 635,
                      "src": "1049:39:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Container_$2254_memory_ptr",
                        "typeString": "struct ERC3000Data.Container"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 529,
                        "name": "ERC3000Data.Container",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2254,
                        "src": "1049:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Container_$2254_storage_ptr",
                          "typeString": "struct ERC3000Data.Container"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1048:41:3"
                },
                "returnParameters": {
                  "id": 540,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 539,
                      "mutability": "mutable",
                      "name": "containerHash",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 635,
                      "src": "1176:21:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 538,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1176:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1175:23:3"
                },
                "scope": 1254,
                "src": "1031:1134:3",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "public"
              },
              {
                "baseFunctions": [
                  2440
                ],
                "body": {
                  "id": 698,
                  "nodeType": "Block",
                  "src": "2346:464:3",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 658,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 652,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "2371:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 653,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "2371:15:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 651,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2364:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint64_$",
                                  "typeString": "type(uint64)"
                                },
                                "typeName": {
                                  "id": 650,
                                  "name": "uint64",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2364:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 654,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2364:23:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 655,
                                  "name": "_container",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 637,
                                  "src": "2391:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Container_$2254_memory_ptr",
                                    "typeString": "struct ERC3000Data.Container memory"
                                  }
                                },
                                "id": 656,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "payload",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2251,
                                "src": "2391:18:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Payload_$2268_memory_ptr",
                                  "typeString": "struct ERC3000Data.Payload memory"
                                }
                              },
                              "id": 657,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "executionTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2258,
                              "src": "2391:32:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2364:59:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "71756575653a2077616974206d6f7265",
                            "id": 659,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2425:18:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_acd54ae1f047bc4ef62fbd3c58240a299e6f5f8c7c879845a8e9447b9f589d61",
                              "typeString": "literal_string \"queue: wait more\""
                            },
                            "value": "queue: wait more"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_acd54ae1f047bc4ef62fbd3c58240a299e6f5f8c7c879845a8e9447b9f589d61",
                              "typeString": "literal_string \"queue: wait more\""
                            }
                          ],
                          "id": 649,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "2356:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2356:88:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 661,
                      "nodeType": "ExpressionStatement",
                      "src": "2356:88:3"
                    },
                    {
                      "assignments": [
                        663
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 663,
                          "mutability": "mutable",
                          "name": "containerHash",
                          "nodeType": "VariableDeclaration",
                          "overrides": null,
                          "scope": 698,
                          "src": "2455:21:3",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 662,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "2455:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 667,
                      "initialValue": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 664,
                            "name": "_container",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 637,
                            "src": "2479:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Container_$2254_memory_ptr",
                              "typeString": "struct ERC3000Data.Container memory"
                            }
                          },
                          "id": 665,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hash",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2332,
                          "src": "2479:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Container_$2254_memory_ptr_$returns$_t_bytes32_$bound_to$_t_struct$_Container_$2254_memory_ptr_$",
                            "typeString": "function (struct ERC3000Data.Container memory) view returns (bytes32)"
                          }
                        },
                        "id": 666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2479:17:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "2455:41:3"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 672,
                                "name": "OptimisticQueueStateLib",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1857,
                                "src": "2557:23:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_OptimisticQueueStateLib_$1857_$",
                                  "typeString": "type(library OptimisticQueueStateLib)"
                                }
                              },
                              "id": 673,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "State",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1803,
                              "src": "2557:29:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_State_$1803_$",
                                "typeString": "type(enum OptimisticQueueStateLib.State)"
                              }
                            },
                            "id": 674,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Scheduled",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2557:39:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$1803",
                              "typeString": "enum OptimisticQueueStateLib.State"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 675,
                                "name": "OptimisticQueueStateLib",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1857,
                                "src": "2610:23:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_OptimisticQueueStateLib_$1857_$",
                                  "typeString": "type(library OptimisticQueueStateLib)"
                                }
                              },
                              "id": 676,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "State",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1803,
                              "src": "2610:29:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_State_$1803_$",
                                "typeString": "type(enum OptimisticQueueStateLib.State)"
                              }
                            },
                            "id": 677,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Executed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2610:38:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$1803",
                              "typeString": "enum OptimisticQueueStateLib.State"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_State_$1803",
                              "typeString": "enum OptimisticQueueStateLib.State"
                            },
                            {
                              "typeIdentifier": "t_enum$_State_$1803",
                              "typeString": "enum OptimisticQueueStateLib.State"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 668,
                              "name": "queue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 503,
                              "src": "2506:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Item_$1806_storage_$",
                                "typeString": "mapping(bytes32 => struct OptimisticQueueStateLib.Item storage ref)"
                              }
                            },
                            "id": 670,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 669,
                              "name": "containerHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 663,
                              "src": "2512:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2506:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Item_$1806_storage",
                              "typeString": "struct OptimisticQueueStateLib.Item storage ref"
                            }
                          },
                          "id": 671,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "checkAndSetState",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1856,
                          "src": "2506:37:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Item_$1806_storage_ptr_$_t_enum$_State_$1803_$_t_enum$_State_$1803_$returns$__$bound_to$_t_struct$_Item_$1806_storage_ptr_$",
                            "typeString": "function (struct OptimisticQueueStateLib.Item storage pointer,enum OptimisticQueueStateLib.State,enum OptimisticQueueStateLib.State)"
                          }
                        },
                        "id": 678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2506:152:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 679,
                      "nodeType": "ExpressionStatement",
                      "src": "2506:152:3"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 687,
                                "name": "_container",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 637,
                                "src": "2713:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Container_$2254_memory_ptr",
                                  "typeString": "struct ERC3000Data.Container memory"
                                }
                              },
                              "id": 688,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "payload",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2251,
                              "src": "2713:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Payload_$2268_memory_ptr",
                                "typeString": "struct ERC3000Data.Payload memory"
                              }
                            },
                            "id": 689,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "submitter",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2260,
                            "src": "2713:28:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 680,
                                "name": "_container",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 637,
                                "src": "2669:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Container_$2254_memory_ptr",
                                  "typeString": "struct ERC3000Data.Container memory"
                                }
                              },
                              "id": 684,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "config",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2253,
                              "src": "2669:17:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Config_$2288_memory_ptr",
                                "typeString": "struct ERC3000Data.Config memory"
                              }
                            },
                            "id": 685,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "scheduleDeposit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2279,
                            "src": "2669:33:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Collateral_$2293_memory_ptr",
                              "typeString": "struct ERC3000Data.Collateral memory"
                            }
                          },
                          "id": 686,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "releaseTo",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1357,
                          "src": "2669:43:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Collateral_$2293_memory_ptr_$_t_address_$returns$__$bound_to$_t_struct$_Collateral_$2293_memory_ptr_$",
                            "typeString": "function (struct ERC3000Data.Collateral memory,address)"
                          }
                        },
                        "id": 690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2669:73:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 691,
                      "nodeType": "ExpressionStatement",
                      "src": "2669:73:3"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 693,
                              "name": "_container",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 637,
                              "src": "2769:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Container_$2254_memory_ptr",
                                "typeString": "struct ERC3000Data.Container memory"
                              }
                            },
                            "id": 694,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "payload",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2251,
                            "src": "2769:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Payload_$2268_memory_ptr",
                              "typeString": "struct ERC3000Data.Payload memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 695,
                            "name": "containerHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 663,
                            "src": "2789:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Payload_$2268_memory_ptr",
                              "typeString": "struct ERC3000Data.Payload memory"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 692,
                          "name": "_execute",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1230,
                          "src": "2760:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Payload_$2268_memory_ptr_$_t_bytes32_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (struct ERC3000Data.Payload memory,bytes32) returns (bytes memory[] memory)"
                          }
                        },
                        "id": 696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2760:43:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "functionReturnParameters": 648,
                      "id": 697,
                      "nodeType": "Return",
                      "src": "2753:50:3"
                    }
                  ]
                },
                "documentation": null,
                "functionSelector": "ecb6cba6",
                "id": 699,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 641,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2274:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticQueue_$1254",
                              "typeString": "contract OptimisticQueue"
                            }
                          },
                          "id": 642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "execute",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 699,
                          "src": "2274:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_struct$_Container_$2254_memory_ptr_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (struct ERC3000Data.Container memory) external returns (bytes memory[] memory)"
                          }
                        },
                        "id": 643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2274:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "id": 644,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 640,
                      "name": "auth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1554,
                      "src": "2269:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$_t_bytes4_$",
                        "typeString": "modifier (bytes4)"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "2269:27:3"
                  }
                ],
                "name": "execute",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 639,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "2252:8:3"
                },
                "parameters": {
                  "id": 638,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 637,
                      "mutability": "mutable",
                      "name": "_container",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 699,
                      "src": "2188:39:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Container_$2254_memory_ptr",
                        "typeString": "struct ERC3000Data.Container"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 636,
                        "name": "ERC3000Data.Container",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2254,
                        "src": "2188:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Container_$2254_storage_ptr",
                          "typeString": "struct ERC3000Data.Container"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "2187:41:3"
                },
                "returnParameters": {
                  "id": 648,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 647,
                      "mutability": "mutable",
                      "name": "execResults",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 699,
                      "src": "2314:26:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 645,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2314:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 646,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2314:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "2313:28:3"
                },
                "scope": 1254,
                "src": "2171:639:3",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "public"
              },
              {
                "baseFunctions": [
                  2458
                ],
                "body": {
                  "id": 859,
                  "nodeType": "Block",
                  "src": "2972:1400:3",
                  "statements": [
                    {
                      "assignments": [
                        715
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 715,
                          "mutability": "mutable",
                          "name": "containerHash",
                          "nodeType": "VariableDeclaration",
                          "overrides": null,
                          "scope": 859,
                          "src": "2982:21:3",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 714,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "2982:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 719,
                      "initialValue": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 716,
                            "name": "_container",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 701,
                            "src": "3006:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Container_$2254_memory_ptr",
                              "typeString": "struct ERC3000Data.Container memory"
                            }
                          },
                          "id": 717,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hash",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2332,
                          "src": "3006:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Container_$2254_memory_ptr_$returns$_t_bytes32_$bound_to$_t_struct$_Container_$2254_memory_ptr_$",
                            "typeString": "function (struct ERC3000Data.Container memory) view returns (bytes32)"
                          }
                        },
                        "id": 718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3006:17:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "2982:41:3"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 720,
                            "name": "challengerCache",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 507,
                            "src": "3033:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                              "typeString": "mapping(bytes32 => address)"
                            }
                          },
                          "id": 722,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 721,
                            "name": "containerHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 715,
                            "src": "3049:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "3033:30:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 723,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3066:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3066:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3033:43:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 726,
                      "nodeType": "ExpressionStatement",
                      "src": "3033:43:3"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 731,
                                "name": "OptimisticQueueStateLib",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1857,
                                "src": "3137:23:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_OptimisticQueueStateLib_$1857_$",
                                  "typeString": "type(library OptimisticQueueStateLib)"
                                }
                              },
                              "id": 732,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "State",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1803,
                              "src": "3137:29:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_State_$1803_$",
                                "typeString": "type(enum OptimisticQueueStateLib.State)"
                              }
                            },
                            "id": 733,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Scheduled",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3137:39:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$1803",
                              "typeString": "enum OptimisticQueueStateLib.State"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 734,
                                "name": "OptimisticQueueStateLib",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1857,
                                "src": "3190:23:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_OptimisticQueueStateLib_$1857_$",
                                  "typeString": "type(library OptimisticQueueStateLib)"
                                }
                              },
                              "id": 735,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "State",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1803,
                              "src": "3190:29:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_State_$1803_$",
                                "typeString": "type(enum OptimisticQueueStateLib.State)"
                              }
                            },
                            "id": 736,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Challenged",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3190:40:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$1803",
                              "typeString": "enum OptimisticQueueStateLib.State"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_State_$1803",
                              "typeString": "enum OptimisticQueueStateLib.State"
                            },
                            {
                              "typeIdentifier": "t_enum$_State_$1803",
                              "typeString": "enum OptimisticQueueStateLib.State"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 727,
                              "name": "queue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 503,
                              "src": "3086:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Item_$1806_storage_$",
                                "typeString": "mapping(bytes32 => struct OptimisticQueueStateLib.Item storage ref)"
                              }
                            },
                            "id": 729,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 728,
                              "name": "containerHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 715,
                              "src": "3092:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3086:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Item_$1806_storage",
                              "typeString": "struct OptimisticQueueStateLib.Item storage ref"
                            }
                          },
                          "id": 730,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "checkAndSetState",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1856,
                          "src": "3086:37:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Item_$1806_storage_ptr_$_t_enum$_State_$1803_$_t_enum$_State_$1803_$returns$__$bound_to$_t_struct$_Item_$1806_storage_ptr_$",
                            "typeString": "function (struct OptimisticQueueStateLib.Item storage pointer,enum OptimisticQueueStateLib.State,enum OptimisticQueueStateLib.State)"
                          }
                        },
                        "id": 737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3086:154:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 738,
                      "nodeType": "ExpressionStatement",
                      "src": "3086:154:3"
                    },
                    {
                      "assignments": [
                        742
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 742,
                          "mutability": "mutable",
                          "name": "collateral",
                          "nodeType": "VariableDeclaration",
                          "overrides": null,
                          "scope": 859,
                          "src": "3251:40:3",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Collateral_$2293_memory_ptr",
                            "typeString": "struct ERC3000Data.Collateral"
                          },
                          "typeName": {
                            "contractScope": null,
                            "id": 741,
                            "name": "ERC3000Data.Collateral",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 2293,
                            "src": "3251:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Collateral_$2293_storage_ptr",
                              "typeString": "struct ERC3000Data.Collateral"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 746,
                      "initialValue": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 743,
                            "name": "_container",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 701,
                            "src": "3294:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Container_$2254_memory_ptr",
                              "typeString": "struct ERC3000Data.Container memory"
                            }
                          },
                          "id": 744,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "config",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2253,
                          "src": "3294:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Config_$2288_memory_ptr",
                            "typeString": "struct ERC3000Data.Config memory"
                          }
                        },
                        "id": 745,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "challengeDeposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2281,
                        "src": "3294:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Collateral_$2293_memory_ptr",
                          "typeString": "struct ERC3000Data.Collateral memory"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "3251:77:3"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 750,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3361:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 751,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3361:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 747,
                            "name": "collateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 742,
                            "src": "3338:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Collateral_$2293_memory_ptr",
                              "typeString": "struct ERC3000Data.Collateral memory"
                            }
                          },
                          "id": 749,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "collectFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1318,
                          "src": "3338:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Collateral_$2293_memory_ptr_$_t_address_$returns$__$bound_to$_t_struct$_Collateral_$2293_memory_ptr_$",
                            "typeString": "function (struct ERC3000Data.Collateral memory,address)"
                          }
                        },
                        "id": 752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3338:34:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 753,
                      "nodeType": "ExpressionStatement",
                      "src": "3338:34:3"
                    },
                    {
                      "assignments": [
                        755
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 755,
                          "mutability": "mutable",
                          "name": "arbitrator",
                          "nodeType": "VariableDeclaration",
                          "overrides": null,
                          "scope": 859,
                          "src": "3383:22:3",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IArbitrator_$1459",
                            "typeString": "contract IArbitrator"
                          },
                          "typeName": {
                            "contractScope": null,
                            "id": 754,
                            "name": "IArbitrator",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 1459,
                            "src": "3383:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IArbitrator_$1459",
                              "typeString": "contract IArbitrator"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 761,
                      "initialValue": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 757,
                                "name": "_container",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 701,
                                "src": "3420:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Container_$2254_memory_ptr",
                                  "typeString": "struct ERC3000Data.Container memory"
                                }
                              },
                              "id": 758,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "config",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2253,
                              "src": "3420:17:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Config_$2288_memory_ptr",
                                "typeString": "struct ERC3000Data.Config memory"
                              }
                            },
                            "id": 759,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "resolver",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2285,
                            "src": "3420:26:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 756,
                          "name": "IArbitrator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1459,
                          "src": "3408:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IArbitrator_$1459_$",
                            "typeString": "type(contract IArbitrator)"
                          }
                        },
                        "id": 760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3408:39:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IArbitrator_$1459",
                          "typeString": "contract IArbitrator"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "3383:64:3"
                    },
                    {
                      "assignments": [
                        763,
                        765,
                        767
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 763,
                          "mutability": "mutable",
                          "name": "recipient",
                          "nodeType": "VariableDeclaration",
                          "overrides": null,
                          "scope": 859,
                          "src": "3458:17:3",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 762,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3458:7:3",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 765,
                          "mutability": "mutable",
                          "name": "feeToken",
                          "nodeType": "VariableDeclaration",
                          "overrides": null,
                          "scope": 859,
                          "src": "3477:14:3",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$1927",
                            "typeString": "contract ERC20"
                          },
                          "typeName": {
                            "contractScope": null,
                            "id": 764,
                            "name": "ERC20",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 1927,
                            "src": "3477:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$1927",
                              "typeString": "contract ERC20"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 767,
                          "mutability": "mutable",
                          "name": "feeAmount",
                          "nodeType": "VariableDeclaration",
                          "overrides": null,
                          "scope": 859,
                          "src": "3493:17:3",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 766,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3493:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 771,
                      "initialValue": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 768,
                            "name": "arbitrator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 755,
                            "src": "3514:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IArbitrator_$1459",
                              "typeString": "contract IArbitrator"
                            }
                          },
                          "id": 769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getDisputeFees",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1446,
                          "src": "3514:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$_t_contract$_ERC20_$1927_$_t_uint256_$",
                            "typeString": "function () view external returns (address,contract ERC20,uint256)"
                          }
                        },
                        "id": 770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3514:27:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_address_$_t_contract$_ERC20_$1927_$_t_uint256_$",
                          "typeString": "tuple(address,contract ERC20,uint256)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "3457:84:3"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 775,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3585:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 776,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "3585:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 779,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "3605:4:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_OptimisticQueue_$1254",
                                      "typeString": "contract OptimisticQueue"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_OptimisticQueue_$1254",
                                      "typeString": "contract OptimisticQueue"
                                    }
                                  ],
                                  "id": 778,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3597:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 777,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3597:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 780,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3597:13:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 781,
                                "name": "feeAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 767,
                                "src": "3612:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 773,
                                "name": "feeToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 765,
                                "src": "3559:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$1927",
                                  "typeString": "contract ERC20"
                                }
                              },
                              "id": 774,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "safeTransferFrom",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2039,
                              "src": "3559:25:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$1927_$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$bound_to$_t_contract$_ERC20_$1927_$",
                                "typeString": "function (contract ERC20,address,address,uint256) returns (bool)"
                              }
                            },
                            "id": 782,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3559:63:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "71756575653a20626164206665652070756c6c",
                            "id": 783,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3624:21:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_58a744e6e1e09463256bcc06f6ed39163384e25aaa1a047ce2a597335257fc61",
                              "typeString": "literal_string \"queue: bad fee pull\""
                            },
                            "value": "queue: bad fee pull"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_58a744e6e1e09463256bcc06f6ed39163384e25aaa1a047ce2a597335257fc61",
                              "typeString": "literal_string \"queue: bad fee pull\""
                            }
                          ],
                          "id": 772,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "3551:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3551:95:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 785,
                      "nodeType": "ExpressionStatement",
                      "src": "3551:95:3"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 789,
                                "name": "recipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 763,
                                "src": "3685:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 790,
                                "name": "feeAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 767,
                                "src": "3696:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 787,
                                "name": "feeToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 765,
                                "src": "3664:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$1927",
                                  "typeString": "contract ERC20"
                                }
                              },
                              "id": 788,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "safeApprove",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2071,
                              "src": "3664:20:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$1927_$_t_address_$_t_uint256_$returns$_t_bool_$bound_to$_t_contract$_ERC20_$1927_$",
                                "typeString": "function (contract ERC20,address,uint256) returns (bool)"
                              }
                            },
                            "id": 791,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3664:42:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "71756575653a2062616420617070726f7665",
                            "id": 792,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3708:20:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_90a488a3a55292a25b4f4d48ee199298828424363556f882f9dbee951f9de0b0",
                              "typeString": "literal_string \"queue: bad approve\""
                            },
                            "value": "queue: bad approve"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_90a488a3a55292a25b4f4d48ee199298828424363556f882f9dbee951f9de0b0",
                              "typeString": "literal_string \"queue: bad approve\""
                            }
                          ],
                          "id": 786,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "3656:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3656:73:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 794,
                      "nodeType": "ExpressionStatement",
                      "src": "3656:73:3"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 795,
                          "name": "disputeId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 712,
                          "src": "3739:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 798,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3776:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 801,
                                  "name": "_container",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 701,
                                  "src": "3790:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Container_$2254_memory_ptr",
                                    "typeString": "struct ERC3000Data.Container memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_struct$_Container_$2254_memory_ptr",
                                    "typeString": "struct ERC3000Data.Container memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 799,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "3779:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 800,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "3779:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 802,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3779:22:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 796,
                              "name": "arbitrator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 755,
                              "src": "3751:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IArbitrator_$1459",
                                "typeString": "contract IArbitrator"
                              }
                            },
                            "id": 797,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "createDispute",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1424,
                            "src": "3751:24:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (uint256,bytes memory) external returns (uint256)"
                            }
                          },
                          "id": 803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3751:51:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3739:63:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 805,
                      "nodeType": "ExpressionStatement",
                      "src": "3739:63:3"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 809,
                                "name": "recipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 763,
                                "src": "3841:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 810,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3852:1:3",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 807,
                                "name": "feeToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 765,
                                "src": "3820:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$1927",
                                  "typeString": "contract ERC20"
                                }
                              },
                              "id": 808,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "safeApprove",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2071,
                              "src": "3820:20:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$1927_$_t_address_$_t_uint256_$returns$_t_bool_$bound_to$_t_contract$_ERC20_$1927_$",
                                "typeString": "function (contract ERC20,address,uint256) returns (bool)"
                              }
                            },
                            "id": 811,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3820:34:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "71756575653a20626164207265736574",
                            "id": 812,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3856:18:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_46f3cb0567d0706672d1246ebc405f6d715731fe402a591951a19af3bfb19d03",
                              "typeString": "literal_string \"queue: bad reset\""
                            },
                            "value": "queue: bad reset"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_46f3cb0567d0706672d1246ebc405f6d715731fe402a591951a19af3bfb19d03",
                              "typeString": "literal_string \"queue: bad reset\""
                            }
                          ],
                          "id": 806,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "3812:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3812:63:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 814,
                      "nodeType": "ExpressionStatement",
                      "src": "3812:63:3"
                    },
                    {
                      "eventCall": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 816,
                            "name": "arbitrator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 755,
                            "src": "3997:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IArbitrator_$1459",
                              "typeString": "contract IArbitrator"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 817,
                            "name": "disputeId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 712,
                            "src": "4009:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 818,
                                "name": "_container",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 701,
                                "src": "4020:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Container_$2254_memory_ptr",
                                  "typeString": "struct ERC3000Data.Container memory"
                                }
                              },
                              "id": 819,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "payload",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2251,
                              "src": "4020:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Payload_$2268_memory_ptr",
                                "typeString": "struct ERC3000Data.Payload memory"
                              }
                            },
                            "id": 820,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "submitter",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2260,
                            "src": "4020:28:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 821,
                                "name": "_container",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 701,
                                "src": "4050:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Container_$2254_memory_ptr",
                                  "typeString": "struct ERC3000Data.Container memory"
                                }
                              },
                              "id": 822,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "payload",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2251,
                              "src": "4050:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Payload_$2268_memory_ptr",
                                "typeString": "struct ERC3000Data.Payload memory"
                              }
                            },
                            "id": 823,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "proof",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2267,
                            "src": "4050:24:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 824,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4076:4:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IArbitrator_$1459",
                              "typeString": "contract IArbitrator"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 815,
                          "name": "EvidenceSubmitted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1392,
                          "src": "3979:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_contract$_IArbitrator_$1459_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                            "typeString": "function (contract IArbitrator,uint256,address,bytes memory,bool)"
                          }
                        },
                        "id": 825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3979:102:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 826,
                      "nodeType": "EmitStatement",
                      "src": "3974:107:3"
                    },
                    {
                      "eventCall": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 828,
                            "name": "arbitrator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 755,
                            "src": "4114:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IArbitrator_$1459",
                              "typeString": "contract IArbitrator"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 829,
                            "name": "disputeId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 712,
                            "src": "4126:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 830,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4137:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 831,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4137:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 832,
                            "name": "_reason",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 703,
                            "src": "4149:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 833,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4158:4:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IArbitrator_$1459",
                              "typeString": "contract IArbitrator"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 827,
                          "name": "EvidenceSubmitted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1392,
                          "src": "4096:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_contract$_IArbitrator_$1459_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                            "typeString": "function (contract IArbitrator,uint256,address,bytes memory,bool)"
                          }
                        },
                        "id": 834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4096:67:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 835,
                      "nodeType": "EmitStatement",
                      "src": "4091:72:3"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 839,
                            "name": "disputeId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 712,
                            "src": "4204:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 836,
                            "name": "arbitrator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 755,
                            "src": "4173:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IArbitrator_$1459",
                              "typeString": "contract IArbitrator"
                            }
                          },
                          "id": 838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "closeEvidencePeriod",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1430,
                          "src": "4173:30:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                            "typeString": "function (uint256) external"
                          }
                        },
                        "id": 840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4173:41:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 841,
                      "nodeType": "ExpressionStatement",
                      "src": "4173:41:3"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 842,
                              "name": "disputeItemCache",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 513,
                              "src": "4225:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_IArbitrator_$1459_$_t_mapping$_t_uint256_$_t_bytes32_$_$",
                                "typeString": "mapping(contract IArbitrator => mapping(uint256 => bytes32))"
                              }
                            },
                            "id": 845,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 843,
                              "name": "arbitrator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 755,
                              "src": "4242:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IArbitrator_$1459",
                                "typeString": "contract IArbitrator"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4225:28:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                              "typeString": "mapping(uint256 => bytes32)"
                            }
                          },
                          "id": 846,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 844,
                            "name": "disputeId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 712,
                            "src": "4254:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "4225:39:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "id": 847,
                          "name": "containerHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 715,
                          "src": "4267:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "4225:55:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 849,
                      "nodeType": "ExpressionStatement",
                      "src": "4225:55:3"
                    },
                    {
                      "eventCall": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 851,
                            "name": "containerHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 715,
                            "src": "4307:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 852,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4322:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 853,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4322:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 854,
                            "name": "_reason",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 703,
                            "src": "4334:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 855,
                            "name": "disputeId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 712,
                            "src": "4343:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 856,
                            "name": "collateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 742,
                            "src": "4354:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Collateral_$2293_memory_ptr",
                              "typeString": "struct ERC3000Data.Collateral memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_struct$_Collateral_$2293_memory_ptr",
                              "typeString": "struct ERC3000Data.Collateral memory"
                            }
                          ],
                          "id": 850,
                          "name": "Challenged",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2470,
                          "src": "4296:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_struct$_Collateral_$2293_memory_ptr_$returns$__$",
                            "typeString": "function (bytes32,address,bytes memory,uint256,struct ERC3000Data.Collateral memory)"
                          }
                        },
                        "id": 857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4296:69:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 858,
                      "nodeType": "EmitStatement",
                      "src": "4291:74:3"
                    }
                  ]
                },
                "documentation": null,
                "functionSelector": "5decc190",
                "id": 860,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 706,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2903:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticQueue_$1254",
                              "typeString": "contract OptimisticQueue"
                            }
                          },
                          "id": 707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "challenge",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 860,
                          "src": "2903:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_struct$_Container_$2254_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                            "typeString": "function (struct ERC3000Data.Container memory,bytes memory) external returns (uint256)"
                          }
                        },
                        "id": 708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2903:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "id": 709,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 705,
                      "name": "auth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1554,
                      "src": "2898:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$_t_bytes4_$",
                        "typeString": "modifier (bytes4)"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "2898:29:3"
                  }
                ],
                "name": "challenge",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 710,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "2928:8:3"
                },
                "parameters": {
                  "id": 704,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 701,
                      "mutability": "mutable",
                      "name": "_container",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 860,
                      "src": "2835:39:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Container_$2254_memory_ptr",
                        "typeString": "struct ERC3000Data.Container"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 700,
                        "name": "ERC3000Data.Container",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2254,
                        "src": "2835:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Container_$2254_storage_ptr",
                          "typeString": "struct ERC3000Data.Container"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 703,
                      "mutability": "mutable",
                      "name": "_reason",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 860,
                      "src": "2876:20:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 702,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2876:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "2834:63:3"
                },
                "returnParameters": {
                  "id": 713,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 712,
                      "mutability": "mutable",
                      "name": "disputeId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 860,
                      "src": "2953:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 711,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2953:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "2952:19:3"
                },
                "scope": 1254,
                "src": "2816:1556:3",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "public"
              },
              {
                "baseFunctions": [
                  2480
                ],
                "body": {
                  "id": 928,
                  "nodeType": "Block",
                  "src": "4510:634:3",
                  "statements": [
                    {
                      "assignments": [
                        872
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 872,
                          "mutability": "mutable",
                          "name": "containerHash",
                          "nodeType": "VariableDeclaration",
                          "overrides": null,
                          "scope": 928,
                          "src": "4520:21:3",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 871,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "4520:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 876,
                      "initialValue": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 873,
                            "name": "_container",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 862,
                            "src": "4544:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Container_$2254_memory_ptr",
                              "typeString": "struct ERC3000Data.Container memory"
                            }
                          },
                          "id": 874,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hash",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2332,
                          "src": "4544:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Container_$2254_memory_ptr_$returns$_t_bytes32_$bound_to$_t_struct$_Container_$2254_memory_ptr_$",
                            "typeString": "function (struct ERC3000Data.Container memory) view returns (bytes32)"
                          }
                        },
                        "id": 875,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4544:17:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "4520:41:3"
                    },
                    {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$1803",
                          "typeString": "enum OptimisticQueueStateLib.State"
                        },
                        "id": 884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 877,
                              "name": "queue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 503,
                              "src": "4575:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Item_$1806_storage_$",
                                "typeString": "mapping(bytes32 => struct OptimisticQueueStateLib.Item storage ref)"
                              }
                            },
                            "id": 879,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 878,
                              "name": "containerHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 872,
                              "src": "4581:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4575:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Item_$1806_storage",
                              "typeString": "struct OptimisticQueueStateLib.Item storage ref"
                            }
                          },
                          "id": 880,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1805,
                          "src": "4575:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$1803",
                            "typeString": "enum OptimisticQueueStateLib.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 881,
                              "name": "OptimisticQueueStateLib",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1857,
                              "src": "4605:23:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_OptimisticQueueStateLib_$1857_$",
                                "typeString": "type(library OptimisticQueueStateLib)"
                              }
                            },
                            "id": 882,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "State",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1803,
                            "src": "4605:29:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$1803_$",
                              "typeString": "type(enum OptimisticQueueStateLib.State)"
                            }
                          },
                          "id": 883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Challenged",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4605:40:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$1803",
                            "typeString": "enum OptimisticQueueStateLib.State"
                          }
                        },
                        "src": "4575:70:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": null,
                      "id": 895,
                      "nodeType": "IfStatement",
                      "src": "4571:264:3",
                      "trueBody": {
                        "id": 894,
                        "nodeType": "Block",
                        "src": "4647:188:3",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 891,
                                  "name": "_resolverId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 864,
                                  "src": "4812:11:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 886,
                                          "name": "_container",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 862,
                                          "src": "4770:10:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Container_$2254_memory_ptr",
                                            "typeString": "struct ERC3000Data.Container memory"
                                          }
                                        },
                                        "id": 887,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "config",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2253,
                                        "src": "4770:17:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Config_$2288_memory_ptr",
                                          "typeString": "struct ERC3000Data.Config memory"
                                        }
                                      },
                                      "id": 888,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "resolver",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2285,
                                      "src": "4770:26:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 885,
                                    "name": "IArbitrator",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1459,
                                    "src": "4758:11:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IArbitrator_$1459_$",
                                      "typeString": "type(contract IArbitrator)"
                                    }
                                  },
                                  "id": 889,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4758:39:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IArbitrator_$1459",
                                    "typeString": "contract IArbitrator"
                                  }
                                },
                                "id": 890,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "executeRuling",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1436,
                                "src": "4758:53:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                                  "typeString": "function (uint256) external"
                                }
                              },
                              "id": 892,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4758:66:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 893,
                            "nodeType": "ExpressionStatement",
                            "src": "4758:66:3"
                          }
                        ]
                      }
                    },
                    {
                      "assignments": [
                        897
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 897,
                          "mutability": "mutable",
                          "name": "approved",
                          "nodeType": "VariableDeclaration",
                          "overrides": null,
                          "scope": 928,
                          "src": "4845:13:3",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "typeName": {
                            "id": 896,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "4845:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 906,
                      "initialValue": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$1803",
                          "typeString": "enum OptimisticQueueStateLib.State"
                        },
                        "id": 905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 898,
                              "name": "queue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 503,
                              "src": "4861:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Item_$1806_storage_$",
                                "typeString": "mapping(bytes32 => struct OptimisticQueueStateLib.Item storage ref)"
                              }
                            },
                            "id": 900,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 899,
                              "name": "containerHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 872,
                              "src": "4867:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4861:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Item_$1806_storage",
                              "typeString": "struct OptimisticQueueStateLib.Item storage ref"
                            }
                          },
                          "id": 901,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1805,
                          "src": "4861:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$1803",
                            "typeString": "enum OptimisticQueueStateLib.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 902,
                              "name": "OptimisticQueueStateLib",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1857,
                              "src": "4891:23:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_OptimisticQueueStateLib_$1857_$",
                                "typeString": "type(library OptimisticQueueStateLib)"
                              }
                            },
                            "id": 903,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "State",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1803,
                            "src": "4891:29:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$1803_$",
                              "typeString": "type(enum OptimisticQueueStateLib.State)"
                            }
                          },
                          "id": 904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Approved",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4891:38:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$1803",
                            "typeString": "enum OptimisticQueueStateLib.State"
                          }
                        },
                        "src": "4861:68:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "4845:84:3"
                    },
                    {
                      "condition": {
                        "argumentTypes": null,
                        "id": 907,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 897,
                        "src": "4943:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 919,
                        "nodeType": "Block",
                        "src": "5025:52:3",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 916,
                                  "name": "_container",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 862,
                                  "src": "5055:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Container_$2254_memory_ptr",
                                    "typeString": "struct ERC3000Data.Container memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_struct$_Container_$2254_memory_ptr",
                                    "typeString": "struct ERC3000Data.Container memory"
                                  }
                                ],
                                "id": 915,
                                "name": "settleRejection",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1110,
                                "src": "5039:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Container_$2254_memory_ptr_$returns$__$",
                                  "typeString": "function (struct ERC3000Data.Container memory)"
                                }
                              },
                              "id": 917,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5039:27:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 918,
                            "nodeType": "ExpressionStatement",
                            "src": "5039:27:3"
                          }
                        ]
                      },
                      "id": 920,
                      "nodeType": "IfStatement",
                      "src": "4939:138:3",
                      "trueBody": {
                        "id": 914,
                        "nodeType": "Block",
                        "src": "4953:66:3",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "id": 912,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "argumentTypes": null,
                                "id": 908,
                                "name": "execResults",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 869,
                                "src": "4967:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "bytes memory[] memory"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 910,
                                    "name": "_container",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 862,
                                    "src": "4997:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Container_$2254_memory_ptr",
                                      "typeString": "struct ERC3000Data.Container memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Container_$2254_memory_ptr",
                                      "typeString": "struct ERC3000Data.Container memory"
                                    }
                                  ],
                                  "id": 909,
                                  "name": "executeApproved",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1051,
                                  "src": "4981:15:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Container_$2254_memory_ptr_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                                    "typeString": "function (struct ERC3000Data.Container memory) returns (bytes memory[] memory)"
                                  }
                                },
                                "id": 911,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4981:27:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "bytes memory[] memory"
                                }
                              },
                              "src": "4967:41:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                                "typeString": "bytes memory[] memory"
                              }
                            },
                            "id": 913,
                            "nodeType": "ExpressionStatement",
                            "src": "4967:41:3"
                          }
                        ]
                      }
                    },
                    {
                      "eventCall": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 922,
                            "name": "containerHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 872,
                            "src": "5101:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 923,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5116:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 924,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5116:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 925,
                            "name": "approved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 897,
                            "src": "5128:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 921,
                          "name": "Resolved",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2488,
                          "src": "5092:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_bool_$returns$__$",
                            "typeString": "function (bytes32,address,bool)"
                          }
                        },
                        "id": 926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5092:45:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 927,
                      "nodeType": "EmitStatement",
                      "src": "5087:50:3"
                    }
                  ]
                },
                "documentation": null,
                "functionSelector": "0494812a",
                "id": 929,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "resolve",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 866,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "4457:8:3"
                },
                "parameters": {
                  "id": 865,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 862,
                      "mutability": "mutable",
                      "name": "_container",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 929,
                      "src": "4395:39:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Container_$2254_memory_ptr",
                        "typeString": "struct ERC3000Data.Container"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 861,
                        "name": "ERC3000Data.Container",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2254,
                        "src": "4395:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Container_$2254_storage_ptr",
                          "typeString": "struct ERC3000Data.Container"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 864,
                      "mutability": "mutable",
                      "name": "_resolverId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 929,
                      "src": "4436:19:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 863,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4436:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "4394:62:3"
                },
                "returnParameters": {
                  "id": 870,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 869,
                      "mutability": "mutable",
                      "name": "execResults",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 929,
                      "src": "4482:26:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 867,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4482:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 868,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "4482:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "4481:28:3"
                },
                "scope": 1254,
                "src": "4378:766:3",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "public"
              },
              {
                "baseFunctions": [
                  2497
                ],
                "body": {
                  "id": 975,
                  "nodeType": "Block",
                  "src": "5284:338:3",
                  "statements": [
                    {
                      "assignments": [
                        945
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 945,
                          "mutability": "mutable",
                          "name": "containerHash",
                          "nodeType": "VariableDeclaration",
                          "overrides": null,
                          "scope": 975,
                          "src": "5294:21:3",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 944,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "5294:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 953,
                      "initialValue": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 948,
                            "name": "_payloadHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 931,
                            "src": "5344:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "id": 949,
                                "name": "_config",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 933,
                                "src": "5358:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Config_$2288_memory_ptr",
                                  "typeString": "struct ERC3000Data.Config memory"
                                }
                              },
                              "id": 950,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "hash",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2378,
                              "src": "5358:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_struct$_Config_$2288_memory_ptr_$returns$_t_bytes32_$bound_to$_t_struct$_Config_$2288_memory_ptr_$",
                                "typeString": "function (struct ERC3000Data.Config memory) pure returns (bytes32)"
                              }
                            },
                            "id": 951,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5358:14:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 946,
                            "name": "ERC3000Data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2379,
                            "src": "5318:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC3000Data_$2379_$",
                              "typeString": "type(library ERC3000Data)"
                            }
                          },
                          "id": 947,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "containerHash",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2313,
                          "src": "5318:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                            "typeString": "function (bytes32,bytes32) view returns (bytes32)"
                          }
                        },
                        "id": 952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5318:55:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "5294:79:3"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 958,
                                "name": "OptimisticQueueStateLib",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1857,
                                "src": "5434:23:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_OptimisticQueueStateLib_$1857_$",
                                  "typeString": "type(library OptimisticQueueStateLib)"
                                }
                              },
                              "id": 959,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "State",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1803,
                              "src": "5434:29:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_State_$1803_$",
                                "typeString": "type(enum OptimisticQueueStateLib.State)"
                              }
                            },
                            "id": 960,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Scheduled",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5434:39:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$1803",
                              "typeString": "enum OptimisticQueueStateLib.State"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 961,
                                "name": "OptimisticQueueStateLib",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1857,
                                "src": "5487:23:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_OptimisticQueueStateLib_$1857_$",
                                  "typeString": "type(library OptimisticQueueStateLib)"
                                }
                              },
                              "id": 962,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "State",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1803,
                              "src": "5487:29:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_State_$1803_$",
                                "typeString": "type(enum OptimisticQueueStateLib.State)"
                              }
                            },
                            "id": 963,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Cancelled",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5487:39:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$1803",
                              "typeString": "enum OptimisticQueueStateLib.State"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_State_$1803",
                              "typeString": "enum OptimisticQueueStateLib.State"
                            },
                            {
                              "typeIdentifier": "t_enum$_State_$1803",
                              "typeString": "enum OptimisticQueueStateLib.State"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 954,
                              "name": "queue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 503,
                              "src": "5383:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Item_$1806_storage_$",
                                "typeString": "mapping(bytes32 => struct OptimisticQueueStateLib.Item storage ref)"
                              }
                            },
                            "id": 956,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 955,
                              "name": "containerHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 945,
                              "src": "5389:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5383:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Item_$1806_storage",
                              "typeString": "struct OptimisticQueueStateLib.Item storage ref"
                            }
                          },
                          "id": 957,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "checkAndSetState",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1856,
                          "src": "5383:37:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Item_$1806_storage_ptr_$_t_enum$_State_$1803_$_t_enum$_State_$1803_$returns$__$bound_to$_t_struct$_Item_$1806_storage_ptr_$",
                            "typeString": "function (struct OptimisticQueueStateLib.Item storage pointer,enum OptimisticQueueStateLib.State,enum OptimisticQueueStateLib.State)"
                          }
                        },
                        "id": 964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5383:153:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 965,
                      "nodeType": "ExpressionStatement",
                      "src": "5383:153:3"
                    },
                    {
                      "eventCall": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 967,
                            "name": "containerHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 945,
                            "src": "5559:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 968,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5574:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 969,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5574:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 970,
                            "name": "_reason",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 935,
                            "src": "5586:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 971,
                              "name": "_config",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 933,
                              "src": "5595:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Config_$2288_memory_ptr",
                                "typeString": "struct ERC3000Data.Config memory"
                              }
                            },
                            "id": 972,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "vetoDeposit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2283,
                            "src": "5595:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Collateral_$2293_memory_ptr",
                              "typeString": "struct ERC3000Data.Collateral memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_struct$_Collateral_$2293_memory_ptr",
                              "typeString": "struct ERC3000Data.Collateral memory"
                            }
                          ],
                          "id": 966,
                          "name": "Vetoed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2507,
                          "src": "5552:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_bytes_memory_ptr_$_t_struct$_Collateral_$2293_memory_ptr_$returns$__$",
                            "typeString": "function (bytes32,address,bytes memory,struct ERC3000Data.Collateral memory)"
                          }
                        },
                        "id": 973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5552:63:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 974,
                      "nodeType": "EmitStatement",
                      "src": "5547:68:3"
                    }
                  ]
                },
                "documentation": null,
                "functionSelector": "a0e975cb",
                "id": 976,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 938,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5248:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticQueue_$1254",
                              "typeString": "contract OptimisticQueue"
                            }
                          },
                          "id": 939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "veto",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 976,
                          "src": "5248:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_struct$_Config_$2288_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                            "typeString": "function (bytes32,struct ERC3000Data.Config memory,bytes memory) external"
                          }
                        },
                        "id": 940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5248:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "id": 941,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 937,
                      "name": "auth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1554,
                      "src": "5243:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$_t_bytes4_$",
                        "typeString": "modifier (bytes4)"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "5243:24:3"
                  }
                ],
                "name": "veto",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 942,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "5268:8:3"
                },
                "parameters": {
                  "id": 936,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 931,
                      "mutability": "mutable",
                      "name": "_payloadHash",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 976,
                      "src": "5164:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 930,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5164:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 933,
                      "mutability": "mutable",
                      "name": "_config",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 976,
                      "src": "5186:33:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Config_$2288_memory_ptr",
                        "typeString": "struct ERC3000Data.Config"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 932,
                        "name": "ERC3000Data.Config",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2288,
                        "src": "5186:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$2288_storage_ptr",
                          "typeString": "struct ERC3000Data.Config"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 935,
                      "mutability": "mutable",
                      "name": "_reason",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 976,
                      "src": "5221:20:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 934,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5221:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "5163:79:3"
                },
                "returnParameters": {
                  "id": 943,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "5284:0:3"
                },
                "scope": 1254,
                "src": "5150:472:3",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "public"
              },
              {
                "baseFunctions": [
                  2514
                ],
                "body": {
                  "id": 993,
                  "nodeType": "Block",
                  "src": "5782:43:3",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 990,
                            "name": "_config",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 978,
                            "src": "5810:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Config_$2288_memory_ptr",
                              "typeString": "struct ERC3000Data.Config memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Config_$2288_memory_ptr",
                              "typeString": "struct ERC3000Data.Config memory"
                            }
                          ],
                          "id": 989,
                          "name": "_setConfig",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1253,
                          "src": "5799:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Config_$2288_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (struct ERC3000Data.Config memory) returns (bytes32)"
                          }
                        },
                        "id": 991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5799:19:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "functionReturnParameters": 988,
                      "id": 992,
                      "nodeType": "Return",
                      "src": "5792:26:3"
                    }
                  ]
                },
                "documentation": null,
                "functionSelector": "aa455d9f",
                "id": 994,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 982,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5727:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticQueue_$1254",
                              "typeString": "contract OptimisticQueue"
                            }
                          },
                          "id": 983,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "configure",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 994,
                          "src": "5727:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_struct$_Config_$2288_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (struct ERC3000Data.Config memory) external returns (bytes32)"
                          }
                        },
                        "id": 984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5727:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "id": 985,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 981,
                      "name": "auth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1554,
                      "src": "5722:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$_t_bytes4_$",
                        "typeString": "modifier (bytes4)"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "5722:29:3"
                  }
                ],
                "name": "configure",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 980,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "5705:8:3"
                },
                "parameters": {
                  "id": 979,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 978,
                      "mutability": "mutable",
                      "name": "_config",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 994,
                      "src": "5647:33:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Config_$2288_memory_ptr",
                        "typeString": "struct ERC3000Data.Config"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 977,
                        "name": "ERC3000Data.Config",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2288,
                        "src": "5647:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$2288_storage_ptr",
                          "typeString": "struct ERC3000Data.Config"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "5646:35:3"
                },
                "returnParameters": {
                  "id": 988,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 987,
                      "mutability": "mutable",
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 994,
                      "src": "5769:7:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 986,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5769:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "5768:9:3"
                },
                "scope": 1254,
                "src": "5628:197:3",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 1050,
                  "nodeType": "Block",
                  "src": "6061:448:3",
                  "statements": [
                    {
                      "assignments": [
                        1003
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1003,
                          "mutability": "mutable",
                          "name": "containerHash",
                          "nodeType": "VariableDeclaration",
                          "overrides": null,
                          "scope": 1050,
                          "src": "6071:21:3",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 1002,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "6071:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 1007,
                      "initialValue": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1004,
                            "name": "_container",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 996,
                            "src": "6095:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Container_$2254_memory_ptr",
                              "typeString": "struct ERC3000Data.Container memory"
                            }
                          },
                          "id": 1005,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hash",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2332,
                          "src": "6095:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Container_$2254_memory_ptr_$returns$_t_bytes32_$bound_to$_t_struct$_Container_$2254_memory_ptr_$",
                            "typeString": "function (struct ERC3000Data.Container memory) view returns (bytes32)"
                          }
                        },
                        "id": 1006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6095:17:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "6071:41:3"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1012,
                                "name": "OptimisticQueueStateLib",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1857,
                                "src": "6173:23:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_OptimisticQueueStateLib_$1857_$",
                                  "typeString": "type(library OptimisticQueueStateLib)"
                                }
                              },
                              "id": 1013,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "State",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1803,
                              "src": "6173:29:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_State_$1803_$",
                                "typeString": "type(enum OptimisticQueueStateLib.State)"
                              }
                            },
                            "id": 1014,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Approved",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "6173:38:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$1803",
                              "typeString": "enum OptimisticQueueStateLib.State"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1015,
                                "name": "OptimisticQueueStateLib",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1857,
                                "src": "6225:23:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_OptimisticQueueStateLib_$1857_$",
                                  "typeString": "type(library OptimisticQueueStateLib)"
                                }
                              },
                              "id": 1016,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "State",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1803,
                              "src": "6225:29:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_State_$1803_$",
                                "typeString": "type(enum OptimisticQueueStateLib.State)"
                              }
                            },
                            "id": 1017,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Executed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "6225:38:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$1803",
                              "typeString": "enum OptimisticQueueStateLib.State"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_State_$1803",
                              "typeString": "enum OptimisticQueueStateLib.State"
                            },
                            {
                              "typeIdentifier": "t_enum$_State_$1803",
                              "typeString": "enum OptimisticQueueStateLib.State"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1008,
                              "name": "queue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 503,
                              "src": "6122:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Item_$1806_storage_$",
                                "typeString": "mapping(bytes32 => struct OptimisticQueueStateLib.Item storage ref)"
                              }
                            },
                            "id": 1010,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1009,
                              "name": "containerHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1003,
                              "src": "6128:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6122:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Item_$1806_storage",
                              "typeString": "struct OptimisticQueueStateLib.Item storage ref"
                            }
                          },
                          "id": 1011,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "checkAndSetState",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1856,
                          "src": "6122:37:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Item_$1806_storage_ptr_$_t_enum$_State_$1803_$_t_enum$_State_$1803_$returns$__$bound_to$_t_struct$_Item_$1806_storage_ptr_$",
                            "typeString": "function (struct OptimisticQueueStateLib.Item storage pointer,enum OptimisticQueueStateLib.State,enum OptimisticQueueStateLib.State)"
                          }
                        },
                        "id": 1018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6122:151:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1019,
                      "nodeType": "ExpressionStatement",
                      "src": "6122:151:3"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1027,
                                "name": "_container",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 996,
                                "src": "6328:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Container_$2254_memory_ptr",
                                  "typeString": "struct ERC3000Data.Container memory"
                                }
                              },
                              "id": 1028,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "payload",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2251,
                              "src": "6328:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Payload_$2268_memory_ptr",
                                "typeString": "struct ERC3000Data.Payload memory"
                              }
                            },
                            "id": 1029,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "submitter",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2260,
                            "src": "6328:28:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1020,
                                "name": "_container",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 996,
                                "src": "6284:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Container_$2254_memory_ptr",
                                  "typeString": "struct ERC3000Data.Container memory"
                                }
                              },
                              "id": 1024,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "config",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2253,
                              "src": "6284:17:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Config_$2288_memory_ptr",
                                "typeString": "struct ERC3000Data.Config memory"
                              }
                            },
                            "id": 1025,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "scheduleDeposit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2279,
                            "src": "6284:33:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Collateral_$2293_memory_ptr",
                              "typeString": "struct ERC3000Data.Collateral memory"
                            }
                          },
                          "id": 1026,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "releaseTo",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1357,
                          "src": "6284:43:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Collateral_$2293_memory_ptr_$_t_address_$returns$__$bound_to$_t_struct$_Collateral_$2293_memory_ptr_$",
                            "typeString": "function (struct ERC3000Data.Collateral memory,address)"
                          }
                        },
                        "id": 1030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6284:73:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1031,
                      "nodeType": "ExpressionStatement",
                      "src": "6284:73:3"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1039,
                                "name": "_container",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 996,
                                "src": "6412:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Container_$2254_memory_ptr",
                                  "typeString": "struct ERC3000Data.Container memory"
                                }
                              },
                              "id": 1040,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "payload",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2251,
                              "src": "6412:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Payload_$2268_memory_ptr",
                                "typeString": "struct ERC3000Data.Payload memory"
                              }
                            },
                            "id": 1041,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "submitter",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2260,
                            "src": "6412:28:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1032,
                                "name": "_container",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 996,
                                "src": "6367:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Container_$2254_memory_ptr",
                                  "typeString": "struct ERC3000Data.Container memory"
                                }
                              },
                              "id": 1036,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "config",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2253,
                              "src": "6367:17:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Config_$2288_memory_ptr",
                                "typeString": "struct ERC3000Data.Config memory"
                              }
                            },
                            "id": 1037,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "challengeDeposit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2281,
                            "src": "6367:34:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Collateral_$2293_memory_ptr",
                              "typeString": "struct ERC3000Data.Collateral memory"
                            }
                          },
                          "id": 1038,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "releaseTo",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1357,
                          "src": "6367:44:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Collateral_$2293_memory_ptr_$_t_address_$returns$__$bound_to$_t_struct$_Collateral_$2293_memory_ptr_$",
                            "typeString": "function (struct ERC3000Data.Collateral memory,address)"
                          }
                        },
                        "id": 1042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6367:74:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1043,
                      "nodeType": "ExpressionStatement",
                      "src": "6367:74:3"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1045,
                              "name": "_container",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 996,
                              "src": "6468:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Container_$2254_memory_ptr",
                                "typeString": "struct ERC3000Data.Container memory"
                              }
                            },
                            "id": 1046,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "payload",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2251,
                            "src": "6468:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Payload_$2268_memory_ptr",
                              "typeString": "struct ERC3000Data.Payload memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1047,
                            "name": "containerHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1003,
                            "src": "6488:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Payload_$2268_memory_ptr",
                              "typeString": "struct ERC3000Data.Payload memory"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 1044,
                          "name": "_execute",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1230,
                          "src": "6459:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Payload_$2268_memory_ptr_$_t_bytes32_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (struct ERC3000Data.Payload memory,bytes32) returns (bytes memory[] memory)"
                          }
                        },
                        "id": 1048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6459:43:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "functionReturnParameters": 1001,
                      "id": 1049,
                      "nodeType": "Return",
                      "src": "6452:50:3"
                    }
                  ]
                },
                "documentation": null,
                "functionSelector": "869cb6b5",
                "id": 1051,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "executeApproved",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 997,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 996,
                      "mutability": "mutable",
                      "name": "_container",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1051,
                      "src": "5976:39:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Container_$2254_memory_ptr",
                        "typeString": "struct ERC3000Data.Container"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 995,
                        "name": "ERC3000Data.Container",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2254,
                        "src": "5976:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Container_$2254_storage_ptr",
                          "typeString": "struct ERC3000Data.Container"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "5975:41:3"
                },
                "returnParameters": {
                  "id": 1001,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1000,
                      "mutability": "mutable",
                      "name": "execResults",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1051,
                      "src": "6033:26:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 998,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6033:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 999,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "6033:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "6032:28:3"
                },
                "scope": 1254,
                "src": "5951:558:3",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 1109,
                  "nodeType": "Block",
                  "src": "6588:507:3",
                  "statements": [
                    {
                      "assignments": [
                        1057
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1057,
                          "mutability": "mutable",
                          "name": "containerHash",
                          "nodeType": "VariableDeclaration",
                          "overrides": null,
                          "scope": 1109,
                          "src": "6598:21:3",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 1056,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "6598:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 1061,
                      "initialValue": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1058,
                            "name": "_container",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1053,
                            "src": "6622:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Container_$2254_memory_ptr",
                              "typeString": "struct ERC3000Data.Container memory"
                            }
                          },
                          "id": 1059,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hash",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2332,
                          "src": "6622:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Container_$2254_memory_ptr_$returns$_t_bytes32_$bound_to$_t_struct$_Container_$2254_memory_ptr_$",
                            "typeString": "function (struct ERC3000Data.Container memory) view returns (bytes32)"
                          }
                        },
                        "id": 1060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6622:17:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "6598:41:3"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1066,
                                "name": "OptimisticQueueStateLib",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1857,
                                "src": "6700:23:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_OptimisticQueueStateLib_$1857_$",
                                  "typeString": "type(library OptimisticQueueStateLib)"
                                }
                              },
                              "id": 1067,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "State",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1803,
                              "src": "6700:29:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_State_$1803_$",
                                "typeString": "type(enum OptimisticQueueStateLib.State)"
                              }
                            },
                            "id": 1068,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Rejected",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "6700:38:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$1803",
                              "typeString": "enum OptimisticQueueStateLib.State"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1069,
                                "name": "OptimisticQueueStateLib",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1857,
                                "src": "6752:23:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_OptimisticQueueStateLib_$1857_$",
                                  "typeString": "type(library OptimisticQueueStateLib)"
                                }
                              },
                              "id": 1070,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "State",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1803,
                              "src": "6752:29:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_State_$1803_$",
                                "typeString": "type(enum OptimisticQueueStateLib.State)"
                              }
                            },
                            "id": 1071,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Cancelled",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "6752:39:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$1803",
                              "typeString": "enum OptimisticQueueStateLib.State"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_State_$1803",
                              "typeString": "enum OptimisticQueueStateLib.State"
                            },
                            {
                              "typeIdentifier": "t_enum$_State_$1803",
                              "typeString": "enum OptimisticQueueStateLib.State"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1062,
                              "name": "queue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 503,
                              "src": "6649:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Item_$1806_storage_$",
                                "typeString": "mapping(bytes32 => struct OptimisticQueueStateLib.Item storage ref)"
                              }
                            },
                            "id": 1064,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1063,
                              "name": "containerHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1057,
                              "src": "6655:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6649:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Item_$1806_storage",
                              "typeString": "struct OptimisticQueueStateLib.Item storage ref"
                            }
                          },
                          "id": 1065,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "checkAndSetState",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1856,
                          "src": "6649:37:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Item_$1806_storage_ptr_$_t_enum$_State_$1803_$_t_enum$_State_$1803_$returns$__$bound_to$_t_struct$_Item_$1806_storage_ptr_$",
                            "typeString": "function (struct OptimisticQueueStateLib.Item storage pointer,enum OptimisticQueueStateLib.State,enum OptimisticQueueStateLib.State)"
                          }
                        },
                        "id": 1072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6649:152:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1073,
                      "nodeType": "ExpressionStatement",
                      "src": "6649:152:3"
                    },
                    {
                      "assignments": [
                        1075
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1075,
                          "mutability": "mutable",
                          "name": "challenger",
                          "nodeType": "VariableDeclaration",
                          "overrides": null,
                          "scope": 1109,
                          "src": "6812:18:3",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 1074,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6812:7:3",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 1079,
                      "initialValue": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1076,
                          "name": "challengerCache",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 507,
                          "src": "6833:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                            "typeString": "mapping(bytes32 => address)"
                          }
                        },
                        "id": 1078,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1077,
                          "name": "containerHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1057,
                          "src": "6849:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6833:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "6812:51:3"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1087,
                            "name": "challenger",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1075,
                            "src": "6917:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1080,
                                "name": "_container",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1053,
                                "src": "6873:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Container_$2254_memory_ptr",
                                  "typeString": "struct ERC3000Data.Container memory"
                                }
                              },
                              "id": 1084,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "config",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2253,
                              "src": "6873:17:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Config_$2288_memory_ptr",
                                "typeString": "struct ERC3000Data.Config memory"
                              }
                            },
                            "id": 1085,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "scheduleDeposit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2279,
                            "src": "6873:33:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Collateral_$2293_memory_ptr",
                              "typeString": "struct ERC3000Data.Collateral memory"
                            }
                          },
                          "id": 1086,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "releaseTo",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1357,
                          "src": "6873:43:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Collateral_$2293_memory_ptr_$_t_address_$returns$__$bound_to$_t_struct$_Collateral_$2293_memory_ptr_$",
                            "typeString": "function (struct ERC3000Data.Collateral memory,address)"
                          }
                        },
                        "id": 1088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6873:55:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1089,
                      "nodeType": "ExpressionStatement",
                      "src": "6873:55:3"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1097,
                            "name": "challenger",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1075,
                            "src": "6983:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1090,
                                "name": "_container",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1053,
                                "src": "6938:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Container_$2254_memory_ptr",
                                  "typeString": "struct ERC3000Data.Container memory"
                                }
                              },
                              "id": 1094,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "config",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2253,
                              "src": "6938:17:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Config_$2288_memory_ptr",
                                "typeString": "struct ERC3000Data.Config memory"
                              }
                            },
                            "id": 1095,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "challengeDeposit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2281,
                            "src": "6938:34:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Collateral_$2293_memory_ptr",
                              "typeString": "struct ERC3000Data.Collateral memory"
                            }
                          },
                          "id": 1096,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "releaseTo",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1357,
                          "src": "6938:44:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Collateral_$2293_memory_ptr_$_t_address_$returns$__$bound_to$_t_struct$_Collateral_$2293_memory_ptr_$",
                            "typeString": "function (struct ERC3000Data.Collateral memory,address)"
                          }
                        },
                        "id": 1098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6938:56:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1099,
                      "nodeType": "ExpressionStatement",
                      "src": "6938:56:3"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 1107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1100,
                            "name": "challengerCache",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 507,
                            "src": "7004:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                              "typeString": "mapping(bytes32 => address)"
                            }
                          },
                          "id": 1102,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1101,
                            "name": "containerHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1057,
                            "src": "7020:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "7004:30:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1105,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7045:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1104,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7037:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1103,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7037:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 1106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7037:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "7004:43:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1108,
                      "nodeType": "ExpressionStatement",
                      "src": "7004:43:3"
                    }
                  ]
                },
                "documentation": null,
                "functionSelector": "5c44c0a7",
                "id": 1110,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "settleRejection",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 1054,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1053,
                      "mutability": "mutable",
                      "name": "_container",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1110,
                      "src": "6540:39:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Container_$2254_memory_ptr",
                        "typeString": "struct ERC3000Data.Container"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1052,
                        "name": "ERC3000Data.Container",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2254,
                        "src": "6540:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Container_$2254_storage_ptr",
                          "typeString": "struct ERC3000Data.Container"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "6539:41:3"
                },
                "returnParameters": {
                  "id": 1055,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "6588:0:3"
                },
                "scope": 1254,
                "src": "6515:580:3",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "public"
              },
              {
                "baseFunctions": [
                  1410
                ],
                "body": {
                  "id": 1169,
                  "nodeType": "Block",
                  "src": "7188:527:3",
                  "statements": [
                    {
                      "assignments": [
                        1119
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1119,
                          "mutability": "mutable",
                          "name": "arbitrator",
                          "nodeType": "VariableDeclaration",
                          "overrides": null,
                          "scope": 1169,
                          "src": "7198:22:3",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IArbitrator_$1459",
                            "typeString": "contract IArbitrator"
                          },
                          "typeName": {
                            "contractScope": null,
                            "id": 1118,
                            "name": "IArbitrator",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 1459,
                            "src": "7198:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IArbitrator_$1459",
                              "typeString": "contract IArbitrator"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 1124,
                      "initialValue": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1121,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "7235:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "7235:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 1120,
                          "name": "IArbitrator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1459,
                          "src": "7223:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IArbitrator_$1459_$",
                            "typeString": "type(contract IArbitrator)"
                          }
                        },
                        "id": 1123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7223:23:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IArbitrator_$1459",
                          "typeString": "contract IArbitrator"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "7198:48:3"
                    },
                    {
                      "assignments": [
                        1126
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1126,
                          "mutability": "mutable",
                          "name": "containerHash",
                          "nodeType": "VariableDeclaration",
                          "overrides": null,
                          "scope": 1169,
                          "src": "7256:21:3",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 1125,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "7256:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 1132,
                      "initialValue": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1127,
                            "name": "disputeItemCache",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 513,
                            "src": "7280:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_contract$_IArbitrator_$1459_$_t_mapping$_t_uint256_$_t_bytes32_$_$",
                              "typeString": "mapping(contract IArbitrator => mapping(uint256 => bytes32))"
                            }
                          },
                          "id": 1129,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1128,
                            "name": "arbitrator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1119,
                            "src": "7297:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IArbitrator_$1459",
                              "typeString": "contract IArbitrator"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7280:28:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                            "typeString": "mapping(uint256 => bytes32)"
                          }
                        },
                        "id": 1131,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1130,
                          "name": "_disputeId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1112,
                          "src": "7309:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7280:40:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "7256:64:3"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1137,
                                "name": "OptimisticQueueStateLib",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1857,
                                "src": "7381:23:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_OptimisticQueueStateLib_$1857_$",
                                  "typeString": "type(library OptimisticQueueStateLib)"
                                }
                              },
                              "id": 1138,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "State",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1803,
                              "src": "7381:29:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_State_$1803_$",
                                "typeString": "type(enum OptimisticQueueStateLib.State)"
                              }
                            },
                            "id": 1139,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Challenged",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "7381:40:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$1803",
                              "typeString": "enum OptimisticQueueStateLib.State"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "condition": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1142,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 1140,
                                "name": "_ruling",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1114,
                                "src": "7435:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1141,
                                "name": "ALLOW_RULING",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1370,
                                "src": "7446:12:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7435:23:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1146,
                                  "name": "OptimisticQueueStateLib",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1857,
                                  "src": "7502:23:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_OptimisticQueueStateLib_$1857_$",
                                    "typeString": "type(library OptimisticQueueStateLib)"
                                  }
                                },
                                "id": 1147,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "State",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1803,
                                "src": "7502:29:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_State_$1803_$",
                                  "typeString": "type(enum OptimisticQueueStateLib.State)"
                                }
                              },
                              "id": 1148,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Rejected",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "7502:38:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_State_$1803",
                                "typeString": "enum OptimisticQueueStateLib.State"
                              }
                            },
                            "id": 1149,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "Conditional",
                            "src": "7435:105:3",
                            "trueExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1143,
                                  "name": "OptimisticQueueStateLib",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1857,
                                  "src": "7461:23:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_OptimisticQueueStateLib_$1857_$",
                                    "typeString": "type(library OptimisticQueueStateLib)"
                                  }
                                },
                                "id": 1144,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "State",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1803,
                                "src": "7461:29:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_State_$1803_$",
                                  "typeString": "type(enum OptimisticQueueStateLib.State)"
                                }
                              },
                              "id": 1145,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Approved",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "7461:38:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_State_$1803",
                                "typeString": "enum OptimisticQueueStateLib.State"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$1803",
                              "typeString": "enum OptimisticQueueStateLib.State"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_State_$1803",
                              "typeString": "enum OptimisticQueueStateLib.State"
                            },
                            {
                              "typeIdentifier": "t_enum$_State_$1803",
                              "typeString": "enum OptimisticQueueStateLib.State"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1133,
                              "name": "queue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 503,
                              "src": "7330:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Item_$1806_storage_$",
                                "typeString": "mapping(bytes32 => struct OptimisticQueueStateLib.Item storage ref)"
                              }
                            },
                            "id": 1135,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1134,
                              "name": "containerHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1126,
                              "src": "7336:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7330:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Item_$1806_storage",
                              "typeString": "struct OptimisticQueueStateLib.Item storage ref"
                            }
                          },
                          "id": 1136,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "checkAndSetState",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1856,
                          "src": "7330:37:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Item_$1806_storage_ptr_$_t_enum$_State_$1803_$_t_enum$_State_$1803_$returns$__$bound_to$_t_struct$_Item_$1806_storage_ptr_$",
                            "typeString": "function (struct OptimisticQueueStateLib.Item storage pointer,enum OptimisticQueueStateLib.State,enum OptimisticQueueStateLib.State)"
                          }
                        },
                        "id": 1150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7330:220:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1151,
                      "nodeType": "ExpressionStatement",
                      "src": "7330:220:3"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 1161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1152,
                              "name": "disputeItemCache",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 513,
                              "src": "7560:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_IArbitrator_$1459_$_t_mapping$_t_uint256_$_t_bytes32_$_$",
                                "typeString": "mapping(contract IArbitrator => mapping(uint256 => bytes32))"
                              }
                            },
                            "id": 1155,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1153,
                              "name": "arbitrator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1119,
                              "src": "7577:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IArbitrator_$1459",
                                "typeString": "contract IArbitrator"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7560:28:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                              "typeString": "mapping(uint256 => bytes32)"
                            }
                          },
                          "id": 1156,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1154,
                            "name": "_disputeId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1112,
                            "src": "7589:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "7560:40:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1159,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7611:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1158,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7603:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 1157,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "7603:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 1160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7603:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "7560:53:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 1162,
                      "nodeType": "ExpressionStatement",
                      "src": "7560:53:3"
                    },
                    {
                      "eventCall": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1164,
                            "name": "arbitrator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1119,
                            "src": "7676:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IArbitrator_$1459",
                              "typeString": "contract IArbitrator"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1165,
                            "name": "_disputeId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1112,
                            "src": "7688:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1166,
                            "name": "_ruling",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1114,
                            "src": "7700:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IArbitrator_$1459",
                              "typeString": "contract IArbitrator"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1163,
                          "name": "Ruled",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1379,
                          "src": "7670:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_contract$_IArbitrator_$1459_$_t_uint256_$_t_uint256_$returns$__$",
                            "typeString": "function (contract IArbitrator,uint256,uint256)"
                          }
                        },
                        "id": 1167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7670:38:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1168,
                      "nodeType": "EmitStatement",
                      "src": "7665:43:3"
                    }
                  ]
                },
                "documentation": null,
                "functionSelector": "311a6c56",
                "id": 1170,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "rule",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 1116,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "7170:8:3"
                },
                "parameters": {
                  "id": 1115,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1112,
                      "mutability": "mutable",
                      "name": "_disputeId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1170,
                      "src": "7133:18:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1111,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7133:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1114,
                      "mutability": "mutable",
                      "name": "_ruling",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1170,
                      "src": "7153:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1113,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7153:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "7132:37:3"
                },
                "returnParameters": {
                  "id": 1117,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "7188:0:3"
                },
                "scope": 1254,
                "src": "7119:596:3",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "baseFunctions": [
                  1402
                ],
                "body": {
                  "id": 1184,
                  "nodeType": "Block",
                  "src": "7824:42:3",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "71756575653a2065766964656e6365",
                            "id": 1181,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7841:17:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_6ad29d0197657ffded88278e97272386c9b49b6230b2045eb8683f980a7218b3",
                              "typeString": "literal_string \"queue: evidence\""
                            },
                            "value": "queue: evidence"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_6ad29d0197657ffded88278e97272386c9b49b6230b2045eb8683f980a7218b3",
                              "typeString": "literal_string \"queue: evidence\""
                            }
                          ],
                          "id": 1180,
                          "name": "revert",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -19,
                            -19
                          ],
                          "referencedDeclaration": -19,
                          "src": "7834:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (string memory) pure"
                          }
                        },
                        "id": 1182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7834:25:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1183,
                      "nodeType": "ExpressionStatement",
                      "src": "7834:25:3"
                    }
                  ]
                },
                "documentation": null,
                "functionSelector": "b9e9823f",
                "id": 1185,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "submitEvidence",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 1178,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "7815:8:3"
                },
                "parameters": {
                  "id": 1177,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1172,
                      "mutability": "mutable",
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1185,
                      "src": "7754:7:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1171,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7754:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1174,
                      "mutability": "mutable",
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1185,
                      "src": "7771:14:3",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1173,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7771:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1176,
                      "mutability": "mutable",
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1185,
                      "src": "7795:4:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1175,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7795:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "7744:61:3"
                },
                "returnParameters": {
                  "id": 1179,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "7824:0:3"
                },
                "scope": 1254,
                "src": "7721:145:3",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "baseFunctions": [
                  2244
                ],
                "body": {
                  "id": 1202,
                  "nodeType": "Block",
                  "src": "7972:104:3",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 1195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1193,
                            "name": "_interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1187,
                            "src": "7989:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1194,
                            "name": "ARBITRABLE_INTERFACE_ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1367,
                            "src": "8005:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "7989:39:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1198,
                              "name": "_interfaceId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1187,
                              "src": "8056:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1196,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -25,
                              "src": "8032:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_super$_OptimisticQueue_$1254",
                                "typeString": "contract super OptimisticQueue"
                              }
                            },
                            "id": 1197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "supportsInterface",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2244,
                            "src": "8032:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$_t_bool_$",
                              "typeString": "function (bytes4) pure returns (bool)"
                            }
                          },
                          "id": 1199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8032:37:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7989:80:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "functionReturnParameters": 1192,
                      "id": 1201,
                      "nodeType": "Return",
                      "src": "7982:87:3"
                    }
                  ]
                },
                "documentation": null,
                "functionSelector": "01ffc9a7",
                "id": 1203,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "supportsInterface",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 1189,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "7936:8:3"
                },
                "parameters": {
                  "id": 1188,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1187,
                      "mutability": "mutable",
                      "name": "_interfaceId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1203,
                      "src": "7915:19:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 1186,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "7915:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "7914:21:3"
                },
                "returnParameters": {
                  "id": 1192,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1191,
                      "mutability": "mutable",
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1203,
                      "src": "7966:4:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1190,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7966:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "7965:6:3"
                },
                "scope": 1254,
                "src": "7888:188:3",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 1229,
                  "nodeType": "Block",
                  "src": "8224:135:3",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 1220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 1213,
                          "name": "execResults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1211,
                          "src": "8234:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                            "typeString": "bytes memory[] memory"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1217,
                                "name": "_payload",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1205,
                                "src": "8271:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Payload_$2268_memory_ptr",
                                  "typeString": "struct ERC3000Data.Payload memory"
                                }
                              },
                              "id": 1218,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "actions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2265,
                              "src": "8271:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Action_$2275_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct ERC3000Data.Action memory[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_struct$_Action_$2275_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct ERC3000Data.Action memory[] memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1214,
                                "name": "_payload",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1205,
                                "src": "8248:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Payload_$2268_memory_ptr",
                                  "typeString": "struct ERC3000Data.Payload memory"
                                }
                              },
                              "id": 1215,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "executor",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2262,
                              "src": "8248:17:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC3000Executor_$2547",
                                "typeString": "contract IERC3000Executor"
                              }
                            },
                            "id": 1216,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exec",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2536,
                            "src": "8248:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_struct$_Action_$2275_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (struct ERC3000Data.Action memory[] memory) external returns (bytes memory[] memory)"
                            }
                          },
                          "id": 1219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8248:40:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                            "typeString": "bytes memory[] memory"
                          }
                        },
                        "src": "8234:54:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 1221,
                      "nodeType": "ExpressionStatement",
                      "src": "8234:54:3"
                    },
                    {
                      "eventCall": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1223,
                            "name": "_containerHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1207,
                            "src": "8312:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1224,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "8328:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1225,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "8328:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1226,
                            "name": "execResults",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1211,
                            "src": "8340:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                              "typeString": "bytes memory[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                              "typeString": "bytes memory[] memory"
                            }
                          ],
                          "id": 1222,
                          "name": "Executed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2449,
                          "src": "8303:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$__$",
                            "typeString": "function (bytes32,address,bytes memory[] memory)"
                          }
                        },
                        "id": 1227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8303:49:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1228,
                      "nodeType": "EmitStatement",
                      "src": "8298:54:3"
                    }
                  ]
                },
                "documentation": null,
                "id": 1230,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_execute",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 1208,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1205,
                      "mutability": "mutable",
                      "name": "_payload",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1230,
                      "src": "8117:35:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Payload_$2268_memory_ptr",
                        "typeString": "struct ERC3000Data.Payload"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1204,
                        "name": "ERC3000Data.Payload",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2268,
                        "src": "8117:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Payload_$2268_storage_ptr",
                          "typeString": "struct ERC3000Data.Payload"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1207,
                      "mutability": "mutable",
                      "name": "_containerHash",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1230,
                      "src": "8154:22:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1206,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8154:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "8116:61:3"
                },
                "returnParameters": {
                  "id": 1212,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1211,
                      "mutability": "mutable",
                      "name": "execResults",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1230,
                      "src": "8196:26:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1209,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "8196:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 1210,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "8196:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "8195:28:3"
                },
                "scope": 1254,
                "src": "8099:260:3",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1252,
                  "nodeType": "Block",
                  "src": "8467:131:3",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 1241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 1237,
                          "name": "configHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 497,
                          "src": "8477:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1238,
                              "name": "_config",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1232,
                              "src": "8490:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Config_$2288_memory_ptr",
                                "typeString": "struct ERC3000Data.Config memory"
                              }
                            },
                            "id": 1239,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "hash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2378,
                            "src": "8490:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Config_$2288_memory_ptr_$returns$_t_bytes32_$bound_to$_t_struct$_Config_$2288_memory_ptr_$",
                              "typeString": "function (struct ERC3000Data.Config memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8490:14:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "8477:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 1242,
                      "nodeType": "ExpressionStatement",
                      "src": "8477:27:3"
                    },
                    {
                      "eventCall": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1244,
                            "name": "configHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 497,
                            "src": "8531:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1245,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "8543:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "8543:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1247,
                            "name": "_config",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1232,
                            "src": "8555:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Config_$2288_memory_ptr",
                              "typeString": "struct ERC3000Data.Config memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_struct$_Config_$2288_memory_ptr",
                              "typeString": "struct ERC3000Data.Config memory"
                            }
                          ],
                          "id": 1243,
                          "name": "Configured",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2522,
                          "src": "8520:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_struct$_Config_$2288_memory_ptr_$returns$__$",
                            "typeString": "function (bytes32,address,struct ERC3000Data.Config memory)"
                          }
                        },
                        "id": 1248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8520:43:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1249,
                      "nodeType": "EmitStatement",
                      "src": "8515:48:3"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 1250,
                        "name": "configHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 497,
                        "src": "8581:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "functionReturnParameters": 1236,
                      "id": 1251,
                      "nodeType": "Return",
                      "src": "8574:17:3"
                    }
                  ]
                },
                "documentation": null,
                "id": 1253,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_setConfig",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 1233,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1232,
                      "mutability": "mutable",
                      "name": "_config",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1253,
                      "src": "8385:33:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Config_$2288_memory_ptr",
                        "typeString": "struct ERC3000Data.Config"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1231,
                        "name": "ERC3000Data.Config",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2288,
                        "src": "8385:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$2288_storage_ptr",
                          "typeString": "struct ERC3000Data.Config"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "8384:35:3"
                },
                "returnParameters": {
                  "id": 1236,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1235,
                      "mutability": "mutable",
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1253,
                      "src": "8454:7:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1234,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8454:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "8453:9:3"
                },
                "scope": 1254,
                "src": "8365:233:3",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              }
            ],
            "scope": 1255,
            "src": "310:8290:3"
          }
        ],
        "src": "47:8554:3"
      },
      "id": 3
    },
    "contracts/lib/DepositLib.sol": {
      "ast": {
        "absolutePath": "contracts/lib/DepositLib.sol",
        "exportedSymbols": {
          "DepositLib": [
            1358
          ]
        },
        "id": 1359,
        "license": "GPL-3.0",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1256,
            "literals": [
              "solidity",
              "0.6",
              ".8"
            ],
            "nodeType": "PragmaDirective",
            "src": "47:22:4"
          },
          {
            "absolutePath": "erc3k/contracts/ERC3000Data.sol",
            "file": "erc3k/contracts/ERC3000Data.sol",
            "id": 1257,
            "nodeType": "ImportDirective",
            "scope": 1359,
            "sourceUnit": 2380,
            "src": "71:41:4",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "absolutePath": "contracts/lib/SafeERC20.sol",
            "file": "./SafeERC20.sol",
            "id": 1258,
            "nodeType": "ImportDirective",
            "scope": 1359,
            "sourceUnit": 2193,
            "src": "114:25:4",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "abstract": false,
            "baseContracts": [],
            "contractDependencies": [],
            "contractKind": "library",
            "documentation": null,
            "fullyImplemented": true,
            "id": 1358,
            "linearizedBaseContracts": [
              1358
            ],
            "name": "DepositLib",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "id": 1261,
                "libraryName": {
                  "contractScope": null,
                  "id": 1259,
                  "name": "SafeERC20",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 2192,
                  "src": "172:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SafeERC20_$2192",
                    "typeString": "library SafeERC20"
                  }
                },
                "nodeType": "UsingForDirective",
                "src": "166:26:4",
                "typeName": {
                  "contractScope": null,
                  "id": 1260,
                  "name": "ERC20",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1927,
                  "src": "186:5:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$1927",
                    "typeString": "contract ERC20"
                  }
                }
              },
              {
                "anonymous": false,
                "documentation": null,
                "id": 1269,
                "name": "Collected",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 1268,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1263,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1269,
                      "src": "214:21:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1262,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "214:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1265,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "from",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1269,
                      "src": "237:20:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1264,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "237:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1267,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1269,
                      "src": "259:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1266,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "259:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "213:61:4"
                },
                "src": "198:77:4"
              },
              {
                "anonymous": false,
                "documentation": null,
                "id": 1277,
                "name": "Released",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 1276,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1271,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1277,
                      "src": "295:21:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1270,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "295:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1273,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "to",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1277,
                      "src": "318:18:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1272,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "318:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1275,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1277,
                      "src": "338:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1274,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "338:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "294:59:4"
                },
                "src": "280:74:4"
              },
              {
                "body": {
                  "id": 1317,
                  "nodeType": "Block",
                  "src": "448:290:4",
                  "statements": [
                    {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1284,
                            "name": "_collateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1279,
                            "src": "462:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Collateral_$2293_memory_ptr",
                              "typeString": "struct ERC3000Data.Collateral memory"
                            }
                          },
                          "id": 1285,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2292,
                          "src": "462:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "483:1:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "462:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": null,
                      "id": 1316,
                      "nodeType": "IfStatement",
                      "src": "458:274:4",
                      "trueBody": {
                        "id": 1315,
                        "nodeType": "Block",
                        "src": "486:246:4",
                        "statements": [
                          {
                            "assignments": [
                              1289
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 1289,
                                "mutability": "mutable",
                                "name": "token",
                                "nodeType": "VariableDeclaration",
                                "overrides": null,
                                "scope": 1315,
                                "src": "500:11:4",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$1927",
                                  "typeString": "contract ERC20"
                                },
                                "typeName": {
                                  "contractScope": null,
                                  "id": 1288,
                                  "name": "ERC20",
                                  "nodeType": "UserDefinedTypeName",
                                  "referencedDeclaration": 1927,
                                  "src": "500:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$1927",
                                    "typeString": "contract ERC20"
                                  }
                                },
                                "value": null,
                                "visibility": "internal"
                              }
                            ],
                            "id": 1294,
                            "initialValue": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1291,
                                    "name": "_collateral",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1279,
                                    "src": "520:11:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Collateral_$2293_memory_ptr",
                                      "typeString": "struct ERC3000Data.Collateral memory"
                                    }
                                  },
                                  "id": 1292,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "token",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2290,
                                  "src": "520:17:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1290,
                                "name": "ERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1927,
                                "src": "514:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC20_$1927_$",
                                  "typeString": "type(contract ERC20)"
                                }
                              },
                              "id": 1293,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "514:24:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$1927",
                                "typeString": "contract ERC20"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "500:38:4"
                          },
                          {
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 1298,
                                      "name": "_from",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1281,
                                      "src": "583:5:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 1299,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "590:3:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 1300,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "590:10:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 1301,
                                        "name": "_collateral",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1279,
                                        "src": "602:11:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Collateral_$2293_memory_ptr",
                                          "typeString": "struct ERC3000Data.Collateral memory"
                                        }
                                      },
                                      "id": 1302,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "amount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2292,
                                      "src": "602:18:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1296,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1289,
                                      "src": "560:5:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ERC20_$1927",
                                        "typeString": "contract ERC20"
                                      }
                                    },
                                    "id": 1297,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "safeTransferFrom",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2039,
                                    "src": "560:22:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$1927_$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$bound_to$_t_contract$_ERC20_$1927_$",
                                      "typeString": "function (contract ERC20,address,address,uint256) returns (bool)"
                                    }
                                  },
                                  "id": 1303,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "560:61:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "hexValue": "71756575653a206261642067657420746f6b656e",
                                  "id": 1304,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "623:22:4",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_def684386e7103bdd33a58eaf9a658d24d7a4b873a9bc90c30a7a3abc393ca74",
                                    "typeString": "literal_string \"queue: bad get token\""
                                  },
                                  "value": "queue: bad get token"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_def684386e7103bdd33a58eaf9a658d24d7a4b873a9bc90c30a7a3abc393ca74",
                                    "typeString": "literal_string \"queue: bad get token\""
                                  }
                                ],
                                "id": 1295,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -18,
                                  -18
                                ],
                                "referencedDeclaration": -18,
                                "src": "552:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 1305,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "552:94:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1306,
                            "nodeType": "ExpressionStatement",
                            "src": "552:94:4"
                          },
                          {
                            "eventCall": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1308,
                                    "name": "_collateral",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1279,
                                    "src": "676:11:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Collateral_$2293_memory_ptr",
                                      "typeString": "struct ERC3000Data.Collateral memory"
                                    }
                                  },
                                  "id": 1309,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "token",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2290,
                                  "src": "676:17:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 1310,
                                  "name": "_from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1281,
                                  "src": "695:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1311,
                                    "name": "_collateral",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1279,
                                    "src": "702:11:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Collateral_$2293_memory_ptr",
                                      "typeString": "struct ERC3000Data.Collateral memory"
                                    }
                                  },
                                  "id": 1312,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "amount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2292,
                                  "src": "702:18:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1307,
                                "name": "Collected",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1269,
                                "src": "666:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,address,uint256)"
                                }
                              },
                              "id": 1313,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "666:55:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1314,
                            "nodeType": "EmitStatement",
                            "src": "661:60:4"
                          }
                        ]
                      }
                    }
                  ]
                },
                "documentation": null,
                "id": 1318,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "collectFrom",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 1282,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1279,
                      "mutability": "mutable",
                      "name": "_collateral",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1318,
                      "src": "381:41:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Collateral_$2293_memory_ptr",
                        "typeString": "struct ERC3000Data.Collateral"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1278,
                        "name": "ERC3000Data.Collateral",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2293,
                        "src": "381:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Collateral_$2293_storage_ptr",
                          "typeString": "struct ERC3000Data.Collateral"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1281,
                      "mutability": "mutable",
                      "name": "_from",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1318,
                      "src": "424:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1280,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "424:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "380:58:4"
                },
                "returnParameters": {
                  "id": 1283,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "448:0:4"
                },
                "scope": 1358,
                "src": "360:378:4",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1356,
                  "nodeType": "Block",
                  "src": "828:270:4",
                  "statements": [
                    {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1325,
                            "name": "_collateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1320,
                            "src": "842:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Collateral_$2293_memory_ptr",
                              "typeString": "struct ERC3000Data.Collateral memory"
                            }
                          },
                          "id": 1326,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2292,
                          "src": "842:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "863:1:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "842:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": null,
                      "id": 1355,
                      "nodeType": "IfStatement",
                      "src": "838:254:4",
                      "trueBody": {
                        "id": 1354,
                        "nodeType": "Block",
                        "src": "866:226:4",
                        "statements": [
                          {
                            "assignments": [
                              1330
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 1330,
                                "mutability": "mutable",
                                "name": "token",
                                "nodeType": "VariableDeclaration",
                                "overrides": null,
                                "scope": 1354,
                                "src": "880:11:4",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$1927",
                                  "typeString": "contract ERC20"
                                },
                                "typeName": {
                                  "contractScope": null,
                                  "id": 1329,
                                  "name": "ERC20",
                                  "nodeType": "UserDefinedTypeName",
                                  "referencedDeclaration": 1927,
                                  "src": "880:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$1927",
                                    "typeString": "contract ERC20"
                                  }
                                },
                                "value": null,
                                "visibility": "internal"
                              }
                            ],
                            "id": 1335,
                            "initialValue": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1332,
                                    "name": "_collateral",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1320,
                                    "src": "900:11:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Collateral_$2293_memory_ptr",
                                      "typeString": "struct ERC3000Data.Collateral memory"
                                    }
                                  },
                                  "id": 1333,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "token",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2290,
                                  "src": "900:17:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1331,
                                "name": "ERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1927,
                                "src": "894:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC20_$1927_$",
                                  "typeString": "type(contract ERC20)"
                                }
                              },
                              "id": 1334,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "894:24:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$1927",
                                "typeString": "contract ERC20"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "880:38:4"
                          },
                          {
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 1339,
                                      "name": "_to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1322,
                                      "src": "959:3:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 1340,
                                        "name": "_collateral",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1320,
                                        "src": "964:11:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Collateral_$2293_memory_ptr",
                                          "typeString": "struct ERC3000Data.Collateral memory"
                                        }
                                      },
                                      "id": 1341,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "amount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2292,
                                      "src": "964:18:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1337,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1330,
                                      "src": "940:5:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ERC20_$1927",
                                        "typeString": "contract ERC20"
                                      }
                                    },
                                    "id": 1338,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "safeTransfer",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2004,
                                    "src": "940:18:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$1927_$_t_address_$_t_uint256_$returns$_t_bool_$bound_to$_t_contract$_ERC20_$1927_$",
                                      "typeString": "function (contract ERC20,address,uint256) returns (bool)"
                                    }
                                  },
                                  "id": 1342,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "940:43:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "hexValue": "71756575653a206261642073656e6420746f6b656e",
                                  "id": 1343,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "985:23:4",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_96e1665afbf8d324ee254d596db53669a1d60b88d6887931fc066d1d8d18d3c3",
                                    "typeString": "literal_string \"queue: bad send token\""
                                  },
                                  "value": "queue: bad send token"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_96e1665afbf8d324ee254d596db53669a1d60b88d6887931fc066d1d8d18d3c3",
                                    "typeString": "literal_string \"queue: bad send token\""
                                  }
                                ],
                                "id": 1336,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -18,
                                  -18
                                ],
                                "referencedDeclaration": -18,
                                "src": "932:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 1344,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "932:77:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1345,
                            "nodeType": "ExpressionStatement",
                            "src": "932:77:4"
                          },
                          {
                            "eventCall": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1347,
                                    "name": "_collateral",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1320,
                                    "src": "1038:11:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Collateral_$2293_memory_ptr",
                                      "typeString": "struct ERC3000Data.Collateral memory"
                                    }
                                  },
                                  "id": 1348,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "token",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2290,
                                  "src": "1038:17:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 1349,
                                  "name": "_to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1322,
                                  "src": "1057:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1350,
                                    "name": "_collateral",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1320,
                                    "src": "1062:11:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Collateral_$2293_memory_ptr",
                                      "typeString": "struct ERC3000Data.Collateral memory"
                                    }
                                  },
                                  "id": 1351,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "amount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2292,
                                  "src": "1062:18:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1346,
                                "name": "Released",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1277,
                                "src": "1029:8:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,address,uint256)"
                                }
                              },
                              "id": 1352,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1029:52:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1353,
                            "nodeType": "EmitStatement",
                            "src": "1024:57:4"
                          }
                        ]
                      }
                    }
                  ]
                },
                "documentation": null,
                "id": 1357,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "releaseTo",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 1323,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1320,
                      "mutability": "mutable",
                      "name": "_collateral",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1357,
                      "src": "763:41:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Collateral_$2293_memory_ptr",
                        "typeString": "struct ERC3000Data.Collateral"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1319,
                        "name": "ERC3000Data.Collateral",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2293,
                        "src": "763:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Collateral_$2293_storage_ptr",
                          "typeString": "struct ERC3000Data.Collateral"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1322,
                      "mutability": "mutable",
                      "name": "_to",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1357,
                      "src": "806:11:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1321,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "806:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "762:56:4"
                },
                "returnParameters": {
                  "id": 1324,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "828:0:4"
                },
                "scope": 1358,
                "src": "744:354:4",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              }
            ],
            "scope": 1359,
            "src": "141:959:4"
          }
        ],
        "src": "47:1053:4"
      },
      "id": 4
    },
    "contracts/lib/IArbitrable.sol": {
      "ast": {
        "absolutePath": "contracts/lib/IArbitrable.sol",
        "exportedSymbols": {
          "IArbitrable": [
            1411
          ]
        },
        "id": 1412,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1360,
            "literals": [
              "solidity",
              "^",
              "0.6",
              ".8"
            ],
            "nodeType": "PragmaDirective",
            "src": "141:23:5"
          },
          {
            "absolutePath": "contracts/lib/IArbitrator.sol",
            "file": "./IArbitrator.sol",
            "id": 1361,
            "nodeType": "ImportDirective",
            "scope": 1412,
            "sourceUnit": 1460,
            "src": "166:27:5",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "abstract": true,
            "baseContracts": [],
            "contractDependencies": [],
            "contractKind": "contract",
            "documentation": null,
            "fullyImplemented": false,
            "id": 1411,
            "linearizedBaseContracts": [
              1411
            ],
            "name": "IArbitrable",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "constant": true,
                "id": 1367,
                "mutability": "constant",
                "name": "ARBITRABLE_INTERFACE_ID",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1411,
                "src": "231:69:5",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes4",
                  "typeString": "bytes4"
                },
                "typeName": {
                  "id": 1362,
                  "name": "bytes4",
                  "nodeType": "ElementaryTypeName",
                  "src": "231:6:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  }
                },
                "value": {
                  "argumentTypes": null,
                  "arguments": [
                    {
                      "argumentTypes": null,
                      "hexValue": "30783838663365653639",
                      "id": 1365,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "289:10:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2297687657_by_1",
                        "typeString": "int_const 2297687657"
                      },
                      "value": "0x88f3ee69"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_rational_2297687657_by_1",
                        "typeString": "int_const 2297687657"
                      }
                    ],
                    "id": 1364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "282:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_bytes4_$",
                      "typeString": "type(bytes4)"
                    },
                    "typeName": {
                      "id": 1363,
                      "name": "bytes4",
                      "nodeType": "ElementaryTypeName",
                      "src": "282:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      }
                    }
                  },
                  "id": 1366,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "282:18:5",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": true,
                "id": 1370,
                "mutability": "constant",
                "name": "ALLOW_RULING",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1411,
                "src": "306:42:5",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1368,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "306:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": {
                  "argumentTypes": null,
                  "hexValue": "34",
                  "id": 1369,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "347:1:5",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_4_by_1",
                    "typeString": "int_const 4"
                  },
                  "value": "4"
                },
                "visibility": "internal"
              },
              {
                "anonymous": false,
                "documentation": {
                  "id": 1371,
                  "nodeType": "StructuredDocumentation",
                  "src": "355:300:5",
                  "text": "@dev Emitted when an IArbitrable instance's dispute is ruled by an IArbitrator\n@param arbitrator IArbitrator instance ruling the dispute\n@param disputeId Identification number of the dispute being ruled by the arbitrator\n@param ruling Ruling given by the arbitrator"
                },
                "id": 1379,
                "name": "Ruled",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 1378,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1373,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "arbitrator",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1379,
                      "src": "672:30:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IArbitrator_$1459",
                        "typeString": "contract IArbitrator"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1372,
                        "name": "IArbitrator",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1459,
                        "src": "672:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IArbitrator_$1459",
                          "typeString": "contract IArbitrator"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1375,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "disputeId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1379,
                      "src": "704:25:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1374,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "704:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1377,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "ruling",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1379,
                      "src": "731:14:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1376,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "731:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "671:75:5"
                },
                "src": "660:87:5"
              },
              {
                "anonymous": false,
                "documentation": {
                  "id": 1380,
                  "nodeType": "StructuredDocumentation",
                  "src": "753:469:5",
                  "text": "@dev Emitted when new evidence is submitted for the IArbitrable instance's dispute\n@param arbitrator IArbitrator submitting the evidence for\n@param disputeId Identification number of the dispute receiving new evidence\n@param submitter Address of the account submitting the evidence\n@param evidence Data submitted for the evidence of the dispute\n@param finished Whether or not the submitter has finished submitting evidence"
                },
                "id": 1392,
                "name": "EvidenceSubmitted",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 1391,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1382,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "arbitrator",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1392,
                      "src": "1251:30:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IArbitrator_$1459",
                        "typeString": "contract IArbitrator"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1381,
                        "name": "IArbitrator",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1459,
                        "src": "1251:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IArbitrator_$1459",
                          "typeString": "contract IArbitrator"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1384,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "disputeId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1392,
                      "src": "1283:25:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1383,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1283:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1386,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "submitter",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1392,
                      "src": "1310:25:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1385,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1310:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1388,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "evidence",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1392,
                      "src": "1337:14:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1387,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1337:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1390,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "finished",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1392,
                      "src": "1353:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1389,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1353:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1250:117:5"
                },
                "src": "1227:141:5"
              },
              {
                "body": null,
                "documentation": {
                  "id": 1393,
                  "nodeType": "StructuredDocumentation",
                  "src": "1374:269:5",
                  "text": "@dev Submit evidence for a dispute\n@param _disputeId Id of the dispute in the Court\n@param _evidence Data submitted for the evidence related to the dispute\n@param _finished Whether or not the submitter has finished submitting evidence"
                },
                "functionSelector": "b9e9823f",
                "id": 1402,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "submitEvidence",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 1400,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1395,
                      "mutability": "mutable",
                      "name": "_disputeId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1402,
                      "src": "1672:18:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1394,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1672:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1397,
                      "mutability": "mutable",
                      "name": "_evidence",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1402,
                      "src": "1692:24:5",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1396,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1692:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1399,
                      "mutability": "mutable",
                      "name": "_finished",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1402,
                      "src": "1718:14:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1398,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1718:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1671:62:5"
                },
                "returnParameters": {
                  "id": 1401,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1750:0:5"
                },
                "scope": 1411,
                "src": "1648:103:5",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "external"
              },
              {
                "body": null,
                "documentation": {
                  "id": 1403,
                  "nodeType": "StructuredDocumentation",
                  "src": "1757:301:5",
                  "text": "@dev Give a ruling for a certain dispute, the account calling it must have rights to rule on the contract\n@param _disputeId Identification number of the dispute to be ruled\n@param _ruling Ruling given by the arbitrator, where 0 is reserved for \"refused to make a decision\""
                },
                "functionSelector": "311a6c56",
                "id": 1410,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "rule",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 1408,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1405,
                      "mutability": "mutable",
                      "name": "_disputeId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1410,
                      "src": "2077:18:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1404,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2077:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1407,
                      "mutability": "mutable",
                      "name": "_ruling",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1410,
                      "src": "2097:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1406,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2097:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "2076:37:5"
                },
                "returnParameters": {
                  "id": 1409,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2130:0:5"
                },
                "scope": 1411,
                "src": "2063:68:5",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "external"
              }
            ],
            "scope": 1412,
            "src": "195:1938:5"
          }
        ],
        "src": "141:1992:5"
      },
      "id": 5
    },
    "contracts/lib/IArbitrator.sol": {
      "ast": {
        "absolutePath": "contracts/lib/IArbitrator.sol",
        "exportedSymbols": {
          "IArbitrator": [
            1459
          ]
        },
        "id": 1460,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1413,
            "literals": [
              "solidity",
              "^",
              "0.6",
              ".8"
            ],
            "nodeType": "PragmaDirective",
            "src": "141:23:6"
          },
          {
            "absolutePath": "contracts/lib/SafeERC20.sol",
            "file": "./SafeERC20.sol",
            "id": 1414,
            "nodeType": "ImportDirective",
            "scope": 1460,
            "sourceUnit": 2193,
            "src": "166:25:6",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "abstract": false,
            "baseContracts": [],
            "contractDependencies": [],
            "contractKind": "interface",
            "documentation": null,
            "fullyImplemented": false,
            "id": 1459,
            "linearizedBaseContracts": [
              1459
            ],
            "name": "IArbitrator",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "body": null,
                "documentation": {
                  "id": 1415,
                  "nodeType": "StructuredDocumentation",
                  "src": "221:345:6",
                  "text": "@dev Create a dispute over the Arbitrable sender with a number of possible rulings\n@param _possibleRulings Number of possible rulings allowed for the dispute\n@param _metadata Optional metadata that can be used to provide additional information on the dispute to be created\n@return Dispute identification number"
                },
                "functionSelector": "c13517e1",
                "id": 1424,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "createDispute",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 1420,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1417,
                      "mutability": "mutable",
                      "name": "_possibleRulings",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1424,
                      "src": "594:24:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1416,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "594:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1419,
                      "mutability": "mutable",
                      "name": "_metadata",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1424,
                      "src": "620:24:6",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1418,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "620:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "593:52:6"
                },
                "returnParameters": {
                  "id": 1423,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1422,
                      "mutability": "mutable",
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1424,
                      "src": "664:7:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1421,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "664:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "663:9:6"
                },
                "scope": 1459,
                "src": "571:102:6",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "body": null,
                "documentation": {
                  "id": 1425,
                  "nodeType": "StructuredDocumentation",
                  "src": "679:161:6",
                  "text": "@dev Close the evidence period of a dispute\n@param _disputeId Identification number of the dispute to close its evidence submitting period"
                },
                "functionSelector": "7e9adccf",
                "id": 1430,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "closeEvidencePeriod",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 1428,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1427,
                      "mutability": "mutable",
                      "name": "_disputeId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1430,
                      "src": "874:18:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1426,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "874:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "873:20:6"
                },
                "returnParameters": {
                  "id": 1429,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "902:0:6"
                },
                "scope": 1459,
                "src": "845:58:6",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "body": null,
                "documentation": {
                  "id": 1431,
                  "nodeType": "StructuredDocumentation",
                  "src": "909:170:6",
                  "text": "@dev Execute the Arbitrable associated to a dispute based on its final ruling\n@param _disputeId Identification number of the dispute to be executed"
                },
                "functionSelector": "8bb04875",
                "id": 1436,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "executeRuling",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 1434,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1433,
                      "mutability": "mutable",
                      "name": "_disputeId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1436,
                      "src": "1107:18:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1432,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1107:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1106:20:6"
                },
                "returnParameters": {
                  "id": 1435,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1135:0:6"
                },
                "scope": 1459,
                "src": "1084:52:6",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "body": null,
                "documentation": {
                  "id": 1437,
                  "nodeType": "StructuredDocumentation",
                  "src": "1142:303:6",
                  "text": "@dev Tell the dispute fees information to create a dispute\n@return recipient Address where the corresponding dispute fees must be transferred to\n@return feeToken ERC20 token used for the fees\n@return feeAmount Total amount of fees that must be allowed to the recipient"
                },
                "functionSelector": "7b751b9e",
                "id": 1446,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "getDisputeFees",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 1438,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1473:2:6"
                },
                "returnParameters": {
                  "id": 1445,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1440,
                      "mutability": "mutable",
                      "name": "recipient",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1446,
                      "src": "1499:17:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1439,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1499:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1442,
                      "mutability": "mutable",
                      "name": "feeToken",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1446,
                      "src": "1518:14:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1927",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1441,
                        "name": "ERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1927,
                        "src": "1518:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1927",
                          "typeString": "contract ERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1444,
                      "mutability": "mutable",
                      "name": "feeAmount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1446,
                      "src": "1534:17:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1443,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1534:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1498:54:6"
                },
                "scope": 1459,
                "src": "1450:103:6",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "body": null,
                "documentation": {
                  "id": 1447,
                  "nodeType": "StructuredDocumentation",
                  "src": "1559:422:6",
                  "text": "@dev Tell the subscription fees information for a subscriber to be up-to-date\n@param _subscriber Address of the account paying the subscription fees for\n@return recipient Address where the corresponding subscriptions fees must be transferred to\n@return feeToken ERC20 token used for the subscription fees\n@return feeAmount Total amount of fees that must be allowed to the recipient"
                },
                "functionSelector": "e3f2311e",
                "id": 1458,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "getSubscriptionFees",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 1450,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1449,
                      "mutability": "mutable",
                      "name": "_subscriber",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1458,
                      "src": "2015:19:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1448,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2015:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "2014:21:6"
                },
                "returnParameters": {
                  "id": 1457,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1452,
                      "mutability": "mutable",
                      "name": "recipient",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1458,
                      "src": "2059:17:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1451,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2059:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1454,
                      "mutability": "mutable",
                      "name": "feeToken",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1458,
                      "src": "2078:14:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1927",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1453,
                        "name": "ERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1927,
                        "src": "2078:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1927",
                          "typeString": "contract ERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1456,
                      "mutability": "mutable",
                      "name": "feeAmount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1458,
                      "src": "2094:17:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1455,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2094:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "2058:54:6"
                },
                "scope": 1459,
                "src": "1986:127:6",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              }
            ],
            "scope": 1460,
            "src": "193:1922:6"
          }
        ],
        "src": "141:1974:6"
      },
      "id": 6
    },
    "contracts/lib/MiniACL.sol": {
      "ast": {
        "absolutePath": "contracts/lib/MiniACL.sol",
        "exportedSymbols": {
          "MiniACL": [
            1793
          ],
          "MiniACLData": [
            1474
          ]
        },
        "id": 1794,
        "license": "GPL-3.0",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1461,
            "literals": [
              "solidity",
              "0.6",
              ".8"
            ],
            "nodeType": "PragmaDirective",
            "src": "47:22:7"
          },
          {
            "id": 1462,
            "literals": [
              "experimental",
              "ABIEncoderV2"
            ],
            "nodeType": "PragmaDirective",
            "src": "70:33:7"
          },
          {
            "abstract": false,
            "baseContracts": [],
            "contractDependencies": [],
            "contractKind": "library",
            "documentation": null,
            "fullyImplemented": true,
            "id": 1474,
            "linearizedBaseContracts": [
              1474
            ],
            "name": "MiniACLData",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "canonicalName": "MiniACLData.BulkOp",
                "id": 1466,
                "members": [
                  {
                    "id": 1463,
                    "name": "Grant",
                    "nodeType": "EnumValue",
                    "src": "145:5:7"
                  },
                  {
                    "id": 1464,
                    "name": "Revoke",
                    "nodeType": "EnumValue",
                    "src": "152:6:7"
                  },
                  {
                    "id": 1465,
                    "name": "Freeze",
                    "nodeType": "EnumValue",
                    "src": "160:6:7"
                  }
                ],
                "name": "BulkOp",
                "nodeType": "EnumDefinition",
                "src": "131:37:7"
              },
              {
                "canonicalName": "MiniACLData.BulkItem",
                "id": 1473,
                "members": [
                  {
                    "constant": false,
                    "id": 1468,
                    "mutability": "mutable",
                    "name": "op",
                    "nodeType": "VariableDeclaration",
                    "overrides": null,
                    "scope": 1473,
                    "src": "200:9:7",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_BulkOp_$1466",
                      "typeString": "enum MiniACLData.BulkOp"
                    },
                    "typeName": {
                      "contractScope": null,
                      "id": 1467,
                      "name": "BulkOp",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 1466,
                      "src": "200:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BulkOp_$1466",
                        "typeString": "enum MiniACLData.BulkOp"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1470,
                    "mutability": "mutable",
                    "name": "role",
                    "nodeType": "VariableDeclaration",
                    "overrides": null,
                    "scope": 1473,
                    "src": "219:11:7",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    },
                    "typeName": {
                      "id": 1469,
                      "name": "bytes4",
                      "nodeType": "ElementaryTypeName",
                      "src": "219:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1472,
                    "mutability": "mutable",
                    "name": "who",
                    "nodeType": "VariableDeclaration",
                    "overrides": null,
                    "scope": 1473,
                    "src": "240:11:7",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 1471,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "240:7:7",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  }
                ],
                "name": "BulkItem",
                "nodeType": "StructDefinition",
                "scope": 1474,
                "src": "174:84:7",
                "visibility": "public"
              }
            ],
            "scope": 1794,
            "src": "105:155:7"
          },
          {
            "abstract": false,
            "baseContracts": [],
            "contractDependencies": [],
            "contractKind": "contract",
            "documentation": null,
            "fullyImplemented": true,
            "id": 1793,
            "linearizedBaseContracts": [
              1793
            ],
            "name": "MiniACL",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "constant": true,
                "functionSelector": "7e8c7f08",
                "id": 1491,
                "mutability": "constant",
                "name": "ROOT_ROLE",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1793,
                "src": "285:153:7",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes4",
                  "typeString": "bytes4"
                },
                "typeName": {
                  "id": 1475,
                  "name": "bytes4",
                  "nodeType": "ElementaryTypeName",
                  "src": "285:6:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  }
                },
                "value": {
                  "argumentTypes": null,
                  "commonType": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "id": 1490,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "leftExpression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    },
                    "id": 1486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 1482,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1476,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "328:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MiniACL_$1793",
                              "typeString": "contract MiniACL"
                            }
                          },
                          "id": 1477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "grant",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1581,
                          "src": "328:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$_t_address_$returns$__$",
                            "typeString": "function (bytes4,address) external"
                          }
                        },
                        "id": 1478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "328:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "^",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1479,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "358:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MiniACL_$1793",
                              "typeString": "contract MiniACL"
                            }
                          },
                          "id": 1480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "revoke",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1597,
                          "src": "358:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$_t_address_$returns$__$",
                            "typeString": "function (bytes4,address) external"
                          }
                        },
                        "id": 1481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "358:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "328:50:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "^",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1483,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "389:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MiniACL_$1793",
                            "typeString": "contract MiniACL"
                          }
                        },
                        "id": 1484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "freeze",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1610,
                        "src": "389:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                          "typeString": "function (bytes4) external"
                        }
                      },
                      "id": 1485,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "389:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "328:81:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "nodeType": "BinaryOperation",
                  "operator": "^",
                  "rightExpression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1487,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "420:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MiniACL_$1793",
                          "typeString": "contract MiniACL"
                        }
                      },
                      "id": 1488,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "bulk",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1681,
                      "src": "420:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_struct$_BulkItem_$1473_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (struct MiniACLData.BulkItem memory[] memory) external"
                      }
                    },
                    "id": 1489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "selector",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "420:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "src": "328:110:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  }
                },
                "visibility": "public"
              },
              {
                "constant": true,
                "id": 1497,
                "mutability": "constant",
                "name": "FREEZE_FLAG",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1793,
                "src": "450:50:7",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1492,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "450:7:7",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": {
                  "argumentTypes": null,
                  "arguments": [
                    {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "498:1:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      }
                    ],
                    "id": 1494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "490:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_address_$",
                      "typeString": "type(address)"
                    },
                    "typeName": {
                      "id": 1493,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "490:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      }
                    }
                  },
                  "id": 1496,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "490:10:7",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": true,
                "id": 1504,
                "mutability": "constant",
                "name": "ANY_ADDR",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1793,
                "src": "506:48:7",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1498,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "506:7:7",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": {
                  "argumentTypes": null,
                  "arguments": [
                    {
                      "argumentTypes": null,
                      "id": 1502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "-",
                      "prefix": true,
                      "src": "551:2:7",
                      "subExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 1501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "552:1:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_minus_1_by_1",
                        "typeString": "int_const -1"
                      }
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_rational_minus_1_by_1",
                        "typeString": "int_const -1"
                      }
                    ],
                    "id": 1500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "543:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_address_$",
                      "typeString": "type(address)"
                    },
                    "typeName": {
                      "id": 1499,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "543:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      }
                    }
                  },
                  "id": 1503,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "543:11:7",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "functionSelector": "96fc8abd",
                "id": 1510,
                "mutability": "mutable",
                "name": "roles",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1793,
                "src": "565:58:7",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_bytes4_$_t_mapping$_t_address_$_t_bool_$_$",
                  "typeString": "mapping(bytes4 => mapping(address => bool))"
                },
                "typeName": {
                  "id": 1509,
                  "keyType": {
                    "id": 1505,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "574:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "565:45:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_bytes4_$_t_mapping$_t_address_$_t_bool_$_$",
                    "typeString": "mapping(bytes4 => mapping(address => bool))"
                  },
                  "valueType": {
                    "id": 1508,
                    "keyType": {
                      "id": 1506,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "593:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "584:25:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueType": {
                      "id": 1507,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "604:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  }
                },
                "value": null,
                "visibility": "public"
              },
              {
                "anonymous": false,
                "documentation": null,
                "id": 1518,
                "name": "Granted",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 1517,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1512,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "role",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1518,
                      "src": "644:19:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 1511,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "644:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1514,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "actor",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1518,
                      "src": "665:21:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1513,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "665:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1516,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "who",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1518,
                      "src": "688:19:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1515,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "688:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "643:65:7"
                },
                "src": "630:79:7"
              },
              {
                "anonymous": false,
                "documentation": null,
                "id": 1526,
                "name": "Revoked",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 1525,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1520,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "role",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1526,
                      "src": "728:19:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 1519,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "728:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1522,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "actor",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1526,
                      "src": "749:21:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1521,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "749:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1524,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "who",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1526,
                      "src": "772:19:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1523,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "772:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "727:65:7"
                },
                "src": "714:79:7"
              },
              {
                "anonymous": false,
                "documentation": null,
                "id": 1532,
                "name": "Frozen",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 1531,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1528,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "role",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1532,
                      "src": "811:19:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 1527,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "811:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1530,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "actor",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1532,
                      "src": "832:21:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1529,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "832:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "810:44:7"
                },
                "src": "798:57:7"
              },
              {
                "body": {
                  "id": 1553,
                  "nodeType": "Block",
                  "src": "889:194:7",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 1548,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1537,
                                  "name": "roles",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1510,
                                  "src": "920:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes4_$_t_mapping$_t_address_$_t_bool_$_$",
                                    "typeString": "mapping(bytes4 => mapping(address => bool))"
                                  }
                                },
                                "id": 1539,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1538,
                                  "name": "_role",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1534,
                                  "src": "926:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "920:12:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 1542,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1540,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "933:3:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1541,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "933:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "920:24:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1543,
                                  "name": "roles",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1510,
                                  "src": "982:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes4_$_t_mapping$_t_address_$_t_bool_$_$",
                                    "typeString": "mapping(bytes4 => mapping(address => bool))"
                                  }
                                },
                                "id": 1545,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1544,
                                  "name": "_role",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1534,
                                  "src": "988:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "982:12:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 1547,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1546,
                                "name": "ANY_ADDR",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1504,
                                "src": "995:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "982:22:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "920:84:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "61636c3a2061757468",
                            "id": 1549,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1044:11:7",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_2d244007fda941a544ed455381a9207e30c34b5be41c5ab96053d8911ca105ac",
                              "typeString": "literal_string \"acl: auth\""
                            },
                            "value": "acl: auth"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_2d244007fda941a544ed455381a9207e30c34b5be41c5ab96053d8911ca105ac",
                              "typeString": "literal_string \"acl: auth\""
                            }
                          ],
                          "id": 1536,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "899:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 1550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "899:166:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1551,
                      "nodeType": "ExpressionStatement",
                      "src": "899:166:7"
                    },
                    {
                      "id": 1552,
                      "nodeType": "PlaceholderStatement",
                      "src": "1075:1:7"
                    }
                  ]
                },
                "documentation": null,
                "id": 1554,
                "name": "auth",
                "nodeType": "ModifierDefinition",
                "overrides": null,
                "parameters": {
                  "id": 1535,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1534,
                      "mutability": "mutable",
                      "name": "_role",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1554,
                      "src": "875:12:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 1533,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "875:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "874:14:7"
                },
                "src": "861:222:7",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1564,
                  "nodeType": "Block",
                  "src": "1134:48:7",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1560,
                            "name": "ROOT_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1491,
                            "src": "1151:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1561,
                            "name": "_initialRoot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1556,
                            "src": "1162:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1559,
                          "name": "_grant",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1719,
                          "src": "1144:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$_t_address_$returns$__$",
                            "typeString": "function (bytes4,address)"
                          }
                        },
                        "id": 1562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1144:31:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1563,
                      "nodeType": "ExpressionStatement",
                      "src": "1144:31:7"
                    }
                  ]
                },
                "documentation": null,
                "id": 1565,
                "implemented": true,
                "kind": "constructor",
                "modifiers": [],
                "name": "",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 1557,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1556,
                      "mutability": "mutable",
                      "name": "_initialRoot",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1565,
                      "src": "1105:20:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1555,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1105:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1104:22:7"
                },
                "returnParameters": {
                  "id": 1558,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1134:0:7"
                },
                "scope": 1793,
                "src": "1093:89:7",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 1580,
                  "nodeType": "Block",
                  "src": "1256:36:7",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1576,
                            "name": "_role",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1567,
                            "src": "1273:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1577,
                            "name": "_who",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1569,
                            "src": "1280:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1575,
                          "name": "_grant",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1719,
                          "src": "1266:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$_t_address_$returns$__$",
                            "typeString": "function (bytes4,address)"
                          }
                        },
                        "id": 1578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1266:19:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1579,
                      "nodeType": "ExpressionStatement",
                      "src": "1266:19:7"
                    }
                  ]
                },
                "documentation": null,
                "functionSelector": "a157a10d",
                "id": 1581,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1572,
                        "name": "ROOT_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1491,
                        "src": "1245:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "id": 1573,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 1571,
                      "name": "auth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1554,
                      "src": "1240:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$_t_bytes4_$",
                        "typeString": "modifier (bytes4)"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "1240:15:7"
                  }
                ],
                "name": "grant",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 1570,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1567,
                      "mutability": "mutable",
                      "name": "_role",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1581,
                      "src": "1203:12:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 1566,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "1203:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1569,
                      "mutability": "mutable",
                      "name": "_who",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1581,
                      "src": "1217:12:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1568,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1217:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1202:28:7"
                },
                "returnParameters": {
                  "id": 1574,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1256:0:7"
                },
                "scope": 1793,
                "src": "1188:104:7",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 1596,
                  "nodeType": "Block",
                  "src": "1367:37:7",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1592,
                            "name": "_role",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1583,
                            "src": "1385:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1593,
                            "name": "_who",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1585,
                            "src": "1392:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1591,
                          "name": "_revoke",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1750,
                          "src": "1377:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$_t_address_$returns$__$",
                            "typeString": "function (bytes4,address)"
                          }
                        },
                        "id": 1594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1377:20:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1595,
                      "nodeType": "ExpressionStatement",
                      "src": "1377:20:7"
                    }
                  ]
                },
                "documentation": null,
                "functionSelector": "58849734",
                "id": 1597,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1588,
                        "name": "ROOT_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1491,
                        "src": "1356:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "id": 1589,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 1587,
                      "name": "auth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1554,
                      "src": "1351:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$_t_bytes4_$",
                        "typeString": "modifier (bytes4)"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "1351:15:7"
                  }
                ],
                "name": "revoke",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 1586,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1583,
                      "mutability": "mutable",
                      "name": "_role",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1597,
                      "src": "1314:12:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 1582,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "1314:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1585,
                      "mutability": "mutable",
                      "name": "_who",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1597,
                      "src": "1328:12:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1584,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1328:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1313:28:7"
                },
                "returnParameters": {
                  "id": 1590,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1367:0:7"
                },
                "scope": 1793,
                "src": "1298:106:7",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 1609,
                  "nodeType": "Block",
                  "src": "1465:31:7",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1606,
                            "name": "_role",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1599,
                            "src": "1483:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "id": 1605,
                          "name": "_freeze",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1778,
                          "src": "1475:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                            "typeString": "function (bytes4)"
                          }
                        },
                        "id": 1607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1475:14:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1608,
                      "nodeType": "ExpressionStatement",
                      "src": "1475:14:7"
                    }
                  ]
                },
                "documentation": null,
                "functionSelector": "bdf9a726",
                "id": 1610,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1602,
                        "name": "ROOT_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1491,
                        "src": "1454:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "id": 1603,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 1601,
                      "name": "auth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1554,
                      "src": "1449:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$_t_bytes4_$",
                        "typeString": "modifier (bytes4)"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "1449:15:7"
                  }
                ],
                "name": "freeze",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 1600,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1599,
                      "mutability": "mutable",
                      "name": "_role",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1610,
                      "src": "1426:12:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 1598,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "1426:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1425:14:7"
                },
                "returnParameters": {
                  "id": 1604,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1465:0:7"
                },
                "scope": 1793,
                "src": "1410:86:7",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 1680,
                  "nodeType": "Block",
                  "src": "1576:378:7",
                  "statements": [
                    {
                      "body": {
                        "id": 1678,
                        "nodeType": "Block",
                        "src": "1629:319:7",
                        "statements": [
                          {
                            "assignments": [
                              1633
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 1633,
                                "mutability": "mutable",
                                "name": "item",
                                "nodeType": "VariableDeclaration",
                                "overrides": null,
                                "scope": 1678,
                                "src": "1643:32:7",
                                "stateVariable": false,
                                "storageLocation": "memory",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_BulkItem_$1473_memory_ptr",
                                  "typeString": "struct MiniACLData.BulkItem"
                                },
                                "typeName": {
                                  "contractScope": null,
                                  "id": 1632,
                                  "name": "MiniACLData.BulkItem",
                                  "nodeType": "UserDefinedTypeName",
                                  "referencedDeclaration": 1473,
                                  "src": "1643:20:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_BulkItem_$1473_storage_ptr",
                                    "typeString": "struct MiniACLData.BulkItem"
                                  }
                                },
                                "value": null,
                                "visibility": "internal"
                              }
                            ],
                            "id": 1637,
                            "initialValue": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1634,
                                "name": "items",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1613,
                                "src": "1678:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_BulkItem_$1473_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct MiniACLData.BulkItem memory[] memory"
                                }
                              },
                              "id": 1636,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1635,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1620,
                                "src": "1684:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1678:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BulkItem_$1473_memory_ptr",
                                "typeString": "struct MiniACLData.BulkItem memory"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "1643:43:7"
                          },
                          {
                            "condition": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_enum$_BulkOp_$1466",
                                "typeString": "enum MiniACLData.BulkOp"
                              },
                              "id": 1643,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1638,
                                  "name": "item",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1633,
                                  "src": "1705:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_BulkItem_$1473_memory_ptr",
                                    "typeString": "struct MiniACLData.BulkItem memory"
                                  }
                                },
                                "id": 1639,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "op",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1468,
                                "src": "1705:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_BulkOp_$1466",
                                  "typeString": "enum MiniACLData.BulkOp"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1640,
                                    "name": "MiniACLData",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1474,
                                    "src": "1716:11:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_MiniACLData_$1474_$",
                                      "typeString": "type(library MiniACLData)"
                                    }
                                  },
                                  "id": 1641,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "BulkOp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1466,
                                  "src": "1716:18:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_BulkOp_$1466_$",
                                    "typeString": "type(enum MiniACLData.BulkOp)"
                                  }
                                },
                                "id": 1642,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "Grant",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1716:24:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_BulkOp_$1466",
                                  "typeString": "enum MiniACLData.BulkOp"
                                }
                              },
                              "src": "1705:35:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_enum$_BulkOp_$1466",
                                  "typeString": "enum MiniACLData.BulkOp"
                                },
                                "id": 1656,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1651,
                                    "name": "item",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1633,
                                    "src": "1792:4:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_BulkItem_$1473_memory_ptr",
                                      "typeString": "struct MiniACLData.BulkItem memory"
                                    }
                                  },
                                  "id": 1652,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "op",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1468,
                                  "src": "1792:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_BulkOp_$1466",
                                    "typeString": "enum MiniACLData.BulkOp"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1653,
                                      "name": "MiniACLData",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1474,
                                      "src": "1803:11:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_MiniACLData_$1474_$",
                                        "typeString": "type(library MiniACLData)"
                                      }
                                    },
                                    "id": 1654,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "BulkOp",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1466,
                                    "src": "1803:18:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_BulkOp_$1466_$",
                                      "typeString": "type(enum MiniACLData.BulkOp)"
                                    }
                                  },
                                  "id": 1655,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "Revoke",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "1803:25:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_BulkOp_$1466",
                                    "typeString": "enum MiniACLData.BulkOp"
                                  }
                                },
                                "src": "1792:36:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "condition": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_enum$_BulkOp_$1466",
                                    "typeString": "enum MiniACLData.BulkOp"
                                  },
                                  "id": 1669,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1664,
                                      "name": "item",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1633,
                                      "src": "1881:4:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_BulkItem_$1473_memory_ptr",
                                        "typeString": "struct MiniACLData.BulkItem memory"
                                      }
                                    },
                                    "id": 1665,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "op",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1468,
                                    "src": "1881:7:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_BulkOp_$1466",
                                      "typeString": "enum MiniACLData.BulkOp"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 1666,
                                        "name": "MiniACLData",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1474,
                                        "src": "1892:11:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_MiniACLData_$1474_$",
                                          "typeString": "type(library MiniACLData)"
                                        }
                                      },
                                      "id": 1667,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "BulkOp",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1466,
                                      "src": "1892:18:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_BulkOp_$1466_$",
                                        "typeString": "type(enum MiniACLData.BulkOp)"
                                      }
                                    },
                                    "id": 1668,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "Freeze",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "1892:25:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_BulkOp_$1466",
                                      "typeString": "enum MiniACLData.BulkOp"
                                    }
                                  },
                                  "src": "1881:36:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseBody": null,
                                "id": 1675,
                                "nodeType": "IfStatement",
                                "src": "1877:60:7",
                                "trueBody": {
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 1671,
                                          "name": "item",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1633,
                                          "src": "1927:4:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_BulkItem_$1473_memory_ptr",
                                            "typeString": "struct MiniACLData.BulkItem memory"
                                          }
                                        },
                                        "id": 1672,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "role",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1470,
                                        "src": "1927:9:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      ],
                                      "id": 1670,
                                      "name": "_freeze",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1778,
                                      "src": "1919:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                                        "typeString": "function (bytes4)"
                                      }
                                    },
                                    "id": 1673,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1919:18:7",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 1674,
                                  "nodeType": "ExpressionStatement",
                                  "src": "1919:18:7"
                                }
                              },
                              "id": 1676,
                              "nodeType": "IfStatement",
                              "src": "1788:149:7",
                              "trueBody": {
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 1658,
                                        "name": "item",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1633,
                                        "src": "1838:4:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_BulkItem_$1473_memory_ptr",
                                          "typeString": "struct MiniACLData.BulkItem memory"
                                        }
                                      },
                                      "id": 1659,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "role",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1470,
                                      "src": "1838:9:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 1660,
                                        "name": "item",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1633,
                                        "src": "1849:4:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_BulkItem_$1473_memory_ptr",
                                          "typeString": "struct MiniACLData.BulkItem memory"
                                        }
                                      },
                                      "id": 1661,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "who",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1472,
                                      "src": "1849:8:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1657,
                                    "name": "_revoke",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1750,
                                    "src": "1830:7:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$_t_address_$returns$__$",
                                      "typeString": "function (bytes4,address)"
                                    }
                                  },
                                  "id": 1662,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1830:28:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 1663,
                                "nodeType": "ExpressionStatement",
                                "src": "1830:28:7"
                              }
                            },
                            "id": 1677,
                            "nodeType": "IfStatement",
                            "src": "1701:236:7",
                            "trueBody": {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1645,
                                      "name": "item",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1633,
                                      "src": "1749:4:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_BulkItem_$1473_memory_ptr",
                                        "typeString": "struct MiniACLData.BulkItem memory"
                                      }
                                    },
                                    "id": 1646,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "role",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1470,
                                    "src": "1749:9:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1647,
                                      "name": "item",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1633,
                                      "src": "1760:4:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_BulkItem_$1473_memory_ptr",
                                        "typeString": "struct MiniACLData.BulkItem memory"
                                      }
                                    },
                                    "id": 1648,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "who",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1472,
                                    "src": "1760:8:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1644,
                                  "name": "_grant",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1719,
                                  "src": "1742:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$_t_address_$returns$__$",
                                    "typeString": "function (bytes4,address)"
                                  }
                                },
                                "id": 1649,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1742:27:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1650,
                              "nodeType": "ExpressionStatement",
                              "src": "1742:27:7"
                            }
                          }
                        ]
                      },
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1623,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1620,
                          "src": "1606:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1624,
                            "name": "items",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1613,
                            "src": "1610:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_BulkItem_$1473_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct MiniACLData.BulkItem memory[] memory"
                            }
                          },
                          "id": 1625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1610:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1606:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 1679,
                      "initializationExpression": {
                        "assignments": [
                          1620
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1620,
                            "mutability": "mutable",
                            "name": "i",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 1679,
                            "src": "1591:9:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1619,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1591:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1622,
                        "initialValue": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1603:1:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1591:13:7"
                      },
                      "loopExpression": {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1628,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "1624:3:7",
                          "subExpression": {
                            "argumentTypes": null,
                            "id": 1627,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1620,
                            "src": "1624:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1629,
                        "nodeType": "ExpressionStatement",
                        "src": "1624:3:7"
                      },
                      "nodeType": "ForStatement",
                      "src": "1586:362:7"
                    }
                  ]
                },
                "documentation": null,
                "functionSelector": "1c47671b",
                "id": 1681,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1616,
                        "name": "ROOT_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1491,
                        "src": "1565:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "id": 1617,
                    "modifierName": {
                      "argumentTypes": null,
                      "id": 1615,
                      "name": "auth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1554,
                      "src": "1560:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_modifier$_t_bytes4_$",
                        "typeString": "modifier (bytes4)"
                      }
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "1560:15:7"
                  }
                ],
                "name": "bulk",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 1614,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1613,
                      "mutability": "mutable",
                      "name": "items",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1681,
                      "src": "1516:35:7",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_BulkItem_$1473_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct MiniACLData.BulkItem[]"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 1611,
                          "name": "MiniACLData.BulkItem",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1473,
                          "src": "1516:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BulkItem_$1473_storage_ptr",
                            "typeString": "struct MiniACLData.BulkItem"
                          }
                        },
                        "id": 1612,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "1516:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_BulkItem_$1473_storage_$dyn_storage_ptr",
                          "typeString": "struct MiniACLData.BulkItem[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1515:37:7"
                },
                "returnParameters": {
                  "id": 1618,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1576:0:7"
                },
                "scope": 1793,
                "src": "1502:452:7",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 1718,
                  "nodeType": "Block",
                  "src": "2013:205:7",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1692,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "2031:16:7",
                            "subExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1690,
                                  "name": "_role",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1683,
                                  "src": "2041:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                ],
                                "id": 1689,
                                "name": "isFrozen",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1792,
                                "src": "2032:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                                  "typeString": "function (bytes4) view returns (bool)"
                                }
                              },
                              "id": 1691,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2032:15:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "61636c3a2066726f7a656e",
                            "id": 1693,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2049:13:7",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_72ddcfd61a5ce7daa306ccbea96d54852ecc68d2e88d9eba17c9fd78a3938b09",
                              "typeString": "literal_string \"acl: frozen\""
                            },
                            "value": "acl: frozen"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_72ddcfd61a5ce7daa306ccbea96d54852ecc68d2e88d9eba17c9fd78a3938b09",
                              "typeString": "literal_string \"acl: frozen\""
                            }
                          ],
                          "id": 1688,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "2023:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 1694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2023:40:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1695,
                      "nodeType": "ExpressionStatement",
                      "src": "2023:40:7"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1699,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 1697,
                              "name": "_who",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1685,
                              "src": "2081:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 1698,
                              "name": "FREEZE_FLAG",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1497,
                              "src": "2089:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "2081:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "61636c3a2062616420667265657a65",
                            "id": 1700,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2102:17:7",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_e05c4653e828e82fd2117a1089424ad477b7101c190b8ac597e0ace18dc127c0",
                              "typeString": "literal_string \"acl: bad freeze\""
                            },
                            "value": "acl: bad freeze"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_e05c4653e828e82fd2117a1089424ad477b7101c190b8ac597e0ace18dc127c0",
                              "typeString": "literal_string \"acl: bad freeze\""
                            }
                          ],
                          "id": 1696,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "2073:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 1701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2073:47:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1702,
                      "nodeType": "ExpressionStatement",
                      "src": "2073:47:7"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 1709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1703,
                              "name": "roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1510,
                              "src": "2139:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes4_$_t_mapping$_t_address_$_t_bool_$_$",
                                "typeString": "mapping(bytes4 => mapping(address => bool))"
                              }
                            },
                            "id": 1706,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1704,
                              "name": "_role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1683,
                              "src": "2145:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2139:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1707,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1705,
                            "name": "_who",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1685,
                            "src": "2152:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "2139:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 1708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2160:4:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2139:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 1710,
                      "nodeType": "ExpressionStatement",
                      "src": "2139:25:7"
                    },
                    {
                      "eventCall": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1712,
                            "name": "_role",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1683,
                            "src": "2187:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1713,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2194:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1714,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2194:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1715,
                            "name": "_who",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1685,
                            "src": "2206:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1711,
                          "name": "Granted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1518,
                          "src": "2179:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_bytes4_$_t_address_$_t_address_$returns$__$",
                            "typeString": "function (bytes4,address,address)"
                          }
                        },
                        "id": 1716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2179:32:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1717,
                      "nodeType": "EmitStatement",
                      "src": "2174:37:7"
                    }
                  ]
                },
                "documentation": null,
                "id": 1719,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_grant",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 1686,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1683,
                      "mutability": "mutable",
                      "name": "_role",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1719,
                      "src": "1976:12:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 1682,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "1976:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1685,
                      "mutability": "mutable",
                      "name": "_who",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1719,
                      "src": "1990:12:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1684,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1990:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1975:28:7"
                },
                "returnParameters": {
                  "id": 1687,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2013:0:7"
                },
                "scope": 1793,
                "src": "1960:258:7",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1749,
                  "nodeType": "Block",
                  "src": "2278:141:7",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1730,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "2296:16:7",
                            "subExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1728,
                                  "name": "_role",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1721,
                                  "src": "2306:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                ],
                                "id": 1727,
                                "name": "isFrozen",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1792,
                                "src": "2297:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                                  "typeString": "function (bytes4) view returns (bool)"
                                }
                              },
                              "id": 1729,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2297:15:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "61636c3a2066726f7a656e",
                            "id": 1731,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2314:13:7",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_72ddcfd61a5ce7daa306ccbea96d54852ecc68d2e88d9eba17c9fd78a3938b09",
                              "typeString": "literal_string \"acl: frozen\""
                            },
                            "value": "acl: frozen"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_72ddcfd61a5ce7daa306ccbea96d54852ecc68d2e88d9eba17c9fd78a3938b09",
                              "typeString": "literal_string \"acl: frozen\""
                            }
                          ],
                          "id": 1726,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "2288:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 1732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2288:40:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1733,
                      "nodeType": "ExpressionStatement",
                      "src": "2288:40:7"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 1740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1734,
                              "name": "roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1510,
                              "src": "2339:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes4_$_t_mapping$_t_address_$_t_bool_$_$",
                                "typeString": "mapping(bytes4 => mapping(address => bool))"
                              }
                            },
                            "id": 1737,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1735,
                              "name": "_role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1721,
                              "src": "2345:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2339:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1738,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1736,
                            "name": "_who",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1723,
                            "src": "2352:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "2339:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 1739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2360:5:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "2339:26:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 1741,
                      "nodeType": "ExpressionStatement",
                      "src": "2339:26:7"
                    },
                    {
                      "eventCall": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1743,
                            "name": "_role",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1721,
                            "src": "2388:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1744,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2395:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1745,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2395:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1746,
                            "name": "_who",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1723,
                            "src": "2407:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1742,
                          "name": "Revoked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1526,
                          "src": "2380:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_bytes4_$_t_address_$_t_address_$returns$__$",
                            "typeString": "function (bytes4,address,address)"
                          }
                        },
                        "id": 1747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2380:32:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1748,
                      "nodeType": "EmitStatement",
                      "src": "2375:37:7"
                    }
                  ]
                },
                "documentation": null,
                "id": 1750,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_revoke",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 1724,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1721,
                      "mutability": "mutable",
                      "name": "_role",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1750,
                      "src": "2241:12:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 1720,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "2241:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1723,
                      "mutability": "mutable",
                      "name": "_who",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1750,
                      "src": "2255:12:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1722,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2255:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "2240:28:7"
                },
                "returnParameters": {
                  "id": 1725,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2278:0:7"
                },
                "scope": 1793,
                "src": "2224:195:7",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1777,
                  "nodeType": "Block",
                  "src": "2465:141:7",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1759,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "2483:16:7",
                            "subExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1757,
                                  "name": "_role",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1752,
                                  "src": "2493:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                ],
                                "id": 1756,
                                "name": "isFrozen",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1792,
                                "src": "2484:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                                  "typeString": "function (bytes4) view returns (bool)"
                                }
                              },
                              "id": 1758,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2484:15:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "61636c3a2066726f7a656e",
                            "id": 1760,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2501:13:7",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_72ddcfd61a5ce7daa306ccbea96d54852ecc68d2e88d9eba17c9fd78a3938b09",
                              "typeString": "literal_string \"acl: frozen\""
                            },
                            "value": "acl: frozen"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_72ddcfd61a5ce7daa306ccbea96d54852ecc68d2e88d9eba17c9fd78a3938b09",
                              "typeString": "literal_string \"acl: frozen\""
                            }
                          ],
                          "id": 1755,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "2475:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 1761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2475:40:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1762,
                      "nodeType": "ExpressionStatement",
                      "src": "2475:40:7"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 1769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1763,
                              "name": "roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1510,
                              "src": "2526:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes4_$_t_mapping$_t_address_$_t_bool_$_$",
                                "typeString": "mapping(bytes4 => mapping(address => bool))"
                              }
                            },
                            "id": 1766,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1764,
                              "name": "_role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1752,
                              "src": "2532:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2526:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1767,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1765,
                            "name": "FREEZE_FLAG",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1497,
                            "src": "2539:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "2526:25:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 1768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2554:4:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2526:32:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 1770,
                      "nodeType": "ExpressionStatement",
                      "src": "2526:32:7"
                    },
                    {
                      "eventCall": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1772,
                            "name": "_role",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1752,
                            "src": "2581:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1773,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2588:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1774,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2588:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 1771,
                          "name": "Frozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1532,
                          "src": "2574:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_bytes4_$_t_address_$returns$__$",
                            "typeString": "function (bytes4,address)"
                          }
                        },
                        "id": 1775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2574:25:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1776,
                      "nodeType": "EmitStatement",
                      "src": "2569:30:7"
                    }
                  ]
                },
                "documentation": null,
                "id": 1778,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_freeze",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 1753,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1752,
                      "mutability": "mutable",
                      "name": "_role",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1778,
                      "src": "2442:12:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 1751,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "2442:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "2441:14:7"
                },
                "returnParameters": {
                  "id": 1754,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2465:0:7"
                },
                "scope": 1793,
                "src": "2425:181:7",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1791,
                  "nodeType": "Block",
                  "src": "2671:49:7",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1785,
                            "name": "roles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1510,
                            "src": "2688:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes4_$_t_mapping$_t_address_$_t_bool_$_$",
                              "typeString": "mapping(bytes4 => mapping(address => bool))"
                            }
                          },
                          "id": 1787,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1786,
                            "name": "_role",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1780,
                            "src": "2694:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2688:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 1789,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1788,
                          "name": "FREEZE_FLAG",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1497,
                          "src": "2701:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2688:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "functionReturnParameters": 1784,
                      "id": 1790,
                      "nodeType": "Return",
                      "src": "2681:32:7"
                    }
                  ]
                },
                "documentation": null,
                "functionSelector": "495a9825",
                "id": 1792,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "isFrozen",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 1781,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1780,
                      "mutability": "mutable",
                      "name": "_role",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1792,
                      "src": "2630:12:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 1779,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "2630:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "2629:14:7"
                },
                "returnParameters": {
                  "id": 1784,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1783,
                      "mutability": "mutable",
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1792,
                      "src": "2665:4:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1782,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2665:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "2664:6:7"
                },
                "scope": 1793,
                "src": "2612:108:7",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "public"
              }
            ],
            "scope": 1794,
            "src": "262:2460:7"
          }
        ],
        "src": "47:2675:7"
      },
      "id": 7
    },
    "contracts/lib/OptimisticQueueStateLib.sol": {
      "ast": {
        "absolutePath": "contracts/lib/OptimisticQueueStateLib.sol",
        "exportedSymbols": {
          "OptimisticQueueStateLib": [
            1857
          ]
        },
        "id": 1858,
        "license": "GPL-3.0",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1795,
            "literals": [
              "solidity",
              "0.6",
              ".8"
            ],
            "nodeType": "PragmaDirective",
            "src": "47:22:8"
          },
          {
            "abstract": false,
            "baseContracts": [],
            "contractDependencies": [],
            "contractKind": "library",
            "documentation": null,
            "fullyImplemented": true,
            "id": 1857,
            "linearizedBaseContracts": [
              1857
            ],
            "name": "OptimisticQueueStateLib",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "canonicalName": "OptimisticQueueStateLib.State",
                "id": 1803,
                "members": [
                  {
                    "id": 1796,
                    "name": "None",
                    "nodeType": "EnumValue",
                    "src": "130:4:8"
                  },
                  {
                    "id": 1797,
                    "name": "Scheduled",
                    "nodeType": "EnumValue",
                    "src": "144:9:8"
                  },
                  {
                    "id": 1798,
                    "name": "Challenged",
                    "nodeType": "EnumValue",
                    "src": "163:10:8"
                  },
                  {
                    "id": 1799,
                    "name": "Approved",
                    "nodeType": "EnumValue",
                    "src": "183:8:8"
                  },
                  {
                    "id": 1800,
                    "name": "Rejected",
                    "nodeType": "EnumValue",
                    "src": "201:8:8"
                  },
                  {
                    "id": 1801,
                    "name": "Cancelled",
                    "nodeType": "EnumValue",
                    "src": "219:9:8"
                  },
                  {
                    "id": 1802,
                    "name": "Executed",
                    "nodeType": "EnumValue",
                    "src": "238:8:8"
                  }
                ],
                "name": "State",
                "nodeType": "EnumDefinition",
                "src": "109:143:8"
              },
              {
                "canonicalName": "OptimisticQueueStateLib.Item",
                "id": 1806,
                "members": [
                  {
                    "constant": false,
                    "id": 1805,
                    "mutability": "mutable",
                    "name": "state",
                    "nodeType": "VariableDeclaration",
                    "overrides": null,
                    "scope": 1806,
                    "src": "280:11:8",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$1803",
                      "typeString": "enum OptimisticQueueStateLib.State"
                    },
                    "typeName": {
                      "contractScope": null,
                      "id": 1804,
                      "name": "State",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 1803,
                      "src": "280:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$1803",
                        "typeString": "enum OptimisticQueueStateLib.State"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  }
                ],
                "name": "Item",
                "nodeType": "StructDefinition",
                "scope": 1857,
                "src": "258:40:8",
                "visibility": "public"
              },
              {
                "body": {
                  "id": 1821,
                  "nodeType": "Block",
                  "src": "380:75:8",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_enum$_State_$1803",
                              "typeString": "enum OptimisticQueueStateLib.State"
                            },
                            "id": 1817,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1814,
                                "name": "_item",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1808,
                                "src": "398:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Item_$1806_storage_ptr",
                                  "typeString": "struct OptimisticQueueStateLib.Item storage pointer"
                                }
                              },
                              "id": 1815,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "state",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1805,
                              "src": "398:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_State_$1803",
                                "typeString": "enum OptimisticQueueStateLib.State"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 1816,
                              "name": "_requiredState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1810,
                              "src": "413:14:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_State_$1803",
                                "typeString": "enum OptimisticQueueStateLib.State"
                              }
                            },
                            "src": "398:29:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "71756575653a20626164207374617465",
                            "id": 1818,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "429:18:8",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_08178bd9486c5b3e3a5524dd7ac351a40b1ad7cb5559a77df8b1ba6afc854574",
                              "typeString": "literal_string \"queue: bad state\""
                            },
                            "value": "queue: bad state"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_08178bd9486c5b3e3a5524dd7ac351a40b1ad7cb5559a77df8b1ba6afc854574",
                              "typeString": "literal_string \"queue: bad state\""
                            }
                          ],
                          "id": 1813,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "390:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 1819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "390:58:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1820,
                      "nodeType": "ExpressionStatement",
                      "src": "390:58:8"
                    }
                  ]
                },
                "documentation": null,
                "id": 1822,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "checkState",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 1811,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1808,
                      "mutability": "mutable",
                      "name": "_item",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1822,
                      "src": "324:18:8",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Item_$1806_storage_ptr",
                        "typeString": "struct OptimisticQueueStateLib.Item"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1807,
                        "name": "Item",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1806,
                        "src": "324:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Item_$1806_storage_ptr",
                          "typeString": "struct OptimisticQueueStateLib.Item"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1810,
                      "mutability": "mutable",
                      "name": "_requiredState",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1822,
                      "src": "344:20:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$1803",
                        "typeString": "enum OptimisticQueueStateLib.State"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1809,
                        "name": "State",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1803,
                        "src": "344:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$1803",
                          "typeString": "enum OptimisticQueueStateLib.State"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "323:42:8"
                },
                "returnParameters": {
                  "id": 1812,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "380:0:8"
                },
                "scope": 1857,
                "src": "304:151:8",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1835,
                  "nodeType": "Block",
                  "src": "522:37:8",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 1833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1829,
                            "name": "_item",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1824,
                            "src": "532:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Item_$1806_storage_ptr",
                              "typeString": "struct OptimisticQueueStateLib.Item storage pointer"
                            }
                          },
                          "id": 1831,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1805,
                          "src": "532:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$1803",
                            "typeString": "enum OptimisticQueueStateLib.State"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "id": 1832,
                          "name": "_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1826,
                          "src": "546:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$1803",
                            "typeString": "enum OptimisticQueueStateLib.State"
                          }
                        },
                        "src": "532:20:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$1803",
                          "typeString": "enum OptimisticQueueStateLib.State"
                        }
                      },
                      "id": 1834,
                      "nodeType": "ExpressionStatement",
                      "src": "532:20:8"
                    }
                  ]
                },
                "documentation": null,
                "id": 1836,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "setState",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 1827,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1824,
                      "mutability": "mutable",
                      "name": "_item",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1836,
                      "src": "479:18:8",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Item_$1806_storage_ptr",
                        "typeString": "struct OptimisticQueueStateLib.Item"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1823,
                        "name": "Item",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1806,
                        "src": "479:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Item_$1806_storage_ptr",
                          "typeString": "struct OptimisticQueueStateLib.Item"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1826,
                      "mutability": "mutable",
                      "name": "_state",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1836,
                      "src": "499:12:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$1803",
                        "typeString": "enum OptimisticQueueStateLib.State"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1825,
                        "name": "State",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1803,
                        "src": "499:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$1803",
                          "typeString": "enum OptimisticQueueStateLib.State"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "478:34:8"
                },
                "returnParameters": {
                  "id": 1828,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "522:0:8"
                },
                "scope": 1857,
                "src": "461:98:8",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1855,
                  "nodeType": "Block",
                  "src": "654:81:8",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1846,
                            "name": "_item",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1838,
                            "src": "675:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Item_$1806_storage_ptr",
                              "typeString": "struct OptimisticQueueStateLib.Item storage pointer"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1847,
                            "name": "_fromState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1840,
                            "src": "682:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$1803",
                              "typeString": "enum OptimisticQueueStateLib.State"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Item_$1806_storage_ptr",
                              "typeString": "struct OptimisticQueueStateLib.Item storage pointer"
                            },
                            {
                              "typeIdentifier": "t_enum$_State_$1803",
                              "typeString": "enum OptimisticQueueStateLib.State"
                            }
                          ],
                          "id": 1845,
                          "name": "checkState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1822,
                          "src": "664:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Item_$1806_storage_ptr_$_t_enum$_State_$1803_$returns$__$",
                            "typeString": "function (struct OptimisticQueueStateLib.Item storage pointer,enum OptimisticQueueStateLib.State) view"
                          }
                        },
                        "id": 1848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "664:29:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1849,
                      "nodeType": "ExpressionStatement",
                      "src": "664:29:8"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1851,
                            "name": "_item",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1838,
                            "src": "712:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Item_$1806_storage_ptr",
                              "typeString": "struct OptimisticQueueStateLib.Item storage pointer"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1852,
                            "name": "_toState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1842,
                            "src": "719:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$1803",
                              "typeString": "enum OptimisticQueueStateLib.State"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Item_$1806_storage_ptr",
                              "typeString": "struct OptimisticQueueStateLib.Item storage pointer"
                            },
                            {
                              "typeIdentifier": "t_enum$_State_$1803",
                              "typeString": "enum OptimisticQueueStateLib.State"
                            }
                          ],
                          "id": 1850,
                          "name": "setState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1836,
                          "src": "703:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Item_$1806_storage_ptr_$_t_enum$_State_$1803_$returns$__$",
                            "typeString": "function (struct OptimisticQueueStateLib.Item storage pointer,enum OptimisticQueueStateLib.State)"
                          }
                        },
                        "id": 1853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "703:25:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1854,
                      "nodeType": "ExpressionStatement",
                      "src": "703:25:8"
                    }
                  ]
                },
                "documentation": null,
                "id": 1856,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "checkAndSetState",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 1843,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1838,
                      "mutability": "mutable",
                      "name": "_item",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1856,
                      "src": "591:18:8",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Item_$1806_storage_ptr",
                        "typeString": "struct OptimisticQueueStateLib.Item"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1837,
                        "name": "Item",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1806,
                        "src": "591:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Item_$1806_storage_ptr",
                          "typeString": "struct OptimisticQueueStateLib.Item"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1840,
                      "mutability": "mutable",
                      "name": "_fromState",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1856,
                      "src": "611:16:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$1803",
                        "typeString": "enum OptimisticQueueStateLib.State"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1839,
                        "name": "State",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1803,
                        "src": "611:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$1803",
                          "typeString": "enum OptimisticQueueStateLib.State"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1842,
                      "mutability": "mutable",
                      "name": "_toState",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1856,
                      "src": "629:14:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$1803",
                        "typeString": "enum OptimisticQueueStateLib.State"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1841,
                        "name": "State",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1803,
                        "src": "629:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$1803",
                          "typeString": "enum OptimisticQueueStateLib.State"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "590:54:8"
                },
                "returnParameters": {
                  "id": 1844,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "654:0:8"
                },
                "scope": 1857,
                "src": "565:170:8",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              }
            ],
            "scope": 1858,
            "src": "71:666:8"
          }
        ],
        "src": "47:690:8"
      },
      "id": 8
    },
    "contracts/lib/SafeERC20.sol": {
      "ast": {
        "absolutePath": "contracts/lib/SafeERC20.sol",
        "exportedSymbols": {
          "ERC20": [
            1927
          ],
          "SafeERC20": [
            2192
          ]
        },
        "id": 2193,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1859,
            "literals": [
              "solidity",
              "^",
              "0.6",
              ".8"
            ],
            "nodeType": "PragmaDirective",
            "src": "443:23:9"
          },
          {
            "abstract": true,
            "baseContracts": [],
            "contractDependencies": [],
            "contractKind": "contract",
            "documentation": {
              "id": 1860,
              "nodeType": "StructuredDocumentation",
              "src": "468:88:9",
              "text": "@title ERC20 interface\n@dev see https://github.com/ethereum/EIPs/issues/20"
            },
            "fullyImplemented": false,
            "id": 1927,
            "linearizedBaseContracts": [
              1927
            ],
            "name": "ERC20",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "body": null,
                "documentation": null,
                "functionSelector": "18160ddd",
                "id": 1865,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "totalSupply",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 1861,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "607:2:9"
                },
                "returnParameters": {
                  "id": 1864,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1863,
                      "mutability": "mutable",
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1865,
                      "src": "639:7:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1862,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "639:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "638:9:9"
                },
                "scope": 1927,
                "src": "587:61:9",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "public"
              },
              {
                "body": null,
                "documentation": null,
                "functionSelector": "70a08231",
                "id": 1872,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "balanceOf",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 1868,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1867,
                      "mutability": "mutable",
                      "name": "_who",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1872,
                      "src": "673:12:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1866,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "673:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "672:14:9"
                },
                "returnParameters": {
                  "id": 1871,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1870,
                      "mutability": "mutable",
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1872,
                      "src": "716:7:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1869,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "716:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "715:9:9"
                },
                "scope": 1927,
                "src": "654:71:9",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "public"
              },
              {
                "body": null,
                "documentation": null,
                "functionSelector": "dd62ed3e",
                "id": 1881,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "allowance",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 1877,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1874,
                      "mutability": "mutable",
                      "name": "_owner",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1881,
                      "src": "750:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1873,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "750:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1876,
                      "mutability": "mutable",
                      "name": "_spender",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1881,
                      "src": "766:16:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1875,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "766:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "749:34:9"
                },
                "returnParameters": {
                  "id": 1880,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1879,
                      "mutability": "mutable",
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1881,
                      "src": "821:7:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1878,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "821:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "820:9:9"
                },
                "scope": 1927,
                "src": "731:99:9",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "public"
              },
              {
                "body": null,
                "documentation": null,
                "functionSelector": "a9059cbb",
                "id": 1890,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "transfer",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 1886,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1883,
                      "mutability": "mutable",
                      "name": "_to",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1890,
                      "src": "854:11:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1882,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "854:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1885,
                      "mutability": "mutable",
                      "name": "_value",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1890,
                      "src": "867:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1884,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "867:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "853:29:9"
                },
                "returnParameters": {
                  "id": 1889,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1888,
                      "mutability": "mutable",
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1890,
                      "src": "907:4:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1887,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "907:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "906:6:9"
                },
                "scope": 1927,
                "src": "836:77:9",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "public"
              },
              {
                "body": null,
                "documentation": null,
                "functionSelector": "095ea7b3",
                "id": 1899,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "approve",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 1895,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1892,
                      "mutability": "mutable",
                      "name": "_spender",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1899,
                      "src": "936:16:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1891,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "936:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1894,
                      "mutability": "mutable",
                      "name": "_value",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1899,
                      "src": "954:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1893,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "954:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "935:34:9"
                },
                "returnParameters": {
                  "id": 1898,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1897,
                      "mutability": "mutable",
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1899,
                      "src": "1002:4:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1896,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1002:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1001:6:9"
                },
                "scope": 1927,
                "src": "919:89:9",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "public"
              },
              {
                "body": null,
                "documentation": null,
                "functionSelector": "23b872dd",
                "id": 1910,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "transferFrom",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 1906,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1901,
                      "mutability": "mutable",
                      "name": "_from",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1910,
                      "src": "1036:13:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1900,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1036:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1903,
                      "mutability": "mutable",
                      "name": "_to",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1910,
                      "src": "1051:11:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1902,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1051:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1905,
                      "mutability": "mutable",
                      "name": "_value",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1910,
                      "src": "1064:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1904,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1064:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1035:44:9"
                },
                "returnParameters": {
                  "id": 1909,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1908,
                      "mutability": "mutable",
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1910,
                      "src": "1112:4:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1907,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1112:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1111:6:9"
                },
                "scope": 1927,
                "src": "1014:104:9",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "public"
              },
              {
                "anonymous": false,
                "documentation": null,
                "id": 1918,
                "name": "Transfer",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 1917,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1912,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "from",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1918,
                      "src": "1148:20:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1911,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1148:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1914,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "to",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1918,
                      "src": "1178:18:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1913,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1178:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1916,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1918,
                      "src": "1206:13:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1915,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1206:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1138:87:9"
                },
                "src": "1124:102:9"
              },
              {
                "anonymous": false,
                "documentation": null,
                "id": 1926,
                "name": "Approval",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 1925,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1920,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "owner",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1926,
                      "src": "1256:21:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1919,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1256:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1922,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "spender",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1926,
                      "src": "1287:23:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1921,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1287:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1924,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1926,
                      "src": "1320:13:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1923,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1320:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1246:93:9"
                },
                "src": "1232:108:9"
              }
            ],
            "scope": 2193,
            "src": "557:785:9"
          },
          {
            "abstract": false,
            "baseContracts": [],
            "contractDependencies": [],
            "contractKind": "library",
            "documentation": null,
            "fullyImplemented": true,
            "id": 2192,
            "linearizedBaseContracts": [
              2192
            ],
            "name": "SafeERC20",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "constant": true,
                "id": 1930,
                "mutability": "constant",
                "name": "ERROR_TOKEN_BALANCE_REVERTED",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 2192,
                "src": "1368:85:9",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_memory_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1928,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1368:6:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": {
                  "argumentTypes": null,
                  "hexValue": "534146455f4552435f32305f42414c414e43455f5245564552544544",
                  "id": 1929,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1423:30:9",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_e0d6f1573408f815b546b777c74de94d1685d3d390fbf5b918b2e1339b2ed2e7",
                    "typeString": "literal_string \"SAFE_ERC_20_BALANCE_REVERTED\""
                  },
                  "value": "SAFE_ERC_20_BALANCE_REVERTED"
                },
                "visibility": "private"
              },
              {
                "constant": true,
                "id": 1933,
                "mutability": "constant",
                "name": "ERROR_TOKEN_ALLOWANCE_REVERTED",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 2192,
                "src": "1459:89:9",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_memory_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1931,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1459:6:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": {
                  "argumentTypes": null,
                  "hexValue": "534146455f4552435f32305f414c4c4f57414e43455f5245564552544544",
                  "id": 1932,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1516:32:9",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_73432bcf14a5ead3ed39eed7e97b924b49d284054d4f8b41ba74ac90002bc239",
                    "typeString": "literal_string \"SAFE_ERC_20_ALLOWANCE_REVERTED\""
                  },
                  "value": "SAFE_ERC_20_ALLOWANCE_REVERTED"
                },
                "visibility": "private"
              },
              {
                "body": {
                  "id": 1948,
                  "nodeType": "Block",
                  "src": "1668:1228:9",
                  "statements": [
                    {
                      "assignments": [
                        1943
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1943,
                          "mutability": "mutable",
                          "name": "ret",
                          "nodeType": "VariableDeclaration",
                          "overrides": null,
                          "scope": 1948,
                          "src": "1678:8:9",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "typeName": {
                            "id": 1942,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "1678:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 1944,
                      "initialValue": null,
                      "nodeType": "VariableDeclarationStatement",
                      "src": "1678:8:9"
                    },
                    {
                      "AST": {
                        "nodeType": "YulBlock",
                        "src": "1705:1165:9",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "1719:22:9",
                            "value": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1736:4:9",
                                  "type": "",
                                  "value": "0x40"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1730:5:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1730:11:9"
                            },
                            "variables": [
                              {
                                "name": "ptr",
                                "nodeType": "YulTypedName",
                                "src": "1723:3:9",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "1781:427:9",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "gas",
                                    "nodeType": "YulIdentifier",
                                    "src": "1818:3:9"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1818:5:9"
                                },
                                {
                                  "name": "_addr",
                                  "nodeType": "YulIdentifier",
                                  "src": "1872:5:9"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1921:1:9",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "_calldata",
                                      "nodeType": "YulIdentifier",
                                      "src": "1975:9:9"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1986:4:9",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1971:3:9"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1971:20:9"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "_calldata",
                                      "nodeType": "YulIdentifier",
                                      "src": "2033:9:9"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "2027:5:9"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2027:16:9"
                                },
                                {
                                  "name": "ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "2084:3:9"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2155:4:9",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "call",
                                "nodeType": "YulIdentifier",
                                "src": "1796:4:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1796:412:9"
                            },
                            "variables": [
                              {
                                "name": "success",
                                "nodeType": "YulTypedName",
                                "src": "1785:7:9",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "2240:620:9",
                              "statements": [
                                {
                                  "cases": [
                                    {
                                      "body": {
                                        "nodeType": "YulBlock",
                                        "src": "2433:48:9",
                                        "statements": [
                                          {
                                            "nodeType": "YulAssignment",
                                            "src": "2455:8:9",
                                            "value": {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "2462:1:9",
                                              "type": "",
                                              "value": "1"
                                            },
                                            "variableNames": [
                                              {
                                                "name": "ret",
                                                "nodeType": "YulIdentifier",
                                                "src": "2455:3:9"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "nodeType": "YulCase",
                                      "src": "2426:55:9",
                                      "value": {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2431:1:9",
                                        "type": "",
                                        "value": "0"
                                      }
                                    },
                                    {
                                      "body": {
                                        "nodeType": "YulBlock",
                                        "src": "2565:183:9",
                                        "statements": [
                                          {
                                            "nodeType": "YulAssignment",
                                            "src": "2706:24:9",
                                            "value": {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "ptr",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "2722:3:9"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "mload",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "2716:5:9"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "2716:10:9"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "2728:1:9",
                                                  "type": "",
                                                  "value": "1"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "eq",
                                                "nodeType": "YulIdentifier",
                                                "src": "2713:2:9"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "2713:17:9"
                                            },
                                            "variableNames": [
                                              {
                                                "name": "ret",
                                                "nodeType": "YulIdentifier",
                                                "src": "2706:3:9"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "nodeType": "YulCase",
                                      "src": "2555:193:9",
                                      "value": {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2560:4:9",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    },
                                    {
                                      "body": {
                                        "nodeType": "YulBlock",
                                        "src": "2843:3:9",
                                        "statements": []
                                      },
                                      "nodeType": "YulCase",
                                      "src": "2835:11:9",
                                      "value": "default"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "returndatasize",
                                      "nodeType": "YulIdentifier",
                                      "src": "2339:14:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2339:16:9"
                                  },
                                  "nodeType": "YulSwitch",
                                  "src": "2332:514:9"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "success",
                                  "nodeType": "YulIdentifier",
                                  "src": "2228:7:9"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2237:1:9",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "2225:2:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2225:14:9"
                            },
                            "nodeType": "YulIf",
                            "src": "2222:2:9"
                          }
                        ]
                      },
                      "evmVersion": "istanbul",
                      "externalReferences": [
                        {
                          "declaration": 1935,
                          "isOffset": false,
                          "isSlot": false,
                          "src": "1872:5:9",
                          "valueSize": 1
                        },
                        {
                          "declaration": 1937,
                          "isOffset": false,
                          "isSlot": false,
                          "src": "1975:9:9",
                          "valueSize": 1
                        },
                        {
                          "declaration": 1937,
                          "isOffset": false,
                          "isSlot": false,
                          "src": "2033:9:9",
                          "valueSize": 1
                        },
                        {
                          "declaration": 1943,
                          "isOffset": false,
                          "isSlot": false,
                          "src": "2455:3:9",
                          "valueSize": 1
                        },
                        {
                          "declaration": 1943,
                          "isOffset": false,
                          "isSlot": false,
                          "src": "2706:3:9",
                          "valueSize": 1
                        }
                      ],
                      "id": 1945,
                      "nodeType": "InlineAssembly",
                      "src": "1696:1174:9"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 1946,
                        "name": "ret",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1943,
                        "src": "2886:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "functionReturnParameters": 1941,
                      "id": 1947,
                      "nodeType": "Return",
                      "src": "2879:10:9"
                    }
                  ]
                },
                "documentation": null,
                "id": 1949,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "invokeAndCheckSuccess",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 1938,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1935,
                      "mutability": "mutable",
                      "name": "_addr",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1949,
                      "src": "1586:13:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1934,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1586:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1937,
                      "mutability": "mutable",
                      "name": "_calldata",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1949,
                      "src": "1601:22:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1936,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1601:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1585:39:9"
                },
                "returnParameters": {
                  "id": 1941,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1940,
                      "mutability": "mutable",
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1949,
                      "src": "1658:4:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1939,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1658:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1657:6:9"
                },
                "scope": 2192,
                "src": "1555:1341:9",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "private"
              },
              {
                "body": {
                  "id": 1971,
                  "nodeType": "Block",
                  "src": "3028:648:9",
                  "statements": [
                    {
                      "assignments": [
                        1961
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1961,
                          "mutability": "mutable",
                          "name": "success",
                          "nodeType": "VariableDeclaration",
                          "overrides": null,
                          "scope": 1971,
                          "src": "3038:12:9",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "typeName": {
                            "id": 1960,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "3038:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 1962,
                      "initialValue": null,
                      "nodeType": "VariableDeclarationStatement",
                      "src": "3038:12:9"
                    },
                    {
                      "assignments": [
                        1964
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1964,
                          "mutability": "mutable",
                          "name": "ret",
                          "nodeType": "VariableDeclaration",
                          "overrides": null,
                          "scope": 1971,
                          "src": "3060:11:9",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1963,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3060:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 1965,
                      "initialValue": null,
                      "nodeType": "VariableDeclarationStatement",
                      "src": "3060:11:9"
                    },
                    {
                      "AST": {
                        "nodeType": "YulBlock",
                        "src": "3090:549:9",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "3104:22:9",
                            "value": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3121:4:9",
                                  "type": "",
                                  "value": "0x40"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "3115:5:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3115:11:9"
                            },
                            "variables": [
                              {
                                "name": "ptr",
                                "nodeType": "YulTypedName",
                                "src": "3108:3:9",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "3166:382:9",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "gas",
                                    "nodeType": "YulIdentifier",
                                    "src": "3205:3:9"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3205:5:9"
                                },
                                {
                                  "name": "_addr",
                                  "nodeType": "YulIdentifier",
                                  "src": "3262:5:9"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "_calldata",
                                      "nodeType": "YulIdentifier",
                                      "src": "3315:9:9"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3326:4:9",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3311:3:9"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3311:20:9"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "_calldata",
                                      "nodeType": "YulIdentifier",
                                      "src": "3373:9:9"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "3367:5:9"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3367:16:9"
                                },
                                {
                                  "name": "ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "3424:3:9"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3495:4:9",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "staticcall",
                                "nodeType": "YulIdentifier",
                                "src": "3177:10:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3177:371:9"
                            },
                            "variableNames": [
                              {
                                "name": "success",
                                "nodeType": "YulIdentifier",
                                "src": "3166:7:9"
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "3580:49:9",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3598:17:9",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "3611:3:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "3605:5:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3605:10:9"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "ret",
                                      "nodeType": "YulIdentifier",
                                      "src": "3598:3:9"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "success",
                                  "nodeType": "YulIdentifier",
                                  "src": "3568:7:9"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3577:1:9",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "3565:2:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3565:14:9"
                            },
                            "nodeType": "YulIf",
                            "src": "3562:2:9"
                          }
                        ]
                      },
                      "evmVersion": "istanbul",
                      "externalReferences": [
                        {
                          "declaration": 1951,
                          "isOffset": false,
                          "isSlot": false,
                          "src": "3262:5:9",
                          "valueSize": 1
                        },
                        {
                          "declaration": 1953,
                          "isOffset": false,
                          "isSlot": false,
                          "src": "3315:9:9",
                          "valueSize": 1
                        },
                        {
                          "declaration": 1953,
                          "isOffset": false,
                          "isSlot": false,
                          "src": "3373:9:9",
                          "valueSize": 1
                        },
                        {
                          "declaration": 1964,
                          "isOffset": false,
                          "isSlot": false,
                          "src": "3598:3:9",
                          "valueSize": 1
                        },
                        {
                          "declaration": 1961,
                          "isOffset": false,
                          "isSlot": false,
                          "src": "3166:7:9",
                          "valueSize": 1
                        },
                        {
                          "declaration": 1961,
                          "isOffset": false,
                          "isSlot": false,
                          "src": "3568:7:9",
                          "valueSize": 1
                        }
                      ],
                      "id": 1966,
                      "nodeType": "InlineAssembly",
                      "src": "3081:558:9"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "id": 1967,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1961,
                            "src": "3656:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1968,
                            "name": "ret",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1964,
                            "src": "3665:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 1969,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3655:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                          "typeString": "tuple(bool,uint256)"
                        }
                      },
                      "functionReturnParameters": 1959,
                      "id": 1970,
                      "nodeType": "Return",
                      "src": "3648:21:9"
                    }
                  ]
                },
                "documentation": null,
                "id": 1972,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "staticInvoke",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 1954,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1951,
                      "mutability": "mutable",
                      "name": "_addr",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1972,
                      "src": "2924:13:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1950,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2924:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1953,
                      "mutability": "mutable",
                      "name": "_calldata",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1972,
                      "src": "2939:22:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1952,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2939:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "2923:39:9"
                },
                "returnParameters": {
                  "id": 1959,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1956,
                      "mutability": "mutable",
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1972,
                      "src": "3009:4:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1955,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3009:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1958,
                      "mutability": "mutable",
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1972,
                      "src": "3015:7:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1957,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3015:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "3008:15:9"
                },
                "scope": 2192,
                "src": "2902:774:9",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "private"
              },
              {
                "body": {
                  "id": 2003,
                  "nodeType": "Block",
                  "src": "3944:230:9",
                  "statements": [
                    {
                      "assignments": [
                        1985
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1985,
                          "mutability": "mutable",
                          "name": "transferCallData",
                          "nodeType": "VariableDeclaration",
                          "overrides": null,
                          "scope": 2003,
                          "src": "3954:29:9",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes"
                          },
                          "typeName": {
                            "id": 1984,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "3954:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 1994,
                      "initialValue": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1988,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1975,
                                "src": "4022:6:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$1927",
                                  "typeString": "contract ERC20"
                                }
                              },
                              "id": 1989,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "transfer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1890,
                              "src": "4022:15:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,uint256) external returns (bool)"
                              }
                            },
                            "id": 1990,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4022:24:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1991,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1977,
                            "src": "4060:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1992,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1979,
                            "src": "4077:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1986,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3986:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3986:22:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 1993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3986:108:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "3954:140:9"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1998,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1975,
                                "src": "4141:6:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$1927",
                                  "typeString": "contract ERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$1927",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "id": 1997,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4133:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1996,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4133:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 1999,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4133:15:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2000,
                            "name": "transferCallData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1985,
                            "src": "4150:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 1995,
                          "name": "invokeAndCheckSuccess",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1949,
                          "src": "4111:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,bytes memory) returns (bool)"
                          }
                        },
                        "id": 2001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4111:56:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "functionReturnParameters": 1983,
                      "id": 2002,
                      "nodeType": "Return",
                      "src": "4104:63:9"
                    }
                  ]
                },
                "documentation": {
                  "id": 1973,
                  "nodeType": "StructuredDocumentation",
                  "src": "3682:167:9",
                  "text": "@dev Same as a standards-compliant ERC20.transfer() that never reverts (returns false).\n     Note that this makes an external call to the token."
                },
                "id": 2004,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "safeTransfer",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 1980,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1975,
                      "mutability": "mutable",
                      "name": "_token",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2004,
                      "src": "3876:12:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1927",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1974,
                        "name": "ERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1927,
                        "src": "3876:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1927",
                          "typeString": "contract ERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1977,
                      "mutability": "mutable",
                      "name": "_to",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2004,
                      "src": "3890:11:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1976,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3890:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1979,
                      "mutability": "mutable",
                      "name": "_amount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2004,
                      "src": "3903:15:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1978,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3903:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "3875:44:9"
                },
                "returnParameters": {
                  "id": 1983,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1982,
                      "mutability": "mutable",
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2004,
                      "src": "3938:4:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1981,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3938:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "3937:6:9"
                },
                "scope": 2192,
                "src": "3854:320:9",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 2038,
                  "nodeType": "Block",
                  "src": "4465:261:9",
                  "statements": [
                    {
                      "assignments": [
                        2019
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 2019,
                          "mutability": "mutable",
                          "name": "transferFromCallData",
                          "nodeType": "VariableDeclaration",
                          "overrides": null,
                          "scope": 2038,
                          "src": "4475:33:9",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes"
                          },
                          "typeName": {
                            "id": 2018,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "4475:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 2029,
                      "initialValue": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2022,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2007,
                                "src": "4547:6:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$1927",
                                  "typeString": "contract ERC20"
                                }
                              },
                              "id": 2023,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "transferFrom",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1910,
                              "src": "4547:19:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,address,uint256) external returns (bool)"
                              }
                            },
                            "id": 2024,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4547:28:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2025,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2009,
                            "src": "4589:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2026,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2011,
                            "src": "4608:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2027,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2013,
                            "src": "4625:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2020,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4511:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2021,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4511:22:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 2028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4511:131:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "4475:167:9"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2033,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2007,
                                "src": "4689:6:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$1927",
                                  "typeString": "contract ERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$1927",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "id": 2032,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4681:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2031,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4681:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 2034,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4681:15:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2035,
                            "name": "transferFromCallData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2019,
                            "src": "4698:20:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 2030,
                          "name": "invokeAndCheckSuccess",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1949,
                          "src": "4659:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,bytes memory) returns (bool)"
                          }
                        },
                        "id": 2036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4659:60:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "functionReturnParameters": 2017,
                      "id": 2037,
                      "nodeType": "Return",
                      "src": "4652:67:9"
                    }
                  ]
                },
                "documentation": {
                  "id": 2005,
                  "nodeType": "StructuredDocumentation",
                  "src": "4180:171:9",
                  "text": "@dev Same as a standards-compliant ERC20.transferFrom() that never reverts (returns false).\n     Note that this makes an external call to the token."
                },
                "id": 2039,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "safeTransferFrom",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 2014,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2007,
                      "mutability": "mutable",
                      "name": "_token",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2039,
                      "src": "4382:12:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1927",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2006,
                        "name": "ERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1927,
                        "src": "4382:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1927",
                          "typeString": "contract ERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2009,
                      "mutability": "mutable",
                      "name": "_from",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2039,
                      "src": "4396:13:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2008,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4396:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2011,
                      "mutability": "mutable",
                      "name": "_to",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2039,
                      "src": "4411:11:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2010,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4411:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2013,
                      "mutability": "mutable",
                      "name": "_amount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2039,
                      "src": "4424:15:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2012,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4424:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "4381:59:9"
                },
                "returnParameters": {
                  "id": 2017,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2016,
                      "mutability": "mutable",
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2039,
                      "src": "4459:4:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2015,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4459:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "4458:6:9"
                },
                "scope": 2192,
                "src": "4356:370:9",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 2070,
                  "nodeType": "Block",
                  "src": "4997:232:9",
                  "statements": [
                    {
                      "assignments": [
                        2052
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 2052,
                          "mutability": "mutable",
                          "name": "approveCallData",
                          "nodeType": "VariableDeclaration",
                          "overrides": null,
                          "scope": 2070,
                          "src": "5007:28:9",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes"
                          },
                          "typeName": {
                            "id": 2051,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "5007:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 2061,
                      "initialValue": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2055,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2042,
                                "src": "5074:6:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$1927",
                                  "typeString": "contract ERC20"
                                }
                              },
                              "id": 2056,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "approve",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1899,
                              "src": "5074:14:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,uint256) external returns (bool)"
                              }
                            },
                            "id": 2057,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5074:23:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2058,
                            "name": "_spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2044,
                            "src": "5111:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2059,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2046,
                            "src": "5133:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2053,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5038:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2054,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5038:22:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 2060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5038:112:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "5007:143:9"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2065,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2042,
                                "src": "5197:6:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$1927",
                                  "typeString": "contract ERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$1927",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "id": 2064,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5189:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2063,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5189:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 2066,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5189:15:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2067,
                            "name": "approveCallData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2052,
                            "src": "5206:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 2062,
                          "name": "invokeAndCheckSuccess",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1949,
                          "src": "5167:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,bytes memory) returns (bool)"
                          }
                        },
                        "id": 2068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5167:55:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "functionReturnParameters": 2050,
                      "id": 2069,
                      "nodeType": "Return",
                      "src": "5160:62:9"
                    }
                  ]
                },
                "documentation": {
                  "id": 2040,
                  "nodeType": "StructuredDocumentation",
                  "src": "4732:166:9",
                  "text": "@dev Same as a standards-compliant ERC20.approve() that never reverts (returns false).\n     Note that this makes an external call to the token."
                },
                "id": 2071,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "safeApprove",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 2047,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2042,
                      "mutability": "mutable",
                      "name": "_token",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2071,
                      "src": "4924:12:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1927",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2041,
                        "name": "ERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1927,
                        "src": "4924:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1927",
                          "typeString": "contract ERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2044,
                      "mutability": "mutable",
                      "name": "_spender",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2071,
                      "src": "4938:16:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2043,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4938:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2046,
                      "mutability": "mutable",
                      "name": "_amount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2071,
                      "src": "4956:15:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2045,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4956:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "4923:49:9"
                },
                "returnParameters": {
                  "id": 2050,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2049,
                      "mutability": "mutable",
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2071,
                      "src": "4991:4:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2048,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4991:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "4990:6:9"
                },
                "scope": 2192,
                "src": "4903:326:9",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 2110,
                  "nodeType": "Block",
                  "src": "5453:325:9",
                  "statements": [
                    {
                      "assignments": [
                        2082
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 2082,
                          "mutability": "mutable",
                          "name": "balanceOfCallData",
                          "nodeType": "VariableDeclaration",
                          "overrides": null,
                          "scope": 2110,
                          "src": "5463:30:9",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes"
                          },
                          "typeName": {
                            "id": 2081,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "5463:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 2090,
                      "initialValue": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2085,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2074,
                                "src": "5532:6:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$1927",
                                  "typeString": "contract ERC20"
                                }
                              },
                              "id": 2086,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1872,
                              "src": "5532:16:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 2087,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5532:25:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2088,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2076,
                            "src": "5571:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2083,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5496:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5496:22:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 2089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5496:91:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "5463:124:9"
                    },
                    {
                      "assignments": [
                        2092,
                        2094
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 2092,
                          "mutability": "mutable",
                          "name": "success",
                          "nodeType": "VariableDeclaration",
                          "overrides": null,
                          "scope": 2110,
                          "src": "5599:12:9",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "typeName": {
                            "id": 2091,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "5599:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 2094,
                          "mutability": "mutable",
                          "name": "tokenBalance",
                          "nodeType": "VariableDeclaration",
                          "overrides": null,
                          "scope": 2110,
                          "src": "5613:20:9",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 2093,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "5613:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 2102,
                      "initialValue": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2098,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2074,
                                "src": "5658:6:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$1927",
                                  "typeString": "contract ERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$1927",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "id": 2097,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5650:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2096,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5650:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 2099,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5650:15:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2100,
                            "name": "balanceOfCallData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2082,
                            "src": "5667:17:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 2095,
                          "name": "staticInvoke",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1972,
                          "src": "5637:12:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_uint256_$",
                            "typeString": "function (address,bytes memory) view returns (bool,uint256)"
                          }
                        },
                        "id": 2101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5637:48:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                          "typeString": "tuple(bool,uint256)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "5598:87:9"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2104,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2092,
                            "src": "5703:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2105,
                            "name": "ERROR_TOKEN_BALANCE_REVERTED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1930,
                            "src": "5712:28:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 2103,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "5695:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 2106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5695:46:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2107,
                      "nodeType": "ExpressionStatement",
                      "src": "5695:46:9"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 2108,
                        "name": "tokenBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2094,
                        "src": "5759:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 2080,
                      "id": 2109,
                      "nodeType": "Return",
                      "src": "5752:19:9"
                    }
                  ]
                },
                "documentation": {
                  "id": 2072,
                  "nodeType": "StructuredDocumentation",
                  "src": "5235:126:9",
                  "text": "@dev Static call into ERC20.balanceOf().\nReverts if the call fails for some reason (should never fail)."
                },
                "id": 2111,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "staticBalanceOf",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 2077,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2074,
                      "mutability": "mutable",
                      "name": "_token",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2111,
                      "src": "5391:12:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1927",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2073,
                        "name": "ERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1927,
                        "src": "5391:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1927",
                          "typeString": "contract ERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2076,
                      "mutability": "mutable",
                      "name": "_owner",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2111,
                      "src": "5405:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2075,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5405:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "5390:30:9"
                },
                "returnParameters": {
                  "id": 2080,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2079,
                      "mutability": "mutable",
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2111,
                      "src": "5444:7:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2078,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5444:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "5443:9:9"
                },
                "scope": 2192,
                "src": "5366:412:9",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 2153,
                  "nodeType": "Block",
                  "src": "6020:343:9",
                  "statements": [
                    {
                      "assignments": [
                        2124
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 2124,
                          "mutability": "mutable",
                          "name": "allowanceCallData",
                          "nodeType": "VariableDeclaration",
                          "overrides": null,
                          "scope": 2153,
                          "src": "6030:30:9",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes"
                          },
                          "typeName": {
                            "id": 2123,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "6030:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 2133,
                      "initialValue": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2127,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2114,
                                "src": "6099:6:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$1927",
                                  "typeString": "contract ERC20"
                                }
                              },
                              "id": 2128,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "allowance",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1881,
                              "src": "6099:16:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address,address) view external returns (uint256)"
                              }
                            },
                            "id": 2129,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "6099:25:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2130,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2116,
                            "src": "6138:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2131,
                            "name": "_spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2118,
                            "src": "6158:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2125,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6063:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "6063:22:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 2132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6063:113:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "6030:146:9"
                    },
                    {
                      "assignments": [
                        2135,
                        2137
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 2135,
                          "mutability": "mutable",
                          "name": "success",
                          "nodeType": "VariableDeclaration",
                          "overrides": null,
                          "scope": 2153,
                          "src": "6188:12:9",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "typeName": {
                            "id": 2134,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "6188:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 2137,
                          "mutability": "mutable",
                          "name": "allowance",
                          "nodeType": "VariableDeclaration",
                          "overrides": null,
                          "scope": 2153,
                          "src": "6202:17:9",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 2136,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "6202:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 2145,
                      "initialValue": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2141,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2114,
                                "src": "6244:6:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$1927",
                                  "typeString": "contract ERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$1927",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "id": 2140,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6236:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2139,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6236:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 2142,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6236:15:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2143,
                            "name": "allowanceCallData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2124,
                            "src": "6253:17:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 2138,
                          "name": "staticInvoke",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1972,
                          "src": "6223:12:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_uint256_$",
                            "typeString": "function (address,bytes memory) view returns (bool,uint256)"
                          }
                        },
                        "id": 2144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6223:48:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                          "typeString": "tuple(bool,uint256)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "6187:84:9"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2147,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2135,
                            "src": "6289:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2148,
                            "name": "ERROR_TOKEN_ALLOWANCE_REVERTED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1933,
                            "src": "6298:30:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 2146,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "6281:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 2149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6281:48:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2150,
                      "nodeType": "ExpressionStatement",
                      "src": "6281:48:9"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 2151,
                        "name": "allowance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2137,
                        "src": "6347:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 2122,
                      "id": 2152,
                      "nodeType": "Return",
                      "src": "6340:16:9"
                    }
                  ]
                },
                "documentation": {
                  "id": 2112,
                  "nodeType": "StructuredDocumentation",
                  "src": "5784:126:9",
                  "text": "@dev Static call into ERC20.allowance().\nReverts if the call fails for some reason (should never fail)."
                },
                "id": 2154,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "staticAllowance",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 2119,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2114,
                      "mutability": "mutable",
                      "name": "_token",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2154,
                      "src": "5940:12:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1927",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2113,
                        "name": "ERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1927,
                        "src": "5940:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1927",
                          "typeString": "contract ERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2116,
                      "mutability": "mutable",
                      "name": "_owner",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2154,
                      "src": "5954:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2115,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5954:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2118,
                      "mutability": "mutable",
                      "name": "_spender",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2154,
                      "src": "5970:16:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2117,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5970:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "5939:48:9"
                },
                "returnParameters": {
                  "id": 2122,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2121,
                      "mutability": "mutable",
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2154,
                      "src": "6011:7:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2120,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6011:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "6010:9:9"
                },
                "scope": 2192,
                "src": "5915:448:9",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 2190,
                  "nodeType": "Block",
                  "src": "6575:289:9",
                  "statements": [
                    {
                      "assignments": [
                        2163
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 2163,
                          "mutability": "mutable",
                          "name": "totalSupplyCallData",
                          "nodeType": "VariableDeclaration",
                          "overrides": null,
                          "scope": 2190,
                          "src": "6585:32:9",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes"
                          },
                          "typeName": {
                            "id": 2162,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "6585:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 2170,
                      "initialValue": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2166,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2157,
                                "src": "6643:6:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$1927",
                                  "typeString": "contract ERC20"
                                }
                              },
                              "id": 2167,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "totalSupply",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1865,
                              "src": "6643:18:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 2168,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "6643:27:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2164,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6620:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "6620:22:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 2169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6620:51:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "6585:86:9"
                    },
                    {
                      "assignments": [
                        2172,
                        2174
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 2172,
                          "mutability": "mutable",
                          "name": "success",
                          "nodeType": "VariableDeclaration",
                          "overrides": null,
                          "scope": 2190,
                          "src": "6683:12:9",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "typeName": {
                            "id": 2171,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "6683:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 2174,
                          "mutability": "mutable",
                          "name": "totalSupply",
                          "nodeType": "VariableDeclaration",
                          "overrides": null,
                          "scope": 2190,
                          "src": "6697:19:9",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 2173,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "6697:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 2182,
                      "initialValue": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2178,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2157,
                                "src": "6741:6:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$1927",
                                  "typeString": "contract ERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$1927",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "id": 2177,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6733:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2176,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6733:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 2179,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6733:15:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2180,
                            "name": "totalSupplyCallData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2163,
                            "src": "6750:19:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 2175,
                          "name": "staticInvoke",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1972,
                          "src": "6720:12:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_uint256_$",
                            "typeString": "function (address,bytes memory) view returns (bool,uint256)"
                          }
                        },
                        "id": 2181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6720:50:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                          "typeString": "tuple(bool,uint256)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "6682:88:9"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2184,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2172,
                            "src": "6788:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2185,
                            "name": "ERROR_TOKEN_ALLOWANCE_REVERTED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1933,
                            "src": "6797:30:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 2183,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "6780:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 2186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6780:48:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2187,
                      "nodeType": "ExpressionStatement",
                      "src": "6780:48:9"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 2188,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2174,
                        "src": "6846:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 2161,
                      "id": 2189,
                      "nodeType": "Return",
                      "src": "6839:18:9"
                    }
                  ]
                },
                "documentation": {
                  "id": 2155,
                  "nodeType": "StructuredDocumentation",
                  "src": "6369:128:9",
                  "text": "@dev Static call into ERC20.totalSupply().\nReverts if the call fails for some reason (should never fail)."
                },
                "id": 2191,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "staticTotalSupply",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 2158,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2157,
                      "mutability": "mutable",
                      "name": "_token",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2191,
                      "src": "6529:12:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1927",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2156,
                        "name": "ERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1927,
                        "src": "6529:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1927",
                          "typeString": "contract ERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "6528:14:9"
                },
                "returnParameters": {
                  "id": 2161,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2160,
                      "mutability": "mutable",
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2191,
                      "src": "6566:7:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2159,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6566:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "6565:9:9"
                },
                "scope": 2192,
                "src": "6502:362:9",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "internal"
              }
            ],
            "scope": 2193,
            "src": "1344:5522:9"
          }
        ],
        "src": "443:6423:9"
      },
      "id": 9
    },
    "erc3k/contracts/ERC3000.sol": {
      "ast": {
        "absolutePath": "erc3k/contracts/ERC3000.sol",
        "exportedSymbols": {
          "ERC3000": [
            2245
          ]
        },
        "id": 2246,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 2194,
            "literals": [
              "solidity",
              "^",
              "0.6",
              ".8"
            ],
            "nodeType": "PragmaDirective",
            "src": "43:23:10"
          },
          {
            "id": 2195,
            "literals": [
              "experimental",
              "ABIEncoderV2"
            ],
            "nodeType": "PragmaDirective",
            "src": "67:33:10"
          },
          {
            "absolutePath": "erc3k/contracts/lib/erc165/ERC165.sol",
            "file": "./lib/erc165/ERC165.sol",
            "id": 2196,
            "nodeType": "ImportDirective",
            "scope": 2246,
            "sourceUnit": 2570,
            "src": "102:33:10",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "absolutePath": "erc3k/contracts/IERC3000.sol",
            "file": "./IERC3000.sol",
            "id": 2197,
            "nodeType": "ImportDirective",
            "scope": 2246,
            "sourceUnit": 2524,
            "src": "137:24:10",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "abstract": true,
            "baseContracts": [
              {
                "arguments": null,
                "baseName": {
                  "contractScope": null,
                  "id": 2198,
                  "name": "IERC3000",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 2523,
                  "src": "192:8:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC3000_$2523",
                    "typeString": "contract IERC3000"
                  }
                },
                "id": 2199,
                "nodeType": "InheritanceSpecifier",
                "src": "192:8:10"
              },
              {
                "arguments": null,
                "baseName": {
                  "contractScope": null,
                  "id": 2200,
                  "name": "ERC165",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 2569,
                  "src": "202:6:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC165_$2569",
                    "typeString": "contract ERC165"
                  }
                },
                "id": 2201,
                "nodeType": "InheritanceSpecifier",
                "src": "202:6:10"
              }
            ],
            "contractDependencies": [
              2523,
              2569
            ],
            "contractKind": "contract",
            "documentation": null,
            "fullyImplemented": false,
            "id": 2245,
            "linearizedBaseContracts": [
              2245,
              2569,
              2523
            ],
            "name": "ERC3000",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "constant": true,
                "id": 2226,
                "mutability": "constant",
                "name": "ERC3000_INTERFACE_ID",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 2245,
                "src": "215:239:10",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes4",
                  "typeString": "bytes4"
                },
                "typeName": {
                  "id": 2202,
                  "name": "bytes4",
                  "nodeType": "ElementaryTypeName",
                  "src": "215:6:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  }
                },
                "value": {
                  "argumentTypes": null,
                  "commonType": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "id": 2225,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "leftExpression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    },
                    "id": 2221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 2217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 2213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 2209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2203,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "271:4:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC3000_$2245",
                                  "typeString": "contract ERC3000"
                                }
                              },
                              "id": 2204,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "schedule",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2424,
                              "src": "271:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_struct$_Container_$2254_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (struct ERC3000Data.Container memory) external returns (bytes32)"
                              }
                            },
                            "id": 2205,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "271:22:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "^",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2206,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "304:4:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC3000_$2245",
                                  "typeString": "contract ERC3000"
                                }
                              },
                              "id": 2207,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "execute",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2440,
                              "src": "304:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_struct$_Container_$2254_memory_ptr_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                                "typeString": "function (struct ERC3000Data.Container memory) external returns (bytes memory[] memory)"
                              }
                            },
                            "id": 2208,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "304:21:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "271:54:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "^",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2210,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "336:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC3000_$2245",
                                "typeString": "contract ERC3000"
                              }
                            },
                            "id": 2211,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "challenge",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2458,
                            "src": "336:14:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_struct$_Container_$2254_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (struct ERC3000Data.Container memory,bytes memory) external returns (uint256)"
                            }
                          },
                          "id": 2212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "336:23:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "271:88:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "^",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2214,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "370:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC3000_$2245",
                              "typeString": "contract ERC3000"
                            }
                          },
                          "id": 2215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "resolve",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2480,
                          "src": "370:12:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_struct$_Container_$2254_memory_ptr_$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (struct ERC3000Data.Container memory,uint256) external returns (bytes memory[] memory)"
                          }
                        },
                        "id": 2216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "370:21:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "271:120:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "^",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2218,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "402:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC3000_$2245",
                            "typeString": "contract ERC3000"
                          }
                        },
                        "id": 2219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "veto",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2497,
                        "src": "402:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_struct$_Config_$2288_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                          "typeString": "function (bytes32,struct ERC3000Data.Config memory,bytes memory) external"
                        }
                      },
                      "id": 2220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "402:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "271:149:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "nodeType": "BinaryOperation",
                  "operator": "^",
                  "rightExpression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2222,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "431:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC3000_$2245",
                          "typeString": "contract ERC3000"
                        }
                      },
                      "id": 2223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "configure",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2514,
                      "src": "431:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_Config_$2288_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (struct ERC3000Data.Config memory) external returns (bytes32)"
                      }
                    },
                    "id": 2224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "selector",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "431:23:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "src": "271:183:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  }
                },
                "visibility": "internal"
              },
              {
                "baseFunctions": [
                  2568
                ],
                "body": {
                  "id": 2243,
                  "nodeType": "Block",
                  "src": "558:101:10",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 2236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2234,
                            "name": "_interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2228,
                            "src": "575:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 2235,
                            "name": "ERC3000_INTERFACE_ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2226,
                            "src": "591:20:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "575:36:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2239,
                              "name": "_interfaceId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2228,
                              "src": "639:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2237,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -25,
                              "src": "615:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_super$_ERC3000_$2245",
                                "typeString": "contract super ERC3000"
                              }
                            },
                            "id": 2238,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "supportsInterface",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2568,
                            "src": "615:23:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$_t_bool_$",
                              "typeString": "function (bytes4) pure returns (bool)"
                            }
                          },
                          "id": 2240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "615:37:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "575:77:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "functionReturnParameters": 2233,
                      "id": 2242,
                      "nodeType": "Return",
                      "src": "568:84:10"
                    }
                  ]
                },
                "documentation": null,
                "functionSelector": "01ffc9a7",
                "id": 2244,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "supportsInterface",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 2230,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "522:8:10"
                },
                "parameters": {
                  "id": 2229,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2228,
                      "mutability": "mutable",
                      "name": "_interfaceId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2244,
                      "src": "493:19:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 2227,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "493:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "492:21:10"
                },
                "returnParameters": {
                  "id": 2233,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2232,
                      "mutability": "mutable",
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2244,
                      "src": "552:4:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2231,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "552:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "551:6:10"
                },
                "scope": 2245,
                "src": "466:193:10",
                "stateMutability": "pure",
                "virtual": true,
                "visibility": "public"
              }
            ],
            "scope": 2246,
            "src": "163:498:10"
          }
        ],
        "src": "43:619:10"
      },
      "id": 10
    },
    "erc3k/contracts/ERC3000Data.sol": {
      "ast": {
        "absolutePath": "erc3k/contracts/ERC3000Data.sol",
        "exportedSymbols": {
          "ERC3000Data": [
            2379
          ]
        },
        "id": 2380,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 2247,
            "literals": [
              "solidity",
              "^",
              "0.6",
              ".8"
            ],
            "nodeType": "PragmaDirective",
            "src": "43:23:11"
          },
          {
            "id": 2248,
            "literals": [
              "experimental",
              "ABIEncoderV2"
            ],
            "nodeType": "PragmaDirective",
            "src": "67:33:11"
          },
          {
            "absolutePath": "erc3k/contracts/IERC3000Executor.sol",
            "file": "./IERC3000Executor.sol",
            "id": 2249,
            "nodeType": "ImportDirective",
            "scope": 2380,
            "sourceUnit": 2548,
            "src": "102:32:11",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "abstract": false,
            "baseContracts": [],
            "contractDependencies": [],
            "contractKind": "library",
            "documentation": null,
            "fullyImplemented": true,
            "id": 2379,
            "linearizedBaseContracts": [
              2379
            ],
            "name": "ERC3000Data",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "canonicalName": "ERC3000Data.Container",
                "id": 2254,
                "members": [
                  {
                    "constant": false,
                    "id": 2251,
                    "mutability": "mutable",
                    "name": "payload",
                    "nodeType": "VariableDeclaration",
                    "overrides": null,
                    "scope": 2254,
                    "src": "233:15:11",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Payload_$2268_storage_ptr",
                      "typeString": "struct ERC3000Data.Payload"
                    },
                    "typeName": {
                      "contractScope": null,
                      "id": 2250,
                      "name": "Payload",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 2268,
                      "src": "233:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Payload_$2268_storage_ptr",
                        "typeString": "struct ERC3000Data.Payload"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2253,
                    "mutability": "mutable",
                    "name": "config",
                    "nodeType": "VariableDeclaration",
                    "overrides": null,
                    "scope": 2254,
                    "src": "258:13:11",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Config_$2288_storage_ptr",
                      "typeString": "struct ERC3000Data.Config"
                    },
                    "typeName": {
                      "contractScope": null,
                      "id": 2252,
                      "name": "Config",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 2288,
                      "src": "258:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Config_$2288_storage_ptr",
                        "typeString": "struct ERC3000Data.Config"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  }
                ],
                "name": "Container",
                "nodeType": "StructDefinition",
                "scope": 2379,
                "src": "206:72:11",
                "visibility": "public"
              },
              {
                "canonicalName": "ERC3000Data.Payload",
                "id": 2268,
                "members": [
                  {
                    "constant": false,
                    "id": 2256,
                    "mutability": "mutable",
                    "name": "nonce",
                    "nodeType": "VariableDeclaration",
                    "overrides": null,
                    "scope": 2268,
                    "src": "309:13:11",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 2255,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "309:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2258,
                    "mutability": "mutable",
                    "name": "executionTime",
                    "nodeType": "VariableDeclaration",
                    "overrides": null,
                    "scope": 2268,
                    "src": "332:21:11",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 2257,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "332:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2260,
                    "mutability": "mutable",
                    "name": "submitter",
                    "nodeType": "VariableDeclaration",
                    "overrides": null,
                    "scope": 2268,
                    "src": "363:17:11",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 2259,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "363:7:11",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2262,
                    "mutability": "mutable",
                    "name": "executor",
                    "nodeType": "VariableDeclaration",
                    "overrides": null,
                    "scope": 2268,
                    "src": "390:25:11",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC3000Executor_$2547",
                      "typeString": "contract IERC3000Executor"
                    },
                    "typeName": {
                      "contractScope": null,
                      "id": 2261,
                      "name": "IERC3000Executor",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 2547,
                      "src": "390:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC3000Executor_$2547",
                        "typeString": "contract IERC3000Executor"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2265,
                    "mutability": "mutable",
                    "name": "actions",
                    "nodeType": "VariableDeclaration",
                    "overrides": null,
                    "scope": 2268,
                    "src": "425:16:11",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Action_$2275_storage_$dyn_storage_ptr",
                      "typeString": "struct ERC3000Data.Action[]"
                    },
                    "typeName": {
                      "baseType": {
                        "contractScope": null,
                        "id": 2263,
                        "name": "Action",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2275,
                        "src": "425:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Action_$2275_storage_ptr",
                          "typeString": "struct ERC3000Data.Action"
                        }
                      },
                      "id": 2264,
                      "length": null,
                      "nodeType": "ArrayTypeName",
                      "src": "425:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Action_$2275_storage_$dyn_storage_ptr",
                        "typeString": "struct ERC3000Data.Action[]"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2267,
                    "mutability": "mutable",
                    "name": "proof",
                    "nodeType": "VariableDeclaration",
                    "overrides": null,
                    "scope": 2268,
                    "src": "451:11:11",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    },
                    "typeName": {
                      "id": 2266,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "451:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  }
                ],
                "name": "Payload",
                "nodeType": "StructDefinition",
                "scope": 2379,
                "src": "284:185:11",
                "visibility": "public"
              },
              {
                "canonicalName": "ERC3000Data.Action",
                "id": 2275,
                "members": [
                  {
                    "constant": false,
                    "id": 2270,
                    "mutability": "mutable",
                    "name": "to",
                    "nodeType": "VariableDeclaration",
                    "overrides": null,
                    "scope": 2275,
                    "src": "499:10:11",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 2269,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "499:7:11",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2272,
                    "mutability": "mutable",
                    "name": "value",
                    "nodeType": "VariableDeclaration",
                    "overrides": null,
                    "scope": 2275,
                    "src": "519:13:11",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 2271,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "519:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2274,
                    "mutability": "mutable",
                    "name": "data",
                    "nodeType": "VariableDeclaration",
                    "overrides": null,
                    "scope": 2275,
                    "src": "542:10:11",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    },
                    "typeName": {
                      "id": 2273,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "542:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  }
                ],
                "name": "Action",
                "nodeType": "StructDefinition",
                "scope": 2379,
                "src": "475:84:11",
                "visibility": "public"
              },
              {
                "canonicalName": "ERC3000Data.Config",
                "id": 2288,
                "members": [
                  {
                    "constant": false,
                    "id": 2277,
                    "mutability": "mutable",
                    "name": "executionDelay",
                    "nodeType": "VariableDeclaration",
                    "overrides": null,
                    "scope": 2288,
                    "src": "589:22:11",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 2276,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "589:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2279,
                    "mutability": "mutable",
                    "name": "scheduleDeposit",
                    "nodeType": "VariableDeclaration",
                    "overrides": null,
                    "scope": 2288,
                    "src": "621:26:11",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Collateral_$2293_storage_ptr",
                      "typeString": "struct ERC3000Data.Collateral"
                    },
                    "typeName": {
                      "contractScope": null,
                      "id": 2278,
                      "name": "Collateral",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 2293,
                      "src": "621:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Collateral_$2293_storage_ptr",
                        "typeString": "struct ERC3000Data.Collateral"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2281,
                    "mutability": "mutable",
                    "name": "challengeDeposit",
                    "nodeType": "VariableDeclaration",
                    "overrides": null,
                    "scope": 2288,
                    "src": "657:27:11",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Collateral_$2293_storage_ptr",
                      "typeString": "struct ERC3000Data.Collateral"
                    },
                    "typeName": {
                      "contractScope": null,
                      "id": 2280,
                      "name": "Collateral",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 2293,
                      "src": "657:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Collateral_$2293_storage_ptr",
                        "typeString": "struct ERC3000Data.Collateral"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2283,
                    "mutability": "mutable",
                    "name": "vetoDeposit",
                    "nodeType": "VariableDeclaration",
                    "overrides": null,
                    "scope": 2288,
                    "src": "694:22:11",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Collateral_$2293_storage_ptr",
                      "typeString": "struct ERC3000Data.Collateral"
                    },
                    "typeName": {
                      "contractScope": null,
                      "id": 2282,
                      "name": "Collateral",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 2293,
                      "src": "694:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Collateral_$2293_storage_ptr",
                        "typeString": "struct ERC3000Data.Collateral"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2285,
                    "mutability": "mutable",
                    "name": "resolver",
                    "nodeType": "VariableDeclaration",
                    "overrides": null,
                    "scope": 2288,
                    "src": "726:16:11",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 2284,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "726:7:11",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2287,
                    "mutability": "mutable",
                    "name": "rules",
                    "nodeType": "VariableDeclaration",
                    "overrides": null,
                    "scope": 2288,
                    "src": "752:11:11",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    },
                    "typeName": {
                      "id": 2286,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "752:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  }
                ],
                "name": "Config",
                "nodeType": "StructDefinition",
                "scope": 2379,
                "src": "565:205:11",
                "visibility": "public"
              },
              {
                "canonicalName": "ERC3000Data.Collateral",
                "id": 2293,
                "members": [
                  {
                    "constant": false,
                    "id": 2290,
                    "mutability": "mutable",
                    "name": "token",
                    "nodeType": "VariableDeclaration",
                    "overrides": null,
                    "scope": 2293,
                    "src": "804:13:11",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 2289,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "804:7:11",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 2292,
                    "mutability": "mutable",
                    "name": "amount",
                    "nodeType": "VariableDeclaration",
                    "overrides": null,
                    "scope": 2293,
                    "src": "827:14:11",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 2291,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "827:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  }
                ],
                "name": "Collateral",
                "nodeType": "StructDefinition",
                "scope": 2379,
                "src": "776:72:11",
                "visibility": "public"
              },
              {
                "body": {
                  "id": 2312,
                  "nodeType": "Block",
                  "src": "950:94:11",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "657263336b2d7631",
                                "id": 2305,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "994:10:11",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_f22326637739de46be47833cdaf5e3f3a7c757cc8c2600d6804a50f31e2056a6",
                                  "typeString": "literal_string \"erc3k-v1\""
                                },
                                "value": "erc3k-v1"
                              },
                              {
                                "argumentTypes": null,
                                "id": 2306,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1006:4:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC3000Data_$2379",
                                  "typeString": "library ERC3000Data"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 2307,
                                "name": "payloadHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2295,
                                "src": "1012:11:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 2308,
                                "name": "configHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2297,
                                "src": "1025:10:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_f22326637739de46be47833cdaf5e3f3a7c757cc8c2600d6804a50f31e2056a6",
                                  "typeString": "literal_string \"erc3k-v1\""
                                },
                                {
                                  "typeIdentifier": "t_contract$_ERC3000Data_$2379",
                                  "typeString": "library ERC3000Data"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 2303,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "977:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 2304,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "977:16:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 2309,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "977:59:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 2302,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "967:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 2310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "967:70:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "functionReturnParameters": 2301,
                      "id": 2311,
                      "nodeType": "Return",
                      "src": "960:77:11"
                    }
                  ]
                },
                "documentation": null,
                "id": 2313,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "containerHash",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 2298,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2295,
                      "mutability": "mutable",
                      "name": "payloadHash",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2313,
                      "src": "877:19:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2294,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "877:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2297,
                      "mutability": "mutable",
                      "name": "configHash",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2313,
                      "src": "898:18:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2296,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "898:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "876:41:11"
                },
                "returnParameters": {
                  "id": 2301,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2300,
                      "mutability": "mutable",
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2313,
                      "src": "941:7:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2299,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "941:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "940:9:11"
                },
                "scope": 2379,
                "src": "854:190:11",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 2331,
                  "nodeType": "Block",
                  "src": "1124:86:11",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2322,
                                  "name": "container",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2315,
                                  "src": "1160:9:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Container_$2254_memory_ptr",
                                    "typeString": "struct ERC3000Data.Container memory"
                                  }
                                },
                                "id": 2323,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "payload",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2251,
                                "src": "1160:17:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Payload_$2268_memory_ptr",
                                  "typeString": "struct ERC3000Data.Payload memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Payload_$2268_memory_ptr",
                                  "typeString": "struct ERC3000Data.Payload memory"
                                }
                              ],
                              "id": 2321,
                              "name": "hash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                2332,
                                2363,
                                2378
                              ],
                              "referencedDeclaration": 2363,
                              "src": "1155:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_struct$_Payload_$2268_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (struct ERC3000Data.Payload memory) pure returns (bytes32)"
                              }
                            },
                            "id": 2324,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1155:23:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2326,
                                  "name": "container",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2315,
                                  "src": "1185:9:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Container_$2254_memory_ptr",
                                    "typeString": "struct ERC3000Data.Container memory"
                                  }
                                },
                                "id": 2327,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "config",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2253,
                                "src": "1185:16:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Config_$2288_memory_ptr",
                                  "typeString": "struct ERC3000Data.Config memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Config_$2288_memory_ptr",
                                  "typeString": "struct ERC3000Data.Config memory"
                                }
                              ],
                              "id": 2325,
                              "name": "hash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                2332,
                                2363,
                                2378
                              ],
                              "referencedDeclaration": 2378,
                              "src": "1180:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_struct$_Config_$2288_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (struct ERC3000Data.Config memory) pure returns (bytes32)"
                              }
                            },
                            "id": 2328,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1180:22:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 2320,
                          "name": "containerHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2313,
                          "src": "1141:13:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                            "typeString": "function (bytes32,bytes32) view returns (bytes32)"
                          }
                        },
                        "id": 2329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1141:62:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "functionReturnParameters": 2319,
                      "id": 2330,
                      "nodeType": "Return",
                      "src": "1134:69:11"
                    }
                  ]
                },
                "documentation": null,
                "id": 2332,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "hash",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 2316,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2315,
                      "mutability": "mutable",
                      "name": "container",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2332,
                      "src": "1064:26:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Container_$2254_memory_ptr",
                        "typeString": "struct ERC3000Data.Container"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2314,
                        "name": "Container",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2254,
                        "src": "1064:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Container_$2254_storage_ptr",
                          "typeString": "struct ERC3000Data.Container"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1063:28:11"
                },
                "returnParameters": {
                  "id": 2319,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2318,
                      "mutability": "mutable",
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2332,
                      "src": "1115:7:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2317,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1115:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1114:9:11"
                },
                "scope": 2379,
                "src": "1050:160:11",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 2362,
                  "nodeType": "Block",
                  "src": "1286:285:11",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2342,
                                  "name": "payload",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2334,
                                  "src": "1360:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Payload_$2268_memory_ptr",
                                    "typeString": "struct ERC3000Data.Payload memory"
                                  }
                                },
                                "id": 2343,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "nonce",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2256,
                                "src": "1360:13:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2344,
                                  "name": "payload",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2334,
                                  "src": "1391:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Payload_$2268_memory_ptr",
                                    "typeString": "struct ERC3000Data.Payload memory"
                                  }
                                },
                                "id": 2345,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "submitter",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2260,
                                "src": "1391:17:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2346,
                                  "name": "payload",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2334,
                                  "src": "1426:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Payload_$2268_memory_ptr",
                                    "typeString": "struct ERC3000Data.Payload memory"
                                  }
                                },
                                "id": 2347,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "executor",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2262,
                                "src": "1426:16:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC3000Executor_$2547",
                                  "typeString": "contract IERC3000Executor"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 2351,
                                          "name": "payload",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2334,
                                          "src": "1481:7:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Payload_$2268_memory_ptr",
                                            "typeString": "struct ERC3000Data.Payload memory"
                                          }
                                        },
                                        "id": 2352,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "actions",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2265,
                                        "src": "1481:15:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Action_$2275_memory_ptr_$dyn_memory_ptr",
                                          "typeString": "struct ERC3000Data.Action memory[] memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_array$_t_struct$_Action_$2275_memory_ptr_$dyn_memory_ptr",
                                          "typeString": "struct ERC3000Data.Action memory[] memory"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 2349,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "1470:3:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 2350,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "encode",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "1470:10:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 2353,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1470:27:11",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 2348,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -8,
                                  "src": "1460:9:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 2354,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1460:38:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2356,
                                      "name": "payload",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2334,
                                      "src": "1526:7:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Payload_$2268_memory_ptr",
                                        "typeString": "struct ERC3000Data.Payload memory"
                                      }
                                    },
                                    "id": 2357,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "proof",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2267,
                                    "src": "1526:13:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 2355,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -8,
                                  "src": "1516:9:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 2358,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1516:24:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_contract$_IERC3000Executor_$2547",
                                  "typeString": "contract IERC3000Executor"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 2340,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "1326:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 2341,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1326:16:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 2359,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1326:228:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 2339,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "1303:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 2360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1303:261:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "functionReturnParameters": 2338,
                      "id": 2361,
                      "nodeType": "Return",
                      "src": "1296:268:11"
                    }
                  ]
                },
                "documentation": null,
                "id": 2363,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "hash",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 2335,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2334,
                      "mutability": "mutable",
                      "name": "payload",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2363,
                      "src": "1230:22:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Payload_$2268_memory_ptr",
                        "typeString": "struct ERC3000Data.Payload"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2333,
                        "name": "Payload",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2268,
                        "src": "1230:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Payload_$2268_storage_ptr",
                          "typeString": "struct ERC3000Data.Payload"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1229:24:11"
                },
                "returnParameters": {
                  "id": 2338,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2337,
                      "mutability": "mutable",
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2363,
                      "src": "1277:7:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2336,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1277:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1276:9:11"
                },
                "scope": 2379,
                "src": "1216:355:11",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 2377,
                  "nodeType": "Block",
                  "src": "1645:53:11",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2373,
                                "name": "config",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2365,
                                "src": "1683:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Config_$2288_memory_ptr",
                                  "typeString": "struct ERC3000Data.Config memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Config_$2288_memory_ptr",
                                  "typeString": "struct ERC3000Data.Config memory"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 2371,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "1672:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 2372,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1672:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 2374,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1672:18:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 2370,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "1662:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 2375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1662:29:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "functionReturnParameters": 2369,
                      "id": 2376,
                      "nodeType": "Return",
                      "src": "1655:36:11"
                    }
                  ]
                },
                "documentation": null,
                "id": 2378,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "hash",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 2366,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2365,
                      "mutability": "mutable",
                      "name": "config",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2378,
                      "src": "1591:20:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Config_$2288_memory_ptr",
                        "typeString": "struct ERC3000Data.Config"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2364,
                        "name": "Config",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2288,
                        "src": "1591:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$2288_storage_ptr",
                          "typeString": "struct ERC3000Data.Config"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1590:22:11"
                },
                "returnParameters": {
                  "id": 2369,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2368,
                      "mutability": "mutable",
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2378,
                      "src": "1636:7:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2367,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1636:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1635:9:11"
                },
                "scope": 2379,
                "src": "1577:121:11",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "internal"
              }
            ],
            "scope": 2380,
            "src": "136:1564:11"
          }
        ],
        "src": "43:1658:11"
      },
      "id": 11
    },
    "erc3k/contracts/ERC3000Executor.sol": {
      "ast": {
        "absolutePath": "erc3k/contracts/ERC3000Executor.sol",
        "exportedSymbols": {
          "ERC3000Executor": [
            2412
          ]
        },
        "id": 2413,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 2381,
            "literals": [
              "solidity",
              "^",
              "0.6",
              ".8"
            ],
            "nodeType": "PragmaDirective",
            "src": "43:23:12"
          },
          {
            "id": 2382,
            "literals": [
              "experimental",
              "ABIEncoderV2"
            ],
            "nodeType": "PragmaDirective",
            "src": "67:33:12"
          },
          {
            "absolutePath": "erc3k/contracts/lib/erc165/ERC165.sol",
            "file": "./lib/erc165/ERC165.sol",
            "id": 2383,
            "nodeType": "ImportDirective",
            "scope": 2413,
            "sourceUnit": 2570,
            "src": "102:33:12",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "absolutePath": "erc3k/contracts/IERC3000Executor.sol",
            "file": "./IERC3000Executor.sol",
            "id": 2384,
            "nodeType": "ImportDirective",
            "scope": 2413,
            "sourceUnit": 2548,
            "src": "137:32:12",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "abstract": true,
            "baseContracts": [
              {
                "arguments": null,
                "baseName": {
                  "contractScope": null,
                  "id": 2385,
                  "name": "IERC3000Executor",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 2547,
                  "src": "208:16:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC3000Executor_$2547",
                    "typeString": "contract IERC3000Executor"
                  }
                },
                "id": 2386,
                "nodeType": "InheritanceSpecifier",
                "src": "208:16:12"
              },
              {
                "arguments": null,
                "baseName": {
                  "contractScope": null,
                  "id": 2387,
                  "name": "ERC165",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 2569,
                  "src": "226:6:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC165_$2569",
                    "typeString": "contract ERC165"
                  }
                },
                "id": 2388,
                "nodeType": "InheritanceSpecifier",
                "src": "226:6:12"
              }
            ],
            "contractDependencies": [
              2547,
              2569
            ],
            "contractKind": "contract",
            "documentation": null,
            "fullyImplemented": false,
            "id": 2412,
            "linearizedBaseContracts": [
              2412,
              2569,
              2547
            ],
            "name": "ERC3000Executor",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "constant": true,
                "id": 2393,
                "mutability": "constant",
                "name": "ERC3000_EXEC_INTERFACE_ID",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 2412,
                "src": "239:71:12",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes4",
                  "typeString": "bytes4"
                },
                "typeName": {
                  "id": 2389,
                  "name": "bytes4",
                  "nodeType": "ElementaryTypeName",
                  "src": "239:6:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  }
                },
                "value": {
                  "argumentTypes": null,
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 2390,
                      "name": "this",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -28,
                      "src": "292:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC3000Executor_$2412",
                        "typeString": "contract ERC3000Executor"
                      }
                    },
                    "id": 2391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "exec",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2536,
                    "src": "292:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_struct$_Action_$2275_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                      "typeString": "function (struct ERC3000Data.Action memory[] memory) external returns (bytes memory[] memory)"
                    }
                  },
                  "id": 2392,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "memberName": "selector",
                  "nodeType": "MemberAccess",
                  "referencedDeclaration": null,
                  "src": "292:18:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  }
                },
                "visibility": "internal"
              },
              {
                "baseFunctions": [
                  2568
                ],
                "body": {
                  "id": 2410,
                  "nodeType": "Block",
                  "src": "401:106:12",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 2403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2401,
                            "name": "_interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2395,
                            "src": "418:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 2402,
                            "name": "ERC3000_EXEC_INTERFACE_ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2393,
                            "src": "434:25:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "418:41:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2406,
                              "name": "_interfaceId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2395,
                              "src": "487:12:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2404,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -25,
                              "src": "463:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_super$_ERC3000Executor_$2412",
                                "typeString": "contract super ERC3000Executor"
                              }
                            },
                            "id": 2405,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "supportsInterface",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2568,
                            "src": "463:23:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$_t_bool_$",
                              "typeString": "function (bytes4) pure returns (bool)"
                            }
                          },
                          "id": 2407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "463:37:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "418:82:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "functionReturnParameters": 2400,
                      "id": 2409,
                      "nodeType": "Return",
                      "src": "411:89:12"
                    }
                  ]
                },
                "documentation": null,
                "functionSelector": "01ffc9a7",
                "id": 2411,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "supportsInterface",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 2397,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "365:8:12"
                },
                "parameters": {
                  "id": 2396,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2395,
                      "mutability": "mutable",
                      "name": "_interfaceId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2411,
                      "src": "344:19:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 2394,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "344:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "343:21:12"
                },
                "returnParameters": {
                  "id": 2400,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2399,
                      "mutability": "mutable",
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2411,
                      "src": "395:4:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2398,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "395:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "394:6:12"
                },
                "scope": 2412,
                "src": "317:190:12",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "public"
              }
            ],
            "scope": 2413,
            "src": "171:338:12"
          }
        ],
        "src": "43:467:12"
      },
      "id": 12
    },
    "erc3k/contracts/IERC3000.sol": {
      "ast": {
        "absolutePath": "erc3k/contracts/IERC3000.sol",
        "exportedSymbols": {
          "IERC3000": [
            2523
          ]
        },
        "id": 2524,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 2414,
            "literals": [
              "solidity",
              "^",
              "0.6",
              ".8"
            ],
            "nodeType": "PragmaDirective",
            "src": "43:23:13"
          },
          {
            "id": 2415,
            "literals": [
              "experimental",
              "ABIEncoderV2"
            ],
            "nodeType": "PragmaDirective",
            "src": "67:33:13"
          },
          {
            "absolutePath": "erc3k/contracts/ERC3000Data.sol",
            "file": "./ERC3000Data.sol",
            "id": 2416,
            "nodeType": "ImportDirective",
            "scope": 2524,
            "sourceUnit": 2380,
            "src": "102:27:13",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "absolutePath": "erc3k/contracts/IERC3000Executor.sol",
            "file": "./IERC3000Executor.sol",
            "id": 2417,
            "nodeType": "ImportDirective",
            "scope": 2524,
            "sourceUnit": 2548,
            "src": "130:32:13",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "abstract": true,
            "baseContracts": [],
            "contractDependencies": [],
            "contractKind": "contract",
            "documentation": null,
            "fullyImplemented": false,
            "id": 2523,
            "linearizedBaseContracts": [
              2523
            ],
            "name": "IERC3000",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "body": null,
                "documentation": null,
                "functionSelector": "25ddcbe0",
                "id": 2424,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "schedule",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 2420,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2419,
                      "mutability": "mutable",
                      "name": "container",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2424,
                      "src": "215:38:13",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Container_$2254_memory_ptr",
                        "typeString": "struct ERC3000Data.Container"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2418,
                        "name": "ERC3000Data.Container",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2254,
                        "src": "215:21:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Container_$2254_storage_ptr",
                          "typeString": "struct ERC3000Data.Container"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "214:40:13"
                },
                "returnParameters": {
                  "id": 2423,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2422,
                      "mutability": "mutable",
                      "name": "actionHash",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2424,
                      "src": "279:18:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2421,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "279:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "278:20:13"
                },
                "scope": 2523,
                "src": "197:102:13",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "public"
              },
              {
                "anonymous": false,
                "documentation": null,
                "id": 2432,
                "name": "Scheduled",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 2431,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2426,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "containerHash",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2432,
                      "src": "320:29:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2425,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "320:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2428,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "payload",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2432,
                      "src": "351:27:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Payload_$2268_memory_ptr",
                        "typeString": "struct ERC3000Data.Payload"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2427,
                        "name": "ERC3000Data.Payload",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2268,
                        "src": "351:19:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Payload_$2268_storage_ptr",
                          "typeString": "struct ERC3000Data.Payload"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2430,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "collateral",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2432,
                      "src": "380:33:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Collateral_$2293_memory_ptr",
                        "typeString": "struct ERC3000Data.Collateral"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2429,
                        "name": "ERC3000Data.Collateral",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2293,
                        "src": "380:22:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Collateral_$2293_storage_ptr",
                          "typeString": "struct ERC3000Data.Collateral"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "319:95:13"
                },
                "src": "304:111:13"
              },
              {
                "body": null,
                "documentation": null,
                "functionSelector": "ecb6cba6",
                "id": 2440,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "execute",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 2435,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2434,
                      "mutability": "mutable",
                      "name": "container",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2440,
                      "src": "438:38:13",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Container_$2254_memory_ptr",
                        "typeString": "struct ERC3000Data.Container"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2433,
                        "name": "ERC3000Data.Container",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2254,
                        "src": "438:21:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Container_$2254_storage_ptr",
                          "typeString": "struct ERC3000Data.Container"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "437:40:13"
                },
                "returnParameters": {
                  "id": 2439,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2438,
                      "mutability": "mutable",
                      "name": "execResults",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2440,
                      "src": "502:26:13",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2436,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "502:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 2437,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "502:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "501:28:13"
                },
                "scope": 2523,
                "src": "421:109:13",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "public"
              },
              {
                "anonymous": false,
                "documentation": null,
                "id": 2449,
                "name": "Executed",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 2448,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2442,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "containerHash",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2449,
                      "src": "550:29:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2441,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "550:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2444,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "actor",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2449,
                      "src": "581:21:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2443,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "581:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2447,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "execResults",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2449,
                      "src": "604:19:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2445,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "604:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 2446,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "604:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "549:75:13"
                },
                "src": "535:90:13"
              },
              {
                "body": null,
                "documentation": null,
                "functionSelector": "5decc190",
                "id": 2458,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "challenge",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 2454,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2451,
                      "mutability": "mutable",
                      "name": "container",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2458,
                      "src": "650:38:13",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Container_$2254_memory_ptr",
                        "typeString": "struct ERC3000Data.Container"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2450,
                        "name": "ERC3000Data.Container",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2254,
                        "src": "650:21:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Container_$2254_storage_ptr",
                          "typeString": "struct ERC3000Data.Container"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2453,
                      "mutability": "mutable",
                      "name": "reason",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2458,
                      "src": "690:19:13",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2452,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "690:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "649:61:13"
                },
                "returnParameters": {
                  "id": 2457,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2456,
                      "mutability": "mutable",
                      "name": "resolverId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2458,
                      "src": "735:18:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2455,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "735:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "734:20:13"
                },
                "scope": 2523,
                "src": "631:124:13",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "public"
              },
              {
                "anonymous": false,
                "documentation": null,
                "id": 2470,
                "name": "Challenged",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 2469,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2460,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "containerHash",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2470,
                      "src": "777:29:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2459,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "777:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2462,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "actor",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2470,
                      "src": "808:21:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2461,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "808:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2464,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "reason",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2470,
                      "src": "831:12:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2463,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "831:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2466,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "resolverId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2470,
                      "src": "845:18:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2465,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "845:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2468,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "collateral",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2470,
                      "src": "865:33:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Collateral_$2293_memory_ptr",
                        "typeString": "struct ERC3000Data.Collateral"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2467,
                        "name": "ERC3000Data.Collateral",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2293,
                        "src": "865:22:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Collateral_$2293_storage_ptr",
                          "typeString": "struct ERC3000Data.Collateral"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "776:123:13"
                },
                "src": "760:140:13"
              },
              {
                "body": null,
                "documentation": null,
                "functionSelector": "0494812a",
                "id": 2480,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "resolve",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 2475,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2472,
                      "mutability": "mutable",
                      "name": "container",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2480,
                      "src": "923:38:13",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Container_$2254_memory_ptr",
                        "typeString": "struct ERC3000Data.Container"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2471,
                        "name": "ERC3000Data.Container",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2254,
                        "src": "923:21:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Container_$2254_storage_ptr",
                          "typeString": "struct ERC3000Data.Container"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2474,
                      "mutability": "mutable",
                      "name": "resolverId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2480,
                      "src": "963:18:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2473,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "963:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "922:60:13"
                },
                "returnParameters": {
                  "id": 2479,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2478,
                      "mutability": "mutable",
                      "name": "execResults",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2480,
                      "src": "1007:26:13",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2476,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1007:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 2477,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "1007:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1006:28:13"
                },
                "scope": 2523,
                "src": "906:129:13",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "public"
              },
              {
                "anonymous": false,
                "documentation": null,
                "id": 2488,
                "name": "Resolved",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 2487,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2482,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "containerHash",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2488,
                      "src": "1055:29:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2481,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1055:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2484,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "actor",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2488,
                      "src": "1086:21:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2483,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1086:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2486,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "approved",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2488,
                      "src": "1109:13:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2485,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1109:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1054:69:13"
                },
                "src": "1040:84:13"
              },
              {
                "body": null,
                "documentation": null,
                "functionSelector": "a0e975cb",
                "id": 2497,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "veto",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 2495,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2490,
                      "mutability": "mutable",
                      "name": "payloadHash",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2497,
                      "src": "1144:19:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2489,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1144:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2492,
                      "mutability": "mutable",
                      "name": "config",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2497,
                      "src": "1165:32:13",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Config_$2288_memory_ptr",
                        "typeString": "struct ERC3000Data.Config"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2491,
                        "name": "ERC3000Data.Config",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2288,
                        "src": "1165:18:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$2288_storage_ptr",
                          "typeString": "struct ERC3000Data.Config"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2494,
                      "mutability": "mutable",
                      "name": "reason",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2497,
                      "src": "1199:19:13",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2493,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1199:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1143:76:13"
                },
                "returnParameters": {
                  "id": 2496,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1234:0:13"
                },
                "scope": 2523,
                "src": "1130:105:13",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "public"
              },
              {
                "anonymous": false,
                "documentation": null,
                "id": 2507,
                "name": "Vetoed",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 2506,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2499,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "containerHash",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2507,
                      "src": "1253:29:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2498,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1253:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2501,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "actor",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2507,
                      "src": "1284:21:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2500,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1284:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2503,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "reason",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2507,
                      "src": "1307:12:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2502,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1307:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2505,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "collateral",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2507,
                      "src": "1321:33:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Collateral_$2293_memory_ptr",
                        "typeString": "struct ERC3000Data.Collateral"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2504,
                        "name": "ERC3000Data.Collateral",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2293,
                        "src": "1321:22:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Collateral_$2293_storage_ptr",
                          "typeString": "struct ERC3000Data.Collateral"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1252:103:13"
                },
                "src": "1240:116:13"
              },
              {
                "body": null,
                "documentation": null,
                "functionSelector": "aa455d9f",
                "id": 2514,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "configure",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 2510,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2509,
                      "mutability": "mutable",
                      "name": "config",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2514,
                      "src": "1381:32:13",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Config_$2288_memory_ptr",
                        "typeString": "struct ERC3000Data.Config"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2508,
                        "name": "ERC3000Data.Config",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2288,
                        "src": "1381:18:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$2288_storage_ptr",
                          "typeString": "struct ERC3000Data.Config"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1380:34:13"
                },
                "returnParameters": {
                  "id": 2513,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2512,
                      "mutability": "mutable",
                      "name": "configHash",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2514,
                      "src": "1439:18:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2511,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1439:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1438:20:13"
                },
                "scope": 2523,
                "src": "1362:97:13",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "public"
              },
              {
                "anonymous": false,
                "documentation": null,
                "id": 2522,
                "name": "Configured",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 2521,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2516,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "containerHash",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2522,
                      "src": "1481:29:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2515,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1481:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2518,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "actor",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2522,
                      "src": "1512:21:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2517,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1512:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2520,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "config",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2522,
                      "src": "1535:25:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Config_$2288_memory_ptr",
                        "typeString": "struct ERC3000Data.Config"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2519,
                        "name": "ERC3000Data.Config",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2288,
                        "src": "1535:18:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$2288_storage_ptr",
                          "typeString": "struct ERC3000Data.Config"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "1480:81:13"
                },
                "src": "1464:98:13"
              }
            ],
            "scope": 2524,
            "src": "164:1400:13"
          }
        ],
        "src": "43:1521:13"
      },
      "id": 13
    },
    "erc3k/contracts/IERC3000Executor.sol": {
      "ast": {
        "absolutePath": "erc3k/contracts/IERC3000Executor.sol",
        "exportedSymbols": {
          "IERC3000Executor": [
            2547
          ]
        },
        "id": 2548,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 2525,
            "literals": [
              "solidity",
              "^",
              "0.6",
              ".8"
            ],
            "nodeType": "PragmaDirective",
            "src": "43:23:14"
          },
          {
            "id": 2526,
            "literals": [
              "experimental",
              "ABIEncoderV2"
            ],
            "nodeType": "PragmaDirective",
            "src": "67:33:14"
          },
          {
            "absolutePath": "erc3k/contracts/ERC3000Data.sol",
            "file": "./ERC3000Data.sol",
            "id": 2527,
            "nodeType": "ImportDirective",
            "scope": 2548,
            "sourceUnit": 2380,
            "src": "102:27:14",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "abstract": true,
            "baseContracts": [],
            "contractDependencies": [],
            "contractKind": "contract",
            "documentation": null,
            "fullyImplemented": false,
            "id": 2547,
            "linearizedBaseContracts": [
              2547
            ],
            "name": "IERC3000Executor",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "body": null,
                "documentation": null,
                "functionSelector": "5c3e9760",
                "id": 2536,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "exec",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 2531,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2530,
                      "mutability": "mutable",
                      "name": "actions",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2536,
                      "src": "186:35:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Action_$2275_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct ERC3000Data.Action[]"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 2528,
                          "name": "ERC3000Data.Action",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 2275,
                          "src": "186:18:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Action_$2275_storage_ptr",
                            "typeString": "struct ERC3000Data.Action"
                          }
                        },
                        "id": 2529,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "186:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Action_$2275_storage_$dyn_storage_ptr",
                          "typeString": "struct ERC3000Data.Action[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "185:37:14"
                },
                "returnParameters": {
                  "id": 2535,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2534,
                      "mutability": "mutable",
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2536,
                      "src": "247:14:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2532,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "247:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 2533,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "247:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "246:16:14"
                },
                "scope": 2547,
                "src": "172:91:14",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "public"
              },
              {
                "anonymous": false,
                "documentation": null,
                "id": 2546,
                "name": "Executed",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 2545,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2538,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "actor",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2546,
                      "src": "284:21:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2537,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "284:7:14",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2541,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "actions",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2546,
                      "src": "307:28:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Action_$2275_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct ERC3000Data.Action[]"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 2539,
                          "name": "ERC3000Data.Action",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 2275,
                          "src": "307:18:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Action_$2275_storage_ptr",
                            "typeString": "struct ERC3000Data.Action"
                          }
                        },
                        "id": 2540,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "307:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Action_$2275_storage_$dyn_storage_ptr",
                          "typeString": "struct ERC3000Data.Action[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2544,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "execResults",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2546,
                      "src": "337:19:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2542,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "337:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 2543,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "337:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "283:74:14"
                },
                "src": "269:89:14"
              }
            ],
            "scope": 2548,
            "src": "131:229:14"
          }
        ],
        "src": "43:318:14"
      },
      "id": 14
    },
    "erc3k/contracts/lib/erc165/ERC165.sol": {
      "ast": {
        "absolutePath": "erc3k/contracts/lib/erc165/ERC165.sol",
        "exportedSymbols": {
          "ERC165": [
            2569
          ]
        },
        "id": 2570,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 2549,
            "literals": [
              "solidity",
              "^",
              "0.6",
              ".8"
            ],
            "nodeType": "PragmaDirective",
            "src": "43:23:15"
          },
          {
            "abstract": true,
            "baseContracts": [],
            "contractDependencies": [],
            "contractKind": "contract",
            "documentation": null,
            "fullyImplemented": true,
            "id": 2569,
            "linearizedBaseContracts": [
              2569
            ],
            "name": "ERC165",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "constant": true,
                "id": 2555,
                "mutability": "constant",
                "name": "ERC165_INTERFACE_ID",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 2569,
                "src": "141:65:15",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes4",
                  "typeString": "bytes4"
                },
                "typeName": {
                  "id": 2550,
                  "name": "bytes4",
                  "nodeType": "ElementaryTypeName",
                  "src": "141:6:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  }
                },
                "value": {
                  "argumentTypes": null,
                  "arguments": [
                    {
                      "argumentTypes": null,
                      "hexValue": "30783031666663396137",
                      "id": 2553,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "195:10:15",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_33540519_by_1",
                        "typeString": "int_const 33540519"
                      },
                      "value": "0x01ffc9a7"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_rational_33540519_by_1",
                        "typeString": "int_const 33540519"
                      }
                    ],
                    "id": 2552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "188:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_bytes4_$",
                      "typeString": "type(bytes4)"
                    },
                    "typeName": {
                      "id": 2551,
                      "name": "bytes4",
                      "nodeType": "ElementaryTypeName",
                      "src": "188:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      }
                    }
                  },
                  "id": 2554,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "188:18:15",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  }
                },
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 2567,
                  "nodeType": "Block",
                  "src": "576:59:15",
                  "statements": [
                    {
                      "expression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 2565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2563,
                          "name": "_interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2558,
                          "src": "593:12:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2564,
                          "name": "ERC165_INTERFACE_ID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2555,
                          "src": "609:19:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "593:35:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "functionReturnParameters": 2562,
                      "id": 2566,
                      "nodeType": "Return",
                      "src": "586:42:15"
                    }
                  ]
                },
                "documentation": {
                  "id": 2556,
                  "nodeType": "StructuredDocumentation",
                  "src": "213:275:15",
                  "text": "@dev Query if a contract implements a certain interface\n@param _interfaceId The interface identifier being queried, as specified in ERC-165\n@return True if the contract implements the requested interface and if its not 0xffffffff, false otherwise"
                },
                "functionSelector": "01ffc9a7",
                "id": 2568,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "supportsInterface",
                "nodeType": "FunctionDefinition",
                "overrides": null,
                "parameters": {
                  "id": 2559,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2558,
                      "mutability": "mutable",
                      "name": "_interfaceId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2568,
                      "src": "520:19:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 2557,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "520:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "519:21:15"
                },
                "returnParameters": {
                  "id": 2562,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2561,
                      "mutability": "mutable",
                      "name": "",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2568,
                      "src": "570:4:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2560,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "570:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "src": "569:6:15"
                },
                "scope": 2569,
                "src": "493:142:15",
                "stateMutability": "pure",
                "virtual": true,
                "visibility": "public"
              }
            ],
            "scope": 2570,
            "src": "68:569:15"
          }
        ],
        "src": "43:594:15"
      },
      "id": 15
    }
  }
}